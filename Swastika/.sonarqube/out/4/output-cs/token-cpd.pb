√Ë
SG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiAccountController.cs
	namespace$$ 	
Swastika$$
 
.$$ 
Cms$$ 
.$$ 
Api$$ 
.$$ 
Controllers$$ &
{%% 
['' 
	Authorize'' 
('' !
AuthenticationSchemes'' $
=''% &
JwtBearerDefaults''' 8
.''8 9 
AuthenticationScheme''9 M
,''M N
Roles''O T
=''U V
$str''W c
)''c d
]''d e
[(( 
Route(( 

(((
 
$str(( 
)(( 
](( 
public)) 

class))  
ApiAccountController)) %
:))& '
BaseApiController))( 9
{** 
private++ 
readonly++ 
UserManager++ $
<++$ %
ApplicationUser++% 4
>++4 5
_userManager++6 B
;++B C
private,, 
readonly,, 
SignInManager,, &
<,,& '
ApplicationUser,,' 6
>,,6 7
_signInManager,,8 F
;,,F G
private-- 
readonly-- 
RoleManager-- $
<--$ %
IdentityRole--% 1
>--1 2
_roleManager--3 ?
;--? @
private.. 
readonly.. 
ILogger..  
_logger..! (
;..( )
public00  
ApiAccountController00 #
(00# $
UserManager11 
<11 
ApplicationUser11 '
>11' (
userManager11) 4
,114 5
SignInManager22 
<22 
ApplicationUser22 )
>22) *
signInManager22+ 8
,228 9
RoleManager33 
<33 
IdentityRole33 $
>33$ %
roleManager33& 1
,331 2
ILogger44 
<44  
ApiAccountController44 (
>44( )
logger44* 0
)440 1
{55 	
_userManager66 
=66 
userManager66 &
;66& '
_signInManager77 
=77 
signInManager77 *
;77* +
_roleManager88 
=88 
roleManager88 &
;88& '
_logger99 
=99 
logger99 
;99 
}:: 	
[<< 	
TempData<<	 
]<< 
public== 
string== 
ErrorMessage== "
{==# $
get==% (
;==( )
set==* -
;==- .
}==/ 0
[AA 	
	AuthorizeAA	 
(AA !
AuthenticationSchemesAA (
=AA) *
JwtBearerDefaultsAA+ <
.AA< = 
AuthenticationSchemeAA= Q
)AAQ R
]AAR S
[BB 	
RouteBB	 
(BB 
$strBB 
)BB 
]BB 
[CC 	
HttpGetCC	 
,CC 
HttpPostCC 
]CC 
publicDD 
asyncDD 
TaskDD 
<DD 
RepositoryResponseDD ,
<DD, -
boolDD- 1
>DD1 2
>DD2 3
LogoutDD4 :
(DD: ;
)DD; <
{EE 	
varFF 
resultFF 
=FF 
newFF 
RepositoryResponseFF /
<FF/ 0
boolFF0 4
>FF4 5
(FF5 6
)FF6 7
{FF8 9
	IsSucceedFF: C
=FFD E
trueFFF J
,FFJ K
DataFFL P
=FFQ R
trueFFS W
}FFX Y
;FFY Z
awaitGG 
_signInManagerGG  
.GG  !
SignOutAsyncGG! -
(GG- .
)GG. /
.GG/ 0
ConfigureAwaitGG0 >
(GG> ?
falseGG? D
)GGD E
;GGE F
awaitHH 
HttpContextHH 
.HH 
SignOutAsyncHH *
(HH* +(
CookieAuthenticationDefaultsHH+ G
.HHG H 
AuthenticationSchemeHHH \
)HH\ ]
.HH] ^
ConfigureAwaitHH^ l
(HHl m
falseHHm r
)HHr s
;HHs t
awaitII !
RefreshTokenViewModelII '
.II' (

RepositoryII( 2
.II2 3
RemoveModelAsyncII3 C
(IIC D
rIID E
=>IIF H
rIII J
.IIJ K
UsernameIIK S
==IIT V
UserIIW [
.II[ \
IdentityII\ d
.IId e
NameIIe i
)IIi j
;IIj k
returnJJ 
resultJJ 
;JJ 
}KK 	
[MM 	
RouteMM	 
(MM 
$strMM 
)MM 
]MM 
[NN 	
HttpPostNN	 
]NN 
[OO 	
AllowAnonymousOO	 
]OO 
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
RepositoryResponseQQ ,
<QQ, - 
AccessTokenViewModelQQ- A
>QQA B
>QQB C
LoginQQD I
(QQI J
[QQJ K
FromBodyQQK S
]QQS T
LoginViewModelQQU c
modelQQd i
)QQi j
{RR 	
RepositoryResponseSS 
<SS  
AccessTokenViewModelSS 3
>SS3 4
loginResultSS5 @
=SSA B
newSSC F
RepositoryResponseSSG Y
<SSY Z 
AccessTokenViewModelSSZ n
>SSn o
(SSo p
)SSp q
;SSq r
ifTT 
(TT 

ModelStateTT 
.TT 
IsValidTT "
)TT" #
{UU 
varXX 
resultXX 
=XX 
awaitXX "
_signInManagerXX# 1
.XX1 2
PasswordSignInAsyncXX2 E
(XXE F
modelYY 
.YY 
UserNameYY "
,YY" #
modelYY$ )
.YY) *
PasswordYY* 2
,YY2 3
isPersistentYY4 @
:YY@ A
modelYYB G
.YYG H

RememberMeYYH R
,YYR S
lockoutOnFailureYYT d
:YYd e
falseYYf k
)YYk l
.YYl m
ConfigureAwaitYYm {
(YY{ |
false	YY| Å
)
YYÅ Ç
;
YYÇ É
ifZZ 
(ZZ 
resultZZ 
.ZZ 
	SucceededZZ $
)ZZ$ %
{[[ 
var\\ 
user\\ 
=\\ 
await\\ $
_userManager\\% 1
.\\1 2
FindByNameAsync\\2 A
(\\A B
model\\B G
.\\G H
UserName\\H P
)\\P Q
.\\Q R
ConfigureAwait\\R `
(\\` a
false\\a f
)\\f g
;\\g h
var^^ 
token^^ 
=^^ 
await^^  %$
GenerateAccessTokenAsync^^& >
(^^> ?
user^^? C
,^^C D
model^^E J
.^^J K

RememberMe^^K U
)^^U V
;^^V W
if__ 
(__ 
token__ 
!=__  
null__! %
)__% &
{`` 
varaa 
infoaa  
=aa! "
awaitaa# (
InfoUserViewModelaa) :
.aa: ;

Repositoryaa; E
.aaE F
GetSingleModelAsyncaaF Y
(aaY Z
uaaZ [
=>aa\ ^
uaa_ `
.aa` a
Usernameaaa i
==aaj l
useraam q
.aaq r
UserNameaar z
)aaz {
;aa{ |
ifbb 
(bb 
!bb 
infobb !
.bb! "
	IsSucceedbb" +
)bb+ ,
{cc 
infodd  
.dd  !
Datadd! %
=dd& '
newdd( +
InfoUserViewModeldd, =
(dd= >
)dd> ?
;dd? @
}ee 
tokenff 
.ff 
UserDataff &
=ff' (
infoff) -
.ff- .
Dataff. 2
;ff2 3
loginResulthh #
.hh# $
	IsSucceedhh$ -
=hh. /
truehh0 4
;hh4 5
loginResultii #
.ii# $
Statusii$ *
=ii+ ,
$numii- .
;ii. /
loginResultjj #
.jj# $
Datajj$ (
=jj) *
tokenjj+ 0
;jj0 1
_loggerkk 
.kk  
LogInformationkk  .
(kk. /
$strkk/ @
)kk@ A
;kkA B
returnll 
loginResultll *
;ll* +
}mm 
elsenn 
{oo 
returnpp 
loginResultpp *
;pp* +
}qq 
}rr 
elsess 
{tt 
loginResultuu 
.uu  
Errorsuu  &
.uu& '
Adduu' *
(uu* +
$struu+ 9
)uu9 :
;uu: ;
returnvv 
loginResultvv &
;vv& '
}ww 
}xx 
elseyy 
{zz 
return{{ 
loginResult{{ "
;{{" #
}|| 
}}} 	
[ 	
Route	 
( 
$str /
)/ 0
]0 1
[
ÄÄ 	
HttpGet
ÄÄ	 
]
ÄÄ 
[
ÅÅ 	
AllowAnonymous
ÅÅ	 
]
ÅÅ 
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
<
ÇÇ  
RepositoryResponse
ÇÇ ,
<
ÇÇ, -"
AccessTokenViewModel
ÇÇ- A
>
ÇÇA B
>
ÇÇB C
RefreshToken
ÇÇD P
(
ÇÇP Q
string
ÇÇQ W
refreshTokenId
ÇÇX f
)
ÇÇf g
{
ÉÉ 	 
RepositoryResponse
ÑÑ 
<
ÑÑ "
AccessTokenViewModel
ÑÑ 3
>
ÑÑ3 4
result
ÑÑ5 ;
=
ÑÑ< =
new
ÑÑ> A 
RepositoryResponse
ÑÑB T
<
ÑÑT U"
AccessTokenViewModel
ÑÑU i
>
ÑÑi j
(
ÑÑj k
)
ÑÑk l
;
ÑÑl m
var
ÖÖ 
getRefreshToken
ÖÖ 
=
ÖÖ  !
await
ÖÖ" '#
RefreshTokenViewModel
ÖÖ( =
.
ÖÖ= >

Repository
ÖÖ> H
.
ÖÖH I!
GetSingleModelAsync
ÖÖI \
(
ÖÖ\ ]
t
ÖÖ] ^
=>
ÖÖ_ a
t
ÖÖb c
.
ÖÖc d
Id
ÖÖd f
==
ÖÖg i
refreshTokenId
ÖÖj x
)
ÖÖx y
;
ÖÖy z
if
ÜÜ 
(
ÜÜ 
getRefreshToken
ÜÜ 
.
ÜÜ  
	IsSucceed
ÜÜ  )
)
ÜÜ) *
{
áá 
var
àà 
oldToken
àà 
=
àà 
getRefreshToken
àà .
.
àà. /
Data
àà/ 3
;
àà3 4
if
ââ 
(
ââ 
oldToken
ââ 
.
ââ 

ExpiresUtc
ââ '
>
ââ( )
DateTime
ââ* 2
.
ââ2 3
UtcNow
ââ3 9
)
ââ9 :
{
ää 
var
ãã 
user
ãã 
=
ãã 
await
ãã $
_userManager
ãã% 1
.
ãã1 2
FindByEmailAsync
ãã2 B
(
ããB C
oldToken
ããC K
.
ããK L
Email
ããL Q
)
ããQ R
;
ããR S
var
åå 
token
åå 
=
åå 
await
åå  %&
GenerateAccessTokenAsync
åå& >
(
åå> ?
user
åå? C
,
ååC D
true
ååE I
)
ååI J
;
ååJ K
if
çç 
(
çç 
token
çç 
!=
çç  
null
çç! %
)
çç% &
{
éé 
await
èè 
oldToken
èè &
.
èè& '
RemoveModelAsync
èè' 7
(
èè7 8
)
èè8 9
;
èè9 :
}
êê 
result
ëë 
.
ëë 
	IsSucceed
ëë $
=
ëë% &
true
ëë' +
;
ëë+ ,
result
íí 
.
íí 
Data
íí 
=
íí  !
token
íí" '
;
íí' (
return
ìì 
result
ìì !
;
ìì! "
}
îî 
else
ïï 
{
ññ 
await
óó 
oldToken
óó "
.
óó" #
RemoveModelAsync
óó# 3
(
óó3 4
)
óó4 5
;
óó5 6
result
òò 
.
òò 
Errors
òò !
.
òò! "
Add
òò" %
(
òò% &
$str
òò& 5
)
òò5 6
;
òò6 7
return
ôô 
result
ôô !
;
ôô! "
}
öö 
}
õõ 
else
úú 
{
ùù 
result
ûû 
.
ûû 
Errors
ûû 
.
ûû 
Add
ûû !
(
ûû! "
$str
ûû" 1
)
ûû1 2
;
ûû2 3
return
üü 
result
üü 
;
üü 
}
†† 
}
°° 	
[
££ 	
Route
££	 
(
££ 
$str
££ 
)
££ 
]
££ 
[
§§ 	
HttpPost
§§	 
]
§§ 
[
•• 	
AllowAnonymous
••	 
]
•• 
public
¶¶ 
async
¶¶ 
Task
¶¶ 
<
¶¶  
RepositoryResponse
¶¶ ,
<
¶¶, -"
AccessTokenViewModel
¶¶- A
>
¶¶A B
>
¶¶B C
Register
¶¶D L
(
¶¶L M
[
¶¶M N
FromBody
¶¶N V
]
¶¶V W
BEUserViewModel
¶¶X g
model
¶¶h m
)
¶¶m n
{
ßß 	 
RepositoryResponse
®® 
<
®® "
AccessTokenViewModel
®® 3
>
®®3 4
result
®®5 ;
=
®®< =
new
®®> A 
RepositoryResponse
®®B T
<
®®T U"
AccessTokenViewModel
®®U i
>
®®i j
(
®®j k
)
®®k l
;
®®l m
if
©© 
(
©© 

ModelState
©© 
.
©© 
IsValid
©© "
)
©©" #
{
™™ 
var
´´ 
user
´´ 
=
´´ 
new
´´ 
ApplicationUser
´´ .
{
¨¨ 
UserName
≠≠ 
=
≠≠ 
model
≠≠ $
.
≠≠$ %
Username
≠≠% -
,
≠≠- .
Email
ÆÆ 
=
ÆÆ 
model
ÆÆ !
.
ÆÆ! "
Email
ÆÆ" '
,
ÆÆ' (
	FirstName
ØØ 
=
ØØ 
model
ØØ  %
.
ØØ% &
	FirstName
ØØ& /
,
ØØ/ 0
LastName
∞∞ 
=
∞∞ 
model
∞∞ $
.
∞∞$ %
LastName
∞∞% -
,
∞∞- .
JoinDate
±± 
=
±± 
DateTime
±± '
.
±±' (
UtcNow
±±( .
}
≤≤ 
;
≤≤ 
var
≥≥ 
createResult
≥≥  
=
≥≥! "
await
≥≥# (
_userManager
≥≥) 5
.
≥≥5 6
CreateAsync
≥≥6 A
(
≥≥A B
user
≥≥B F
,
≥≥F G
password
≥≥H P
:
≥≥P Q
model
≥≥R W
.
≥≥W X
Password
≥≥X `
)
≥≥` a
.
≥≥a b
ConfigureAwait
≥≥b p
(
≥≥p q
false
≥≥q v
)
≥≥v w
;
≥≥w x
if
¥¥ 
(
¥¥ 
createResult
¥¥  
.
¥¥  !
	Succeeded
¥¥! *
)
¥¥* +
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ *
(
∂∂* +
$str
∂∂+ V
)
∂∂V W
;
∂∂W X
user
∏∏ 
=
∏∏ 
await
∏∏  
_userManager
∏∏! -
.
∏∏- .
FindByEmailAsync
∏∏. >
(
∏∏> ?
model
∏∏? D
.
∏∏D E
Email
∏∏E J
)
∏∏J K
.
∏∏K L
ConfigureAwait
∏∏L Z
(
∏∏Z [
false
∏∏[ `
)
∏∏` a
;
∏∏a b
model
ππ 
.
ππ 
Id
ππ 
=
ππ 
user
ππ #
.
ππ# $
Id
ππ$ &
;
ππ& '
model
∫∫ 
.
∫∫ 
CreatedDateTime
∫∫ )
=
∫∫* +
DateTime
∫∫, 4
.
∫∫4 5
UtcNow
∫∫5 ;
;
∫∫; <
await
ΩΩ 
model
ΩΩ 
.
ΩΩ  
SaveModelAsync
ΩΩ  .
(
ΩΩ. /
)
ΩΩ/ 0
;
ΩΩ0 1
if
ææ 
(
ææ 
_userManager
ææ $
.
ææ$ %
Users
ææ% *
.
ææ* +
Count
ææ+ 0
(
ææ0 1
)
ææ1 2
==
ææ2 4
$num
ææ4 5
)
ææ5 6
{
øø 
await
¿¿ 
_userManager
¿¿ *
.
¿¿* +
AddToRoleAsync
¿¿+ 9
(
¿¿9 :
user
¿¿: >
,
¿¿> ?
$str
¿¿@ L
)
¿¿L M
;
¿¿M N
}
¡¡ 
var
¬¬ 
token
¬¬ 
=
¬¬ 
await
¬¬  %&
GenerateAccessTokenAsync
¬¬& >
(
¬¬> ?
user
¬¬? C
,
¬¬C D
true
¬¬E I
)
¬¬I J
;
¬¬J K
if
√√ 
(
√√ 
token
√√ 
!=
√√  
null
√√! %
)
√√% &
{
ƒƒ 
result
≈≈ 
.
≈≈ 
	IsSucceed
≈≈ (
=
≈≈) *
true
≈≈+ /
;
≈≈/ 0
result
∆∆ 
.
∆∆ 
Data
∆∆ #
=
∆∆$ %
token
∆∆& +
;
∆∆+ ,
_logger
«« 
.
««  
LogInformation
««  .
(
««. /
$str
««/ @
)
««@ A
;
««A B
return
»» 
result
»» %
;
»»% &
}
…… 
else
   
{
ÀÀ 
return
ÃÃ 
result
ÃÃ %
;
ÃÃ% &
}
ÕÕ 
}
ŒŒ 
else
œœ 
{
–– 
foreach
—— 
(
—— 
var
——  
error
——! &
in
——' )
createResult
——* 6
.
——6 7
Errors
——7 =
)
——= >
{
““ 
result
”” 
.
”” 
Errors
”” %
.
””% &
Add
””& )
(
””) *
error
””* /
.
””/ 0
Description
””0 ;
)
””; <
;
””< =
}
‘‘ 
return
’’ 
result
’’ !
;
’’! "
}
÷÷ 
}
◊◊ 
return
ŸŸ 
result
ŸŸ 
;
ŸŸ 
}
⁄⁄ 	
[
‹‹ 	
	Authorize
‹‹	 
(
‹‹ #
AuthenticationSchemes
‹‹ (
=
‹‹) *
JwtBearerDefaults
‹‹+ <
.
‹‹< ="
AuthenticationScheme
‹‹= Q
,
‹‹Q R
Roles
›› 
=
›› 
$str
›› 
)
›› 
]
›› 
[
ﬁﬁ 	
Route
ﬁﬁ	 
(
ﬁﬁ 
$str
ﬁﬁ 
)
ﬁﬁ 
]
ﬁﬁ 
[
ﬂﬂ 	
HttpPost
ﬂﬂ	 
]
ﬂﬂ 
public
‡‡ 
async
‡‡ 
Task
‡‡ 
<
‡‡  
RepositoryResponse
‡‡ ,
<
‡‡, -
bool
‡‡- 1
>
‡‡1 2
>
‡‡2 3
ManageUserInRole
‡‡4 D
(
‡‡D E
[
‡‡E F
FromBody
‡‡F N
]
‡‡N O
UserRoleModel
‡‡O \
model
‡‡] b
)
‡‡b c
{
·· 	
var
‚‚ 
role
‚‚ 
=
‚‚ 
await
‚‚ 
_roleManager
‚‚ )
.
‚‚) *
FindByIdAsync
‚‚* 7
(
‚‚7 8
model
‚‚8 =
.
‚‚= >
RoleId
‚‚> D
)
‚‚D E
;
‚‚E F
var
„„ 
result
„„ 
=
„„ 
new
„„  
RepositoryResponse
„„ /
<
„„/ 0
bool
„„0 4
>
„„4 5
(
„„5 6
)
„„6 7
;
„„7 8
List
ÂÂ 
<
ÂÂ 
string
ÂÂ 
>
ÂÂ 
errors
ÂÂ 
=
ÂÂ  !
new
ÂÂ" %
List
ÂÂ& *
<
ÂÂ* +
string
ÂÂ+ 1
>
ÂÂ1 2
(
ÂÂ2 3
)
ÂÂ3 4
;
ÂÂ4 5
if
ÁÁ 
(
ÁÁ 
role
ÁÁ 
==
ÁÁ 
null
ÁÁ 
)
ÁÁ 
{
ËË 
errors
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
$"
ÈÈ 
Role: 
ÈÈ #
{
ÈÈ# $
model
ÈÈ$ )
.
ÈÈ) *
RoleId
ÈÈ* 0
}
ÈÈ0 1
 does not exists
ÈÈ1 A
"
ÈÈA B
)
ÈÈB C
;
ÈÈC D
}
ÍÍ 
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
model
ÎÎ 
.
ÎÎ 
IsUserInRole
ÎÎ '
)
ÎÎ' (
{
ÏÏ 
var
ÌÌ 
appUser
ÌÌ 
=
ÌÌ 
await
ÌÌ #
_userManager
ÌÌ$ 0
.
ÌÌ0 1
FindByIdAsync
ÌÌ1 >
(
ÌÌ> ?
model
ÌÌ? D
.
ÌÌD E
UserId
ÌÌE K
)
ÌÌK L
;
ÌÌL M
if
ÔÔ 
(
ÔÔ 
appUser
ÔÔ 
==
ÔÔ 
null
ÔÔ #
)
ÔÔ# $
{
 
errors
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
$"
ÒÒ !
User: 
ÒÒ! '
{
ÒÒ' (
model
ÒÒ( -
.
ÒÒ- .
UserId
ÒÒ. 4
}
ÒÒ4 5
 does not exists
ÒÒ5 E
"
ÒÒE F
)
ÒÒF G
;
ÒÒG H
}
ÚÚ 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 
(
ÛÛ 
await
ÛÛ  
_userManager
ÛÛ! -
.
ÛÛ- .
IsInRoleAsync
ÛÛ. ;
(
ÛÛ; <
appUser
ÛÛ< C
,
ÛÛC D
role
ÛÛE I
.
ÛÛI J
Name
ÛÛJ N
)
ÛÛN O
)
ÛÛO P
)
ÛÛP Q
{
ÙÙ 
var
ıı 
	addResult
ıı !
=
ıı" #
await
ıı$ )
_userManager
ıı* 6
.
ıı6 7
AddToRoleAsync
ıı7 E
(
ııE F
appUser
ııF M
,
ııM N
role
ııO S
.
ııS T
Name
ııT X
)
ııX Y
;
ııY Z
if
˜˜ 
(
˜˜ 
!
˜˜ 
	addResult
˜˜ "
.
˜˜" #
	Succeeded
˜˜# ,
)
˜˜, -
{
¯¯ 
errors
˘˘ 
.
˘˘ 
Add
˘˘ "
(
˘˘" #
$"
˘˘# %
User: 
˘˘% +
{
˘˘+ ,
model
˘˘, 1
.
˘˘1 2
UserId
˘˘2 8
}
˘˘8 9)
 could not be added to role
˘˘9 T
"
˘˘T U
)
˘˘U V
;
˘˘V W
}
˙˙ 
}
˚˚ 
}
¸¸ 
else
˝˝ 
{
˛˛ 
var
ˇˇ 
appUser
ˇˇ 
=
ˇˇ 
await
ˇˇ #
_userManager
ˇˇ$ 0
.
ˇˇ0 1
FindByIdAsync
ˇˇ1 >
(
ˇˇ> ?
model
ˇˇ? D
.
ˇˇD E
UserId
ˇˇE K
)
ˇˇK L
;
ˇˇL M
if
ÅÅ 
(
ÅÅ 
appUser
ÅÅ 
==
ÅÅ 
null
ÅÅ #
)
ÅÅ# $
{
ÇÇ 
errors
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
$"
ÉÉ !
User: 
ÉÉ! '
{
ÉÉ' (
model
ÉÉ( -
.
ÉÉ- .
UserId
ÉÉ. 4
}
ÉÉ4 5
 does not exists
ÉÉ5 E
"
ÉÉE F
)
ÉÉF G
;
ÉÉG H
}
ÑÑ 
var
ÜÜ 
removeResult
ÜÜ  
=
ÜÜ! "
await
ÜÜ# (
_userManager
ÜÜ) 5
.
ÜÜ5 6!
RemoveFromRoleAsync
ÜÜ6 I
(
ÜÜI J
appUser
ÜÜJ Q
,
ÜÜQ R
role
ÜÜS W
.
ÜÜW X
Name
ÜÜX \
)
ÜÜ\ ]
;
ÜÜ] ^
if
áá 
(
áá 
!
áá 
removeResult
áá !
.
áá! "
	Succeeded
áá" +
)
áá+ ,
{
àà 
errors
ââ 
.
ââ 
Add
ââ 
(
ââ 
$"
ââ !
User: 
ââ! '
{
ââ' (
model
ââ( -
.
ââ- .
UserId
ââ. 4
}
ââ4 5-
 could not be removed from role
ââ5 T
"
ââT U
)
ââU V
;
ââV W
}
ää 
}
ãã 
result
åå 
.
åå 
	IsSucceed
åå 
=
åå 
errors
åå %
.
åå% &
Count
åå& +
==
åå, .
$num
åå/ 0
;
åå0 1
result
çç 
.
çç 
Data
çç 
=
çç 
errors
çç  
.
çç  !
Count
çç! &
==
çç' )
$num
çç* +
;
çç+ ,
result
éé 
.
éé 
Errors
éé 
=
éé 
errors
éé "
;
éé" #
return
èè 
result
èè 
;
èè 
}
êê 	
[
íí 	
HttpGet
íí	 
]
íí 
[
ìì 	
Route
ìì	 
(
ìì 
$str
ìì (
)
ìì( )
]
ìì) *
[
îî 	
Route
îî	 
(
îî 
$str
îî #
)
îî# $
]
îî$ %
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
JObject
ïï !
>
ïï! "
Details
ïï# *
(
ïï* +
string
ïï+ 1
viewType
ïï2 :
,
ïï: ;
string
ïï< B
id
ïïC E
=
ïïF G
null
ïïH L
)
ïïL M
{
ññ 	
switch
óó 
(
óó 
viewType
óó 
)
óó 
{
òò 
case
ôô 
$str
ôô 
:
ôô 
if
öö 
(
öö 
!
öö 
string
öö 
.
öö  
IsNullOrEmpty
öö  -
(
öö- .
id
öö. 0
)
öö0 1
)
öö1 2
{
õõ 
var
úú 
beResult
úú $
=
úú% &
await
úú' ,
BEUserViewModel
úú- <
.
úú< =

Repository
úú= G
.
úúG H!
GetSingleModelAsync
úúH [
(
úú[ \
model
ùù !
=>
ùù" $
model
ùù% *
.
ùù* +
Id
ùù+ -
==
ùù. 0
id
ùù1 3
)
ùù3 4
.
ùù4 5
ConfigureAwait
ùù5 C
(
ùùC D
false
ùùD I
)
ùùI J
;
ùùJ K
beResult
ûû  
.
ûû  !
Data
ûû! %
.
ûû% &
Specificulture
ûû& 4
=
ûû5 6
_lang
ûû7 <
;
ûû< =
return
üü 
JObject
üü &
.
üü& '

FromObject
üü' 1
(
üü1 2
beResult
üü2 :
)
üü: ;
;
üü; <
}
†† 
else
°° 
{
¢¢ 
var
££ 
model
££ !
=
££" #
new
££$ '
SiocCmsUser
££( 3
(
££3 4
)
££4 5
{
££6 7
Status
££8 >
=
££? @
(
££A B
int
££B E
)
££E F
SWStatus
££F N
.
££N O
Preview
££O V
}
££W X
;
££X Y 
RepositoryResponse
•• *
<
••* +
BEUserViewModel
••+ :
>
••: ;
result
••< B
=
••C D
new
••E H 
RepositoryResponse
••I [
<
••[ \
BEUserViewModel
••\ k
>
••k l
(
••l m
)
••m n
{
¶¶ 
	IsSucceed
ßß %
=
ßß& '
true
ßß( ,
,
ßß, -
Data
®®  
=
®®! "
await
®®# (
BEUserViewModel
®®) 8
.
®®8 9
	InitAsync
®®9 B
(
®®B C
model
®®C H
)
®®H I
}
©© 
;
©© 
result
™™ 
.
™™ 
Data
™™ #
.
™™# $
Specificulture
™™$ 2
=
™™3 4
_lang
™™5 :
;
™™: ;
return
´´ 
JObject
´´ &
.
´´& '

FromObject
´´' 1
(
´´1 2
result
´´2 8
)
´´8 9
;
´´9 :
}
¨¨ 
default
≠≠ 
:
≠≠ 
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
string
ÆÆ 
.
ÆÆ  
IsNullOrEmpty
ÆÆ  -
(
ÆÆ- .
id
ÆÆ. 0
)
ÆÆ0 1
)
ÆÆ1 2
{
ØØ 
var
∞∞ 
beResult
∞∞ $
=
∞∞% &
await
∞∞' ,
InfoUserViewModel
∞∞- >
.
∞∞> ?

Repository
∞∞? I
.
∞∞I J!
GetSingleModelAsync
∞∞J ]
(
∞∞] ^
model
±± !
=>
±±" $
model
±±% *
.
±±* +
Id
±±+ -
==
±±. 0
id
±±1 3
)
±±3 4
.
±±4 5
ConfigureAwait
±±5 C
(
±±C D
false
±±D I
)
±±I J
;
±±J K
beResult
≤≤  
.
≤≤  !
Data
≤≤! %
.
≤≤% &
Specificulture
≤≤& 4
=
≤≤5 6
_lang
≤≤7 <
;
≤≤< =
return
≥≥ 
JObject
≥≥ &
.
≥≥& '

FromObject
≥≥' 1
(
≥≥1 2
beResult
≥≥2 :
)
≥≥: ;
;
≥≥; <
}
¥¥ 
else
µµ 
{
∂∂ 
var
∑∑ 
model
∑∑ !
=
∑∑" #
new
∑∑$ '
SiocCmsUser
∑∑( 3
(
∑∑3 4
)
∑∑4 5
{
∑∑6 7
Status
∑∑8 >
=
∑∑? @
(
∑∑A B
int
∑∑B E
)
∑∑E F
SWStatus
∑∑F N
.
∑∑N O
Preview
∑∑O V
}
∑∑W X
;
∑∑X Y 
RepositoryResponse
ππ *
<
ππ* +
InfoUserViewModel
ππ+ <
>
ππ< =
result
ππ> D
=
ππE F
new
ππG J 
RepositoryResponse
ππK ]
<
ππ] ^
InfoUserViewModel
ππ^ o
>
ππo p
(
ππp q
)
ππq r
{
∫∫ 
	IsSucceed
ªª %
=
ªª& '
true
ªª( ,
,
ªª, -
Data
ºº  
=
ºº! "
await
ºº# (
InfoUserViewModel
ºº) :
.
ºº: ;
	InitAsync
ºº; D
(
ººD E
model
ººE J
)
ººJ K
}
ΩΩ 
;
ΩΩ 
result
ææ 
.
ææ 
Data
ææ #
.
ææ# $
Specificulture
ææ$ 2
=
ææ3 4
_lang
ææ5 :
;
ææ: ;
return
øø 
JObject
øø &
.
øø& '

FromObject
øø' 1
(
øø1 2
result
øø2 8
)
øø8 9
;
øø9 :
}
¿¿ 
}
¡¡ 
}
¬¬ 	
[
∆∆ 	
HttpPost
∆∆	 
,
∆∆ 
HttpOptions
∆∆ 
]
∆∆ 
[
«« 	
Route
««	 
(
«« 
$str
«« 
)
«« 
]
«« 
public
»» 
async
»» 
Task
»» 
<
»»  
RepositoryResponse
»» ,
<
»», -
InfoUserViewModel
»»- >
>
»»> ?
>
»»? @
Save
»»A E
(
»»E F
[
…… 
FromBody
…… 
]
…… 
InfoUserViewModel
…… (
model
……) .
)
……. /
{
   	
if
ÀÀ 
(
ÀÀ 
model
ÀÀ 
!=
ÀÀ 
null
ÀÀ 
)
ÀÀ 
{
ÃÃ 
var
ÕÕ 
result
ÕÕ 
=
ÕÕ 
await
ÕÕ "
model
ÕÕ# (
.
ÕÕ( )
SaveModelAsync
ÕÕ) 7
(
ÕÕ7 8
true
ÕÕ8 <
)
ÕÕ< =
.
ÕÕ= >
ConfigureAwait
ÕÕ> L
(
ÕÕL M
false
ÕÕM R
)
ÕÕR S
;
ÕÕS T
return
ŒŒ 
result
ŒŒ 
;
ŒŒ 
}
œœ 
return
–– 
new
––  
RepositoryResponse
–– )
<
––) *
InfoUserViewModel
––* ;
>
––; <
(
––< =
)
––= >
;
––> ?
}
—— 	
[
‘‘ 	
HttpPost
‘‘	 
,
‘‘ 
HttpOptions
‘‘ 
]
‘‘ 
[
’’ 	
Route
’’	 
(
’’ 
$str
’’ 
)
’’ 
]
’’ 
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷  
RepositoryResponse
÷÷ ,
<
÷÷, -
PaginationModel
÷÷- <
<
÷÷< =
InfoUserViewModel
÷÷= N
>
÷÷N O
>
÷÷O P
>
÷÷P Q
GetList
÷÷R Y
(
÷÷Y Z
RequestPaging
÷÷Z g
request
÷÷h o
)
÷÷o p
{
◊◊ 	

Expression
ÿÿ 
<
ÿÿ 
Func
ÿÿ 
<
ÿÿ 
SiocCmsUser
ÿÿ '
,
ÿÿ' (
bool
ÿÿ) -
>
ÿÿ- .
>
ÿÿ. /
	predicate
ÿÿ0 9
=
ÿÿ: ;
model
ÿÿ< A
=>
ÿÿB D
(
ŸŸ 
!
ŸŸ 
request
ŸŸ 
.
ŸŸ 
Status
ŸŸ  
.
ŸŸ  !
HasValue
ŸŸ! )
||
ŸŸ* ,
model
ŸŸ- 2
.
ŸŸ2 3
Status
ŸŸ3 9
==
ŸŸ: <
(
ŸŸ= >
int
ŸŸ> A
)
ŸŸA B
request
ŸŸB I
.
ŸŸI J
Status
ŸŸJ P
.
ŸŸP Q
Value
ŸŸQ V
)
ŸŸV W
&&
⁄⁄ 
(
⁄⁄ 
string
⁄⁄ 
.
⁄⁄  
IsNullOrWhiteSpace
⁄⁄ -
(
⁄⁄- .
request
⁄⁄. 5
.
⁄⁄5 6
Keyword
⁄⁄6 =
)
⁄⁄= >
||
€€ 
(
€€ 
model
‹‹ 
.
‹‹ 
Username
‹‹ "
.
‹‹" #
Contains
‹‹# +
(
‹‹+ ,
request
‹‹, 3
.
‹‹3 4
Keyword
‹‹4 ;
)
‹‹; <
||
›› 
model
›› 
.
›› 
	FirstName
›› %
.
››% &
Contains
››& .
(
››. /
request
››/ 6
.
››6 7
Keyword
››7 >
)
››> ?
||
ﬁﬁ 
model
ﬁﬁ 
.
ﬁﬁ 
LastName
ﬁﬁ $
.
ﬁﬁ$ %
Contains
ﬁﬁ% -
(
ﬁﬁ- .
request
ﬁﬁ. 5
.
ﬁﬁ5 6
Keyword
ﬁﬁ6 =
)
ﬁﬁ= >
)
ﬂﬂ 
)
‡‡ 
&&
·· 
(
·· 
!
·· 
request
·· 
.
·· 
FromDate
·· %
.
··% &
HasValue
··& .
||
‚‚ 
(
‚‚ 
model
‚‚ 
.
‚‚ 
CreatedDateTime
‚‚ -
>=
‚‚. 0
request
‚‚1 8
.
‚‚8 9
FromDate
‚‚9 A
.
‚‚A B
Value
‚‚B G
.
‚‚G H
ToUniversalTime
‚‚H W
(
‚‚W X
)
‚‚X Y
)
‚‚Y Z
)
„„ 
&&
‰‰ 
(
‰‰ 
!
‰‰ 
request
‰‰ 
.
‰‰ 
ToDate
‰‰ #
.
‰‰# $
HasValue
‰‰$ ,
||
ÂÂ 
(
ÂÂ 
model
ÂÂ 
.
ÂÂ 
CreatedDateTime
ÂÂ -
<=
ÂÂ. 0
request
ÂÂ1 8
.
ÂÂ8 9
ToDate
ÂÂ9 ?
.
ÂÂ? @
Value
ÂÂ@ E
.
ÂÂE F
ToUniversalTime
ÂÂF U
(
ÂÂU V
)
ÂÂV W
)
ÂÂW X
)
ÊÊ 
;
ÊÊ 
var
ËË 
data
ËË 
=
ËË 
await
ËË 
InfoUserViewModel
ËË .
.
ËË. /

Repository
ËË/ 9
.
ËË9 :!
GetModelListByAsync
ËË: M
(
ËËM N
	predicate
ËËN W
,
ËËW X
request
ËËY `
.
ËË` a
OrderBy
ËËa h
,
ËËh i
request
ËËj q
.
ËËq r
	Direction
ËËr {
,
ËË{ |
requestËË} Ñ
.ËËÑ Ö
PageSizeËËÖ ç
,ËËç é
requestËËè ñ
.ËËñ ó
	PageIndexËËó †
)ËË† °
.ËË° ¢
ConfigureAwaitËË¢ ∞
(ËË∞ ±
falseËË± ∂
)ËË∂ ∑
;ËË∑ ∏
if
ÈÈ 
(
ÈÈ 
data
ÈÈ 
.
ÈÈ 
	IsSucceed
ÈÈ 
)
ÈÈ 
{
ÍÍ 
data
ÎÎ 
.
ÎÎ 
Data
ÎÎ 
.
ÎÎ 
Items
ÎÎ 
.
ÎÎ  
ForEach
ÎÎ  '
(
ÎÎ' (
a
ÎÎ( )
=>
ÎÎ* ,
{
ÏÏ 
a
ÌÌ 
.
ÌÌ 

DetailsUrl
ÌÌ  
=
ÌÌ! "
SwCmsHelper
ÌÌ# .
.
ÌÌ. /
GetRouterUrl
ÌÌ/ ;
(
ÌÌ; <
$str
ÓÓ !
,
ÓÓ! "
new
ÓÓ# &
{
ÓÓ' (
a
ÓÓ) *
.
ÓÓ* +
Id
ÓÓ+ -
}
ÓÓ. /
,
ÓÓ/ 0
Request
ÓÓ1 8
,
ÓÓ8 9
Url
ÓÓ: =
)
ÓÓ= >
;
ÓÓ> ?
}
ÔÔ 
)
 
;
 
}
ÒÒ 
return
ÚÚ 
data
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
private
ıı 
async
ıı 
Task
ıı 
<
ıı "
AccessTokenViewModel
ıı /
>
ıı/ 0&
GenerateAccessTokenAsync
ıı1 I
(
ııI J
ApplicationUser
ııJ Y
user
ııZ ^
,
ıı^ _
bool
ıı` d

isRemember
ııe o
)
ııo p
{
ˆˆ 	
var
˜˜ 
dtIssued
˜˜ 
=
˜˜ 
DateTime
˜˜ #
.
˜˜# $
UtcNow
˜˜$ *
;
˜˜* +
var
¯¯ 
	dtExpired
¯¯ 
=
¯¯ 
dtIssued
¯¯ $
.
¯¯$ %

AddMinutes
¯¯% /
(
¯¯/ 0
SWCmsConstants
¯¯0 >
.
¯¯> ?
AuthConfiguration
¯¯? P
.
¯¯P Q"
AuthCookieExpiration
¯¯Q e
)
¯¯e f
;
¯¯f g
var
˘˘ #
dtRefreshTokenExpired
˘˘ %
=
˘˘& '
dtIssued
˘˘( 0
.
˘˘0 1
AddDays
˘˘1 8
(
˘˘8 9
SWCmsConstants
˘˘9 G
.
˘˘G H
AuthConfiguration
˘˘H Y
.
˘˘Y Z"
AuthCookieExpiration
˘˘Z n
)
˘˘n o
;
˘˘o p
string
˙˙ 
refreshTokenId
˙˙ !
=
˙˙" #
string
˙˙$ *
.
˙˙* +
Empty
˙˙+ 0
;
˙˙0 1
string
˚˚ 
refreshToken
˚˚ 
=
˚˚  !
string
˚˚" (
.
˚˚( )
Empty
˚˚) .
;
˚˚. /
if
¸¸ 
(
¸¸ 

isRemember
¸¸ 
)
¸¸ 
{
˝˝ 
refreshToken
˛˛ 
=
˛˛ 
Guid
˛˛ #
.
˛˛# $
NewGuid
˛˛$ +
(
˛˛+ ,
)
˛˛, -
.
˛˛- .
ToString
˛˛. 6
(
˛˛6 7
)
˛˛7 8
;
˛˛8 9#
RefreshTokenViewModel
ˇˇ %
vmRefreshToken
ˇˇ& 4
=
ˇˇ5 6
new
ˇˇ7 :#
RefreshTokenViewModel
ˇˇ; P
(
ˇˇP Q
new
ÄÄ 
RefreshTokens
ÄÄ  -
(
ÄÄ- .
)
ÄÄ. /
{
ÅÅ 
Id
ÇÇ  "
=
ÇÇ# $
refreshToken
ÇÇ% 1
,
ÇÇ1 2
Email
ÉÉ  %
=
ÉÉ& '
user
ÉÉ( ,
.
ÉÉ, -
Email
ÉÉ- 2
,
ÉÉ2 3
	IssuedUtc
ÑÑ  )
=
ÑÑ* +
dtIssued
ÑÑ, 4
,
ÑÑ4 5
ClientId
ÖÖ  (
=
ÖÖ) *
SWCmsConstants
ÖÖ+ 9
.
ÖÖ9 :
AuthConfiguration
ÖÖ: K
.
ÖÖK L
Audience
ÖÖL T
,
ÖÖT U
Username
ÜÜ  (
=
ÜÜ) *
user
ÜÜ+ /
.
ÜÜ/ 0
UserName
ÜÜ0 8
,
ÜÜ8 9

ExpiresUtc
àà  *
=
àà+ ,#
dtRefreshTokenExpired
àà- B
}
ââ 
)
ââ 
;
ââ 
var
ãã $
saveRefreshTokenResult
ãã *
=
ãã+ ,
await
ãã- 2
vmRefreshToken
ãã3 A
.
ããA B
SaveModelAsync
ããB P
(
ããP Q
)
ããQ R
;
ããR S
refreshTokenId
åå 
=
åå  $
saveRefreshTokenResult
åå! 7
.
åå7 8
Data
åå8 <
?
åå< =
.
åå= >
Id
åå> @
;
åå@ A
}
çç "
AccessTokenViewModel
èè  
token
èè! &
=
èè' (
new
èè) ,"
AccessTokenViewModel
èè- A
(
èèA B
)
èèB C
{
êê 
Access_token
ëë 
=
ëë 
await
ëë $ 
GenerateTokenAsync
ëë% 7
(
ëë7 8
user
ëë8 <
,
ëë< =
	dtExpired
ëë> G
,
ëëG H
refreshToken
ëëI U
)
ëëU V
,
ëëV W
Refresh_token
íí 
=
íí 
refreshTokenId
íí  .
,
íí. /

Token_type
ìì 
=
ìì 
SWCmsConstants
ìì +
.
ìì+ ,
AuthConfiguration
ìì, =
.
ìì= >
	TokenType
ìì> G
,
ììG H

Expires_in
îî 
=
îî 
SWCmsConstants
îî +
.
îî+ ,
AuthConfiguration
îî, =
.
îî= >"
AuthCookieExpiration
îî> R
,
îîR S
Issued
ññ 
=
ññ 
dtIssued
ññ !
,
ññ! "
Expires
óó 
=
óó 
	dtExpired
óó #
,
óó# $
}
òò 
;
òò 
return
ôô 
token
ôô 
;
ôô 
}
öö 	
private
úú 
async
úú 
Task
úú 
<
úú 
string
úú !
>
úú! " 
GenerateTokenAsync
úú# 5
(
úú5 6
ApplicationUser
úú6 E
user
úúF J
,
úúJ K
DateTime
úúL T
expires
úúU \
,
úú\ ]
string
úú^ d
refreshToken
úúe q
)
úúq r
{
ùù 	
List
ûû 
<
ûû 
Claim
ûû 
>
ûû 
claims
ûû 
=
ûû  
await
ûû! &
GetClaimsAsync
ûû' 5
(
ûû5 6
user
ûû6 :
)
ûû: ;
;
ûû; <
claims
üü 
.
üü 
AddRange
üü 
(
üü 
new
üü 
[
üü  
]
üü  !
{
†† 
new
°° 
Claim
°° 
(
°° 
$str
°° "
,
°°" #
user
°°$ (
.
°°( )
Id
°°) +
.
°°+ ,
ToString
°°, 4
(
°°4 5
)
°°5 6
)
°°6 7
,
°°7 8
new
¢¢ 
Claim
¢¢ 
(
¢¢ 
$str
¢¢ (
,
¢¢( )
user
¢¢* .
.
¢¢. /
UserName
¢¢/ 7
)
¢¢7 8
,
¢¢8 9
new
££ 
Claim
££ 
(
££ 
$str
££ ,
,
££, -
refreshToken
££. :
)
££: ;
}
§§ 
)
§§ 
;
§§ 
JwtSecurityToken
•• 
jwtSecurityToken
•• -
=
••. /
new
••0 3
JwtSecurityToken
••4 D
(
••D E
issuer
¶¶ 
:
¶¶ 
SWCmsConstants
¶¶ &
.
¶¶& '
JwtSettings
¶¶' 2
.
¶¶2 3
ISSUER
¶¶3 9
,
¶¶9 :
audience
ßß 
:
ßß 
SWCmsConstants
ßß (
.
ßß( )
JwtSettings
ßß) 4
.
ßß4 5
AUDIENCE
ßß5 =
,
ßß= >
	notBefore
®® 
:
®® 
DateTime
®® #
.
®®# $
UtcNow
®®$ *
,
®®* +
claims
©© 
:
©© 
claims
©© 
,
©© 
expires
´´ 
:
´´ 
expires
´´  
,
´´  ! 
signingCredentials
¨¨ "
:
¨¨" #
new
¨¨$ ' 
SigningCredentials
¨¨( :
(
¨¨: ;
JwtSecurityKey
¨¨; I
.
¨¨I J
Create
¨¨J P
(
¨¨P Q
SWCmsConstants
¨¨Q _
.
¨¨_ `
JwtSettings
¨¨` k
.
¨¨k l

SECRET_KEY
¨¨l v
)
¨¨v w
,
¨¨w x!
SecurityAlgorithms¨¨y ã
.¨¨ã å

HmacSha256¨¨å ñ
)¨¨ñ ó
)¨¨ó ò
;¨¨ò ô
return
≠≠ 
new
≠≠ %
JwtSecurityTokenHandler
≠≠ .
(
≠≠. /
)
≠≠/ 0
.
≠≠0 1

WriteToken
≠≠1 ;
(
≠≠; <
jwtSecurityToken
≠≠< L
)
≠≠L M
;
≠≠M N
}
ÆÆ 	
	protected
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
List
∞∞ !
<
∞∞! "
Claim
∞∞" '
>
∞∞' (
>
∞∞( )
GetClaimsAsync
∞∞* 8
(
∞∞8 9
ApplicationUser
∞∞9 H
user
∞∞I M
)
∞∞M N
{
±± 	
List
≤≤ 
<
≤≤ 
Claim
≤≤ 
>
≤≤ 
claims
≤≤ 
=
≤≤  
new
≤≤! $
List
≤≤% )
<
≤≤) *
Claim
≤≤* /
>
≤≤/ 0
(
≤≤0 1
)
≤≤1 2
;
≤≤2 3
var
≥≥ 
	userRoles
≥≥ 
=
≥≥ 
await
≥≥ !
_userManager
≥≥" .
.
≥≥. /
GetRolesAsync
≥≥/ <
(
≥≥< =
user
≥≥= A
)
≥≥A B
;
≥≥B C
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
claim
¥¥ 
in
¥¥ !
user
¥¥" &
.
¥¥& '
Claims
¥¥' -
)
¥¥- .
{
µµ 
claims
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
CreateClaim
∂∂ &
(
∂∂& '
claim
∂∂' ,
.
∂∂, -
	ClaimType
∂∂- 6
,
∂∂6 7
claim
∂∂8 =
.
∂∂= >

ClaimValue
∂∂> H
)
∂∂H I
)
∂∂I J
;
∂∂J K
}
∑∑ 
foreach
ππ 
(
ππ 
var
ππ 
userRole
ππ !
in
ππ" $
	userRoles
ππ% .
)
ππ. /
{
∫∫ 
claims
ªª 
.
ªª 
Add
ªª 
(
ªª 
new
ªª 
Claim
ªª $
(
ªª$ %

ClaimTypes
ªª% /
.
ªª/ 0
Role
ªª0 4
,
ªª4 5
userRole
ªª6 >
)
ªª> ?
)
ªª? @
;
ªª@ A
var
ºº 
role
ºº 
=
ºº 
await
ºº  
_roleManager
ºº! -
.
ºº- .
FindByNameAsync
ºº. =
(
ºº= >
userRole
ºº> F
)
ººF G
;
ººG H
if
ΩΩ 
(
ΩΩ 
role
ΩΩ 
!=
ΩΩ 
null
ΩΩ  
)
ΩΩ  !
{
ææ 
var
øø 

roleClaims
øø "
=
øø# $
await
øø% *
_roleManager
øø+ 7
.
øø7 8
GetClaimsAsync
øø8 F
(
øøF G
role
øøG K
)
øøK L
;
øøL M
foreach
¿¿ 
(
¿¿ 
Claim
¿¿ "
	roleClaim
¿¿# ,
in
¿¿- /

roleClaims
¿¿0 :
)
¿¿: ;
{
¡¡ 
claims
¬¬ 
.
¬¬ 
Add
¬¬ "
(
¬¬" #
	roleClaim
¬¬# ,
)
¬¬, -
;
¬¬- .
}
√√ 
}
ƒƒ 
}
≈≈ 
return
∆∆ 
claims
∆∆ 
;
∆∆ 
}
«« 	
	protected
…… 
Claim
…… 
CreateClaim
…… #
(
……# $
string
……$ *
type
……+ /
,
……/ 0
string
……1 7
value
……8 =
)
……= >
{
   	
return
ÀÀ 
new
ÀÀ 
Claim
ÀÀ 
(
ÀÀ 
type
ÀÀ !
,
ÀÀ! "
value
ÀÀ# (
,
ÀÀ( )
ClaimValueTypes
ÀÀ* 9
.
ÀÀ9 :
String
ÀÀ: @
)
ÀÀ@ A
;
ÀÀA B
}
ÃÃ 	
}
ÕÕ 
}ŒŒ ˜‹
SG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiArticleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
,M N
Roles 
= 
$str #
)# $
]$ %
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str "
)" #
]# $
public 

class  
ApiArticleController %
:& '
BaseApiController   
{!! 
public""  
ApiArticleController"" #
(""# $
)""$ %
{## 	
}$$ 	
[)) 	
HttpGet))	 
])) 
[** 	
Route**	 
(** 
$str** (
)**( )
]**) *
[++ 	
Route++	 
(++ 
$str++ #
)++# $
]++$ %
public,, 
async,, 
Task,, 
<,, 
JObject,, !
>,,! "
	BEDetails,,# ,
(,,, -
string,,- 3
viewType,,4 <
,,,< =
string,,> D
id,,E G
),,G H
{-- 	
switch.. 
(.. 
viewType.. 
).. 
{// 
case00 
$str00 
:00 
if11 
(11 
!11 
string11 
.11  
IsNullOrEmpty11  -
(11- .
id11. 0
)110 1
)111 2
{22 
var33 
beResult33 $
=33% &
await33' ,
BEArticleViewModel33- ?
.33? @

Repository33@ J
.33J K
GetSingleModelAsync33K ^
(33^ _
model33_ d
=>33e g
model33h m
.33m n
Id33n p
==33q s
id33t v
&&33w y
model33z 
.	33 Ä
Specificulture
33Ä é
==
33è ë
_lang
33í ó
)
33ó ò
.
33ò ô
ConfigureAwait
33ô ß
(
33ß ®
false
33® ≠
)
33≠ Æ
;
33Æ Ø
if44 
(44 
beResult44 $
.44$ %
	IsSucceed44% .
)44. /
{55 
beResult66 $
.66$ %
Data66% )
.66) *

DetailsUrl66* 4
=665 6
SwCmsHelper667 B
.66B C
GetRouterUrl66C O
(66O P
$str66P Y
,66Y Z
new66[ ^
{66_ `
beResult66a i
.66i j
Data66j n
.66n o
SeoName66o v
}66w x
,66x y
Request	66z Å
,
66Å Ç
Url
66É Ü
)
66Ü á
;
66á à
}77 
return88 
JObject88 &
.88& '

FromObject88' 1
(881 2
beResult882 :
)88: ;
;88; <
}99 
else:: 
{;; 
var<< 
model<< !
=<<" #
new<<$ '
SiocArticle<<( 3
(<<3 4
)<<4 5
{== 
Specificulture>> *
=>>+ ,
_lang>>- 2
,>>2 3
Status?? "
=??# $
(??% &
int??& )
)??) *
SWStatus??* 2
.??2 3
Preview??3 :
,??: ;
Priority@@ $
=@@% &
BEArticleViewModel@@' 9
.@@9 :

Repository@@: D
.@@D E
Max@@E H
(@@H I
a@@I J
=>@@K M
a@@N O
.@@O P
Priority@@P X
)@@X Y
.@@Y Z
Data@@Z ^
+@@_ `
$num@@a b
}AA 
;AA 
RepositoryResponseBB *
<BB* +
BEArticleViewModelBB+ =
>BB= >
resultBB? E
=BBF G
newBBH K
RepositoryResponseBBL ^
<BB^ _
BEArticleViewModelBB_ q
>BBq r
(BBr s
)BBs t
{CC 
	IsSucceedDD %
=DD& '
trueDD( ,
,DD, -
DataEE  
=EE! "
newEE# &
BEArticleViewModelEE' 9
(EE9 :
modelEE: ?
)EE? @
}FF 
;FF 
returnGG 
JObjectGG &
.GG& '

FromObjectGG' 1
(GG1 2
resultGG2 8
)GG8 9
;GG9 :
}HH 
defaultII 
:II 
ifJJ 
(JJ 
!JJ 
stringJJ 
.JJ  
IsNullOrEmptyJJ  -
(JJ- .
idJJ. 0
)JJ0 1
)JJ1 2
{KK 
varLL 
beResultLL $
=LL% &
awaitLL' ,
FEArticleViewModelLL- ?
.LL? @

RepositoryLL@ J
.LLJ K
GetSingleModelAsyncLLK ^
(LL^ _
modelLL_ d
=>LLe g
modelLLh m
.LLm n
IdLLn p
==LLq s
idLLt v
&&LLw y
modelLLz 
.	LL Ä
Specificulture
LLÄ é
==
LLè ë
_lang
LLí ó
)
LLó ò
.
LLò ô
ConfigureAwait
LLô ß
(
LLß ®
false
LL® ≠
)
LL≠ Æ
;
LLÆ Ø
ifMM 
(MM 
beResultMM $
.MM$ %
	IsSucceedMM% .
)MM. /
{NN 
beResultOO $
.OO$ %
DataOO% )
.OO) *

DetailsUrlOO* 4
=OO5 6
SwCmsHelperOO7 B
.OOB C
GetRouterUrlOOC O
(OOO P
$strOOP Y
,OOY Z
newOO[ ^
{OO_ `
beResultOOa i
.OOi j
DataOOj n
.OOn o
SeoNameOOo v
}OOw x
,OOx y
Request	OOz Å
,
OOÅ Ç
Url
OOÉ Ü
)
OOÜ á
;
OOá à
}PP 
returnQQ 
JObjectQQ &
.QQ& '

FromObjectQQ' 1
(QQ1 2
beResultQQ2 :
)QQ: ;
;QQ; <
}RR 
elseSS 
{TT 
varUU 
modelUU !
=UU" #
newUU$ '
SiocArticleUU( 3
(UU3 4
)UU4 5
;UU5 6
RepositoryResponseVV *
<VV* +
FEArticleViewModelVV+ =
>VV= >
resultVV? E
=VVF G
newVVH K
RepositoryResponseVVL ^
<VV^ _
FEArticleViewModelVV_ q
>VVq r
(VVr s
)VVs t
{WW 
	IsSucceedXX %
=XX& '
trueXX( ,
,XX, -
DataYY  
=YY! "
newYY# &
FEArticleViewModelYY' 9
(YY9 :
modelYY: ?
)YY? @
{YYA B
SpecificultureYYC Q
=YYR S
_langYYT Y
,YYY Z
StatusYY[ a
=YYb c
SWStatusYYd l
.YYl m
PreviewYYm t
}YYu v
}ZZ 
;ZZ 
return[[ 
JObject[[ &
.[[& '

FromObject[[' 1
([[1 2
result[[2 8
)[[8 9
;[[9 :
}\\ 
}]] 
}^^ 	
[aa 	
HttpGetaa	 
]aa 
[bb 	
Routebb	 
(bb 
$strbb 
)bb 
]bb 
publiccc 
RepositoryResponsecc !
<cc! "
BEArticleViewModelcc" 4
>cc4 5
Createcc6 <
(cc< =
)cc= >
{dd 	
SiocArticleee 
Articleee 
=ee  !
newee" %
SiocArticleee& 1
(ee1 2
)ee2 3
{ff 
Specificulturehh 
=hh  
_langhh! &
}jj 
;jj 
returnkk 
newkk 
RepositoryResponsekk )
<kk) *
BEArticleViewModelkk* <
>kk< =
(kk= >
)kk> ?
{ll 
	IsSucceedmm 
=mm 
truemm  
,mm  !
Datann 
=nn 
newnn 
BEArticleViewModelnn -
(nn- .
Articlenn. 5
)nn5 6
{nn7 8
Statusnn9 ?
=nn@ A
SWStatusnnB J
.nnJ K
PreviewnnK R
}nnS T
}oo 
;oo 
}pp 	
[ss 	
HttpGetss	 
]ss 
[tt 	
Routett	 
(tt 
$strtt  
)tt  !
]tt! "
publicuu 
JObjectuu 
Inituu 
(uu 
stringuu "
viewTypeuu# +
)uu+ ,
{vv 	
SiocArticleww 
Articleww 
=ww  !
newww" %
SiocArticleww& 1
(ww1 2
)ww2 3
{xx 
Specificulturezz 
=zz  
_langzz! &
}|| 
;|| 
switch~~ 
(~~ 
viewType~~ 
)~~ 
{ 
case
ÄÄ 
$str
ÄÄ 
:
ÄÄ 
var
ÅÅ 
be
ÅÅ 
=
ÅÅ 
new
ÅÅ   
RepositoryResponse
ÅÅ! 3
<
ÅÅ3 4 
BEArticleViewModel
ÅÅ4 F
>
ÅÅF G
(
ÅÅG H
)
ÅÅH I
{
ÇÇ 
	IsSucceed
ÉÉ !
=
ÉÉ" #
true
ÉÉ$ (
,
ÉÉ( )
Data
ÑÑ 
=
ÑÑ 
new
ÑÑ " 
BEArticleViewModel
ÑÑ# 5
(
ÑÑ5 6
Article
ÑÑ6 =
)
ÑÑ= >
{
ÑÑ? @
Status
ÑÑA G
=
ÑÑH I
SWStatus
ÑÑJ R
.
ÑÑR S
Preview
ÑÑS Z
}
ÑÑ[ \
}
ÖÖ 
;
ÖÖ 
return
ÜÜ 
JObject
ÜÜ "
.
ÜÜ" #

FromObject
ÜÜ# -
(
ÜÜ- .
be
ÜÜ. 0
)
ÜÜ0 1
;
ÜÜ1 2
default
áá 
:
áá 
var
àà 
fe
àà 
=
àà 
new
àà   
RepositoryResponse
àà! 3
<
àà3 4"
InfoArticleViewModel
àà4 H
>
ààH I
(
ààI J
)
ààJ K
{
ââ 
	IsSucceed
ää !
=
ää" #
true
ää$ (
,
ää( )
Data
ãã 
=
ãã 
new
ãã ""
InfoArticleViewModel
ãã# 7
(
ãã7 8
Article
ãã8 ?
)
ãã? @
{
ããA B
Status
ããC I
=
ããJ K
SWStatus
ããL T
.
ããT U
Preview
ããU \
}
ãã] ^
}
åå 
;
åå 
return
çç 
JObject
çç "
.
çç" #

FromObject
çç# -
(
çç- .
fe
çç. 0
)
çç0 1
;
çç1 2
}
éé 
}
èè 	
[
íí 	
HttpGet
íí	 
]
íí 
[
ìì 	
Route
ìì	 
(
ìì 
$str
ìì 
)
ìì 
]
ìì 
public
îî 
async
îî 
Task
îî 
<
îî  
RepositoryResponse
îî ,
<
îî, -"
InfoArticleViewModel
îî- A
>
îîA B
>
îîB C
Recycle
îîD K
(
îîK L
string
îîL R
id
îîS U
)
îîU V
{
ïï 	
var
ññ 

getArticle
ññ 
=
ññ "
InfoArticleViewModel
ññ 1
.
ññ1 2

Repository
ññ2 <
.
ññ< =
GetSingleModel
ññ= K
(
ññK L
a
ññL M
=>
ññN P
a
ññQ R
.
ññR S
Id
ññS U
==
ññV X
id
ññY [
)
ññ[ \
;
ññ\ ]
if
óó 
(
óó 

getArticle
óó 
.
óó 
	IsSucceed
óó $
)
óó$ %
{
òò 
var
ôô 
data
ôô 
=
ôô 

getArticle
ôô %
.
ôô% &
Data
ôô& *
;
ôô* +
data
öö 
.
öö 
Status
öö 
=
öö 
SWStatus
öö &
.
öö& '
Deleted
öö' .
;
öö. /
return
õõ 
await
õõ 
data
õõ !
.
õõ! "
SaveModelAsync
õõ" 0
(
õõ0 1
)
õõ1 2
.
õõ2 3
ConfigureAwait
õõ3 A
(
õõA B
false
õõB G
)
õõG H
;
õõH I
}
úú 
else
ùù 
{
ûû 
return
üü 
new
üü  
RepositoryResponse
üü -
<
üü- ."
InfoArticleViewModel
üü. B
>
üüB C
(
üüC D
)
üüD E
{
üüF G
	IsSucceed
üüH Q
=
üüR S
false
üüT Y
}
üüZ [
;
üü[ \
}
†† 
}
°° 	
[
§§ 	
HttpGet
§§	 
]
§§ 
[
•• 	
Route
••	 
(
•• 
$str
•• 
)
•• 
]
•• 
public
¶¶ 
async
¶¶ 
Task
¶¶ 
<
¶¶  
RepositoryResponse
¶¶ ,
<
¶¶, -"
InfoArticleViewModel
¶¶- A
>
¶¶A B
>
¶¶B C
Restore
¶¶D K
(
¶¶K L
string
¶¶L R
id
¶¶S U
)
¶¶U V
{
ßß 	
var
®® 

getArticle
®® 
=
®® "
InfoArticleViewModel
®® 1
.
®®1 2

Repository
®®2 <
.
®®< =
GetSingleModel
®®= K
(
®®K L
a
®®L M
=>
®®N P
a
®®Q R
.
®®R S
Id
®®S U
==
®®V X
id
®®Y [
)
®®[ \
;
®®\ ]
if
©© 
(
©© 

getArticle
©© 
.
©© 
	IsSucceed
©© $
)
©©$ %
{
™™ 
var
´´ 
data
´´ 
=
´´ 

getArticle
´´ %
.
´´% &
Data
´´& *
;
´´* +
data
¨¨ 
.
¨¨ 
Status
¨¨ 
=
¨¨ 
SWStatus
¨¨ &
.
¨¨& '
Preview
¨¨' .
;
¨¨. /
return
≠≠ 
await
≠≠ 
data
≠≠ !
.
≠≠! "
SaveModelAsync
≠≠" 0
(
≠≠0 1
)
≠≠1 2
.
≠≠2 3
ConfigureAwait
≠≠3 A
(
≠≠A B
false
≠≠B G
)
≠≠G H
;
≠≠H I
}
ÆÆ 
else
ØØ 
{
∞∞ 
return
±± 
new
±±  
RepositoryResponse
±± -
<
±±- ."
InfoArticleViewModel
±±. B
>
±±B C
(
±±C D
)
±±D E
{
±±F G
	IsSucceed
±±H Q
=
±±R S
false
±±T Y
}
±±Z [
;
±±[ \
}
≤≤ 
}
≥≥ 	
[
∂∂ 	
HttpGet
∂∂	 
]
∂∂ 
[
∑∑ 	
Route
∑∑	 
(
∑∑ 
$str
∑∑ 
)
∑∑ 
]
∑∑ 
public
∏∏ 
async
∏∏ 
Task
∏∏ 
<
∏∏  
RepositoryResponse
∏∏ ,
<
∏∏, -
SiocArticle
∏∏- 8
>
∏∏8 9
>
∏∏9 :
Delete
∏∏; A
(
∏∏A B
string
∏∏B H
id
∏∏I K
)
∏∏K L
{
ππ 	
var
∫∫ 

getArticle
∫∫ 
=
∫∫  
BEArticleViewModel
∫∫ /
.
∫∫/ 0

Repository
∫∫0 :
.
∫∫: ;
GetSingleModel
∫∫; I
(
∫∫I J
a
∫∫J K
=>
∫∫L N
a
∫∫O P
.
∫∫P Q
Id
∫∫Q S
==
∫∫T V
id
∫∫W Y
&&
∫∫Z \
a
∫∫] ^
.
∫∫^ _
Specificulture
∫∫_ m
==
∫∫n p
_lang
∫∫q v
)
∫∫v w
;
∫∫w x
if
ªª 
(
ªª 

getArticle
ªª 
.
ªª 
	IsSucceed
ªª $
)
ªª$ %
{
ºº 
return
ΩΩ 
await
ΩΩ 

getArticle
ΩΩ '
.
ΩΩ' (
Data
ΩΩ( ,
.
ΩΩ, -
RemoveModelAsync
ΩΩ- =
(
ΩΩ= >
true
ΩΩ> B
)
ΩΩB C
.
ΩΩC D
ConfigureAwait
ΩΩD R
(
ΩΩR S
false
ΩΩS X
)
ΩΩX Y
;
ΩΩY Z
}
ææ 
else
øø 
{
¿¿ 
return
¡¡ 
new
¡¡  
RepositoryResponse
¡¡ -
<
¡¡- .
SiocArticle
¡¡. 9
>
¡¡9 :
(
¡¡: ;
)
¡¡; <
{
¡¡= >
	IsSucceed
¡¡? H
=
¡¡I J
false
¡¡K P
}
¡¡Q R
;
¡¡R S
}
¬¬ 
}
√√ 	
[
∆∆ 	
HttpGet
∆∆	 
]
∆∆ 
[
»» 	
Route
»»	 
(
»» 
$str
»» 
)
»» 
]
»» 
[
…… 	
Route
……	 
(
…… 
$str
…… 6
)
……6 7
]
……7 8
[
   	
Route
  	 
(
   
$str
   +
)
  + ,
]
  , -
[
ÀÀ 	
Route
ÀÀ	 
(
ÀÀ 
$str
ÀÀ L
)
ÀÀL M
]
ÀÀM N
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ  
RepositoryResponse
ÃÃ ,
<
ÃÃ, -
PaginationModel
ÃÃ- <
<
ÃÃ< ="
InfoArticleViewModel
ÃÃ= Q
>
ÃÃQ R
>
ÃÃR S
>
ÃÃS T
Get
ÃÃU X
(
ÃÃX Y
int
ÃÃY \
?
ÃÃ\ ]
pageSize
ÃÃ^ f
=
ÃÃg h
$num
ÃÃi k
,
ÃÃk l
int
ÃÃm p
?
ÃÃp q
	pageIndex
ÃÃr {
=
ÃÃ| }
$num
ÃÃ~ 
,ÃÃ Ä
stringÃÃÅ á
orderByÃÃà è
=ÃÃê ë
$strÃÃí ñ
,ÃÃñ ó 
OrderByDirectionÃÃò ®
	directionÃÃ© ≤
=ÃÃ≥ ¥ 
OrderByDirectionÃÃµ ≈
.ÃÃ≈ ∆
	AscendingÃÃ∆ œ
)ÃÃœ –
{
ÕÕ 	
var
ŒŒ 
data
ŒŒ 
=
ŒŒ 
await
ŒŒ "
InfoArticleViewModel
ŒŒ 1
.
ŒŒ1 2

Repository
ŒŒ2 <
.
ŒŒ< =!
GetModelListByAsync
ŒŒ= P
(
ŒŒP Q
m
œœ 
=>
œœ 
m
œœ 
.
œœ 
Status
œœ 
!=
œœ  
(
œœ! "
int
œœ" %
)
œœ% &
SWStatus
œœ& .
.
œœ. /
Deleted
œœ/ 6
&&
œœ7 9
m
œœ: ;
.
œœ; <
Specificulture
œœ< J
==
œœK M
_lang
œœN S
,
œœS T
orderBy
œœU \
,
œœ\ ]
	direction
œœ^ g
,
œœg h
pageSize
œœi q
,
œœq r
	pageIndex
œœs |
)
œœ| }
.
œœ} ~
ConfigureAwaitœœ~ å
(œœå ç
falseœœç í
)œœí ì
;œœì î
if
–– 
(
–– 
data
–– 
.
–– 
	IsSucceed
–– 
)
–– 
{
—— 
data
““ 
.
““ 
Data
““ 
.
““ 
Items
““ 
.
““  
ForEach
““  '
(
““' (
a
““( )
=>
““* ,
a
““- .
.
““. /

DetailsUrl
““/ 9
=
““: ;
SwCmsHelper
““< G
.
““G H
GetRouterUrl
““H T
(
““T U
$str
““U ^
,
““^ _
new
““` c
{
““d e
a
““f g
.
““g h
SeoName
““h o
}
““p q
,
““q r
Request
““s z
,
““z {
Url
““| 
)““ Ä
)““Ä Å
;““Å Ç
}
”” 
return
‘‘ 
data
‘‘ 
;
‘‘ 
}
’’ 	
[
‹‹ 	
HttpPost
‹‹	 
]
‹‹ 
[
›› 	
Route
››	 
(
›› 
$str
›› 
)
›› 
]
›› 
public
ﬁﬁ 
async
ﬁﬁ 
Task
ﬁﬁ 
<
ﬁﬁ  
RepositoryResponse
ﬁﬁ ,
<
ﬁﬁ, - 
BEArticleViewModel
ﬁﬁ- ?
>
ﬁﬁ? @
>
ﬁﬁ@ A
Save
ﬁﬁB F
(
ﬁﬁF G
[
ﬁﬁG H
FromBody
ﬁﬁH P
]
ﬁﬁP Q 
BEArticleViewModel
ﬁﬁR d
Article
ﬁﬁe l
)
ﬁﬁl m
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
Article
‡‡ 
!=
‡‡ 
null
‡‡ 
)
‡‡  
{
·· 
Article
‚‚ 
.
‚‚ 
	CreatedBy
‚‚ !
=
‚‚" #
User
‚‚$ (
.
‚‚( )
Identity
‚‚) 1
.
‚‚1 2
Name
‚‚2 6
;
‚‚6 7
var
„„ 
result
„„ 
=
„„ 
await
„„ "
Article
„„# *
.
„„* +
SaveModelAsync
„„+ 9
(
„„9 :
true
„„: >
)
„„> ?
.
„„? @
ConfigureAwait
„„@ N
(
„„N O
false
„„O T
)
„„T U
;
„„U V
if
‰‰ 
(
‰‰ 
result
‰‰ 
.
‰‰ 
	IsSucceed
‰‰ $
)
‰‰$ %
{
ÂÂ 
result
ÊÊ 
.
ÊÊ 
Data
ÊÊ 
.
ÊÊ  

DetailsUrl
ÊÊ  *
=
ÊÊ+ ,
SwCmsHelper
ÊÊ- 8
.
ÊÊ8 9
GetRouterUrl
ÊÊ9 E
(
ÊÊE F
$str
ÊÊF O
,
ÊÊO P
new
ÊÊQ T
{
ÊÊU V
seoName
ÊÊW ^
=
ÊÊ_ `
Article
ÊÊa h
.
ÊÊh i
SeoName
ÊÊi p
}
ÊÊq r
,
ÊÊr s
Request
ÊÊt {
,
ÊÊ{ |
UrlÊÊ} Ä
)ÊÊÄ Å
;ÊÊÅ Ç
}
ÁÁ 
return
ËË 
result
ËË 
;
ËË 
}
ÈÈ 
return
ÍÍ 
new
ÍÍ  
RepositoryResponse
ÍÍ )
<
ÍÍ) * 
BEArticleViewModel
ÍÍ* <
>
ÍÍ< =
(
ÍÍ= >
)
ÍÍ> ?
;
ÍÍ? @
}
ÎÎ 	
[
ÓÓ 	
HttpPost
ÓÓ	 
,
ÓÓ 
HttpOptions
ÓÓ 
]
ÓÓ 
[
ÔÔ 	
Route
ÔÔ	 
(
ÔÔ 
$str
ÔÔ 
)
ÔÔ 
]
ÔÔ 
public
 
async
 
Task
 
<
  
RepositoryResponse
 ,
<
, -
SiocArticle
- 8
>
8 9
>
9 :

SaveFields
; E
(
E F
string
F L
id
M O
,
O P
[
Q R
FromBody
R Z
]
Z [
List
[ _
<
_ `
EntityField
` k
>
k l
fields
m s
)
s t
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
fields
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
var
ÙÙ 
result
ÙÙ 
=
ÙÙ 
new
ÙÙ   
RepositoryResponse
ÙÙ! 3
<
ÙÙ3 4
SiocArticle
ÙÙ4 ?
>
ÙÙ? @
(
ÙÙ@ A
)
ÙÙA B
;
ÙÙB C
foreach
ıı 
(
ıı 
var
ıı 
property
ıı %
in
ıı& (
fields
ıı) /
)
ıı/ 0
{
ˆˆ 
result
˜˜ 
=
˜˜ 
await
˜˜ $ 
BEArticleViewModel
˜˜% 7
.
˜˜7 8

Repository
˜˜8 B
.
˜˜B C
UpdateFieldsAsync
˜˜C T
(
˜˜T U
c
˜˜U V
=>
˜˜W Y
c
˜˜Z [
.
˜˜[ \
Id
˜˜\ ^
==
˜˜_ a
id
˜˜b d
,
˜˜d e
fields
˜˜f l
)
˜˜l m
.
˜˜m n
ConfigureAwait
˜˜n |
(
˜˜| }
false˜˜} Ç
)˜˜Ç É
;˜˜É Ñ
}
¯¯ 
return
˘˘ 
result
˘˘ 
;
˘˘ 
}
˙˙ 
return
˚˚ 
new
˚˚  
RepositoryResponse
˚˚ )
<
˚˚) *
SiocArticle
˚˚* 5
>
˚˚5 6
(
˚˚6 7
)
˚˚7 8
;
˚˚8 9
}
¸¸ 	
[
ÄÄ 	
HttpPost
ÄÄ	 
,
ÄÄ 
HttpOptions
ÄÄ 
]
ÄÄ 
[
ÅÅ 	
Route
ÅÅ	 
(
ÅÅ 
$str
ÅÅ 
)
ÅÅ 
]
ÅÅ 
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
<
ÇÇ  
RepositoryResponse
ÇÇ ,
<
ÇÇ, -
PaginationModel
ÇÇ- <
<
ÇÇ< ="
InfoArticleViewModel
ÇÇ= Q
>
ÇÇQ R
>
ÇÇR S
>
ÇÇS T
GetList
ÇÇU \
(
ÇÇ\ ]
[
ÇÇ] ^
FromBody
ÇÇ^ f
]
ÇÇf g
RequestPaging
ÇÇg t
request
ÇÇu |
)
ÇÇ| }
{
ÉÉ 	$
ParseRequestPagingDate
ÑÑ "
(
ÑÑ" #
request
ÑÑ# *
)
ÑÑ* +
;
ÑÑ+ ,

Expression
ÖÖ 
<
ÖÖ 
Func
ÖÖ 
<
ÖÖ 
SiocArticle
ÖÖ '
,
ÖÖ' (
bool
ÖÖ) -
>
ÖÖ- .
>
ÖÖ. /
	predicate
ÖÖ0 9
=
ÖÖ: ;
model
ÖÖ< A
=>
ÖÖB D
model
ÜÜ 
.
ÜÜ 
Specificulture
ÜÜ $
==
ÜÜ% '
_lang
ÜÜ( -
&&
áá 
(
áá 
!
áá 
request
áá 
.
áá 
Status
áá #
.
áá# $
HasValue
áá$ ,
||
áá- /
model
áá0 5
.
áá5 6
Status
áá6 <
==
áá= ?
(
áá@ A
int
ááA D
)
ááD E
request
ááE L
.
ááL M
Status
ááM S
.
ááS T
Value
ááT Y
)
ááY Z
&&
àà 
(
àà 
string
àà 
.
àà  
IsNullOrWhiteSpace
àà -
(
àà- .
request
àà. 5
.
àà5 6
Keyword
àà6 =
)
àà= >
||
ââ 
(
ââ 
model
ää 
.
ää 
Title
ää 
.
ää  
Contains
ää  (
(
ää( )
request
ää) 0
.
ää0 1
Keyword
ää1 8
)
ää8 9
||
åå 
model
åå 
.
åå 
Excerpt
åå $
.
åå$ %
Contains
åå% -
(
åå- .
request
åå. 5
.
åå5 6
Keyword
åå6 =
)
åå= >
)
çç 
)
éé 
&&
èè 
(
èè 
!
èè 
request
èè 
.
èè 
FromDate
èè %
.
èè% &
HasValue
èè& .
||
êê 
(
êê 
model
êê 
.
êê 
CreatedDateTime
êê -
>=
êê. 0
request
êê1 8
.
êê8 9
FromDate
êê9 A
.
êêA B
Value
êêB G
)
êêG H
)
ëë 
&&
íí 
(
íí 
!
íí 
request
íí 
.
íí 
ToDate
íí #
.
íí# $
HasValue
íí$ ,
||
ìì 
(
ìì 
model
ìì 
.
ìì 
CreatedDateTime
ìì -
<=
ìì. 0
request
ìì1 8
.
ìì8 9
ToDate
ìì9 ?
.
ìì? @
Value
ìì@ E
)
ììE F
)
îî 
;
îî 
var
ññ 
data
ññ 
=
ññ 
await
ññ "
InfoArticleViewModel
ññ 1
.
ññ1 2

Repository
ññ2 <
.
ññ< =!
GetModelListByAsync
ññ= P
(
ññP Q
	predicate
ññQ Z
,
ññZ [
request
ññ\ c
.
ññc d
OrderBy
ññd k
,
ññk l
request
ññm t
.
ññt u
	Direction
ññu ~
,
ññ~ 
requestññÄ á
.ññá à
PageSizeññà ê
,ññê ë
requestññí ô
.ññô ö
	PageIndexññö £
)ññ£ §
.ññ§ •
ConfigureAwaitññ• ≥
(ññ≥ ¥
falseññ¥ π
)ññπ ∫
;ññ∫ ª
if
óó 
(
óó 
data
óó 
.
óó 
	IsSucceed
óó 
)
óó 
{
òò 
data
ôô 
.
ôô 
Data
ôô 
.
ôô 
Items
ôô 
.
ôô  
ForEach
ôô  '
(
ôô' (
a
ôô( )
=>
ôô* ,
{
öö 
a
õõ 
.
õõ 

DetailsUrl
õõ  
=
õõ! "
SwCmsHelper
õõ# .
.
õõ. /
GetRouterUrl
õõ/ ;
(
õõ; <
$str
úú !
,
úú! "
new
úú# &
{
úú' (
a
úú) *
.
úú* +
SeoName
úú+ 2
}
úú3 4
,
úú4 5
Request
úú6 =
,
úú= >
Url
úú? B
)
úúB C
;
úúC D
}
ùù 
)
ùù 
;
ùù 
}
ûû 
return
üü 
data
üü 
;
üü 
}
†† 	
}
££ 
}§§ ≤†
RG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiCommonController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiPortalController $
:% &
BaseApiController 
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_signInManager8 F
;F G
private 
readonly 
RoleManager $
<$ %
IdentityRole% 1
>1 2
_roleManager3 ?
;? @
public   
ApiPortalController   "
(  " #
UserManager!! 
<!! 
ApplicationUser!! &
>!!& '
userManager!!( 3
,!!3 4
SignInManager"" 
<"" 
ApplicationUser"" (
>""( )
signInManager""* 7
,""7 8
RoleManager## 
<## 
IdentityRole## #
>### $
roleManager##% 0
)$$ 
{%% 	
_userManager&& 
=&& 
userManager&& &
;&&& '
_signInManager'' 
='' 
signInManager'' *
;''* +
_roleManager(( 
=(( 
roleManager(( &
;((& '
})) 	
[-- 	
HttpGet--	 
]-- 
[.. 	
Route..	 
(.. 
$str.. #
)..# $
]..$ %
[// 	
Route//	 
(// 
$str// 
)// 
]// 
public00 
RepositoryResponse00 !
<00! "!
SiteSettingsViewModel00" 7
>007 8
Settings009 A
(00A B
)00B C
{11 	!
SiteSettingsViewModel22 !
settings22" *
=22+ ,
new22- 0!
SiteSettingsViewModel221 F
(22F G
)22G H
{33 
Lang44 
=44 
_lang44 
,44 
ThemeId55 
=55 &
GlobalConfigurationService55 4
.554 5
Instance555 =
.55= >
GetLocalInt55> I
(55I J
SWCmsConstants55J X
.55X Y 
ConfigurationKeyword55Y m
.55m n
ThemeId55n u
,55u v
_lang55w |
)55| }
,55} ~
Cultures66 
=66 
CommonRepository66 +
.66+ ,
Instance66, 4
.664 5
LoadCultures665 A
(66A B
)66B C
,66C D
	PageTypes77 
=77 
Enum77  
.77  !
GetNames77! )
(77) *
typeof77* 0
(770 1
SWCmsConstants771 ?
.77? @
CateType77@ H
)77H I
)77I J
.77J K
ToList77K Q
(77Q R
)77R S
}88 
;88 
return99 
new99 
RepositoryResponse99 )
<99) *!
SiteSettingsViewModel99* ?
>99? @
(99@ A
)99A B
{:: 
	IsSucceed;; 
=;; 
true;;  
,;;  !
Data<< 
=<< 
settings<< 
}== 
;== 
}>> 	
[@@ 	
HttpGet@@	 
]@@ 
[AA 	
RouteAA	 
(AA 
$strAA 
)AA 
]AA  
publicBB 
RepositoryResponseBB !
<BB! "!
SiteSettingsViewModelBB" 7
>BB7 8
InitSettingsBB9 E
(BBE F
)BBF G
{CC 	!
SiteSettingsViewModelDD !
settingsDD" *
=DD+ ,
newDD- 0!
SiteSettingsViewModelDD1 F
(DDF G
)DDG H
{EE 
LangFF 
=FF 
_langFF 
,FF 
ThemeIdGG 
=GG 
$numGG 
,GG 
CulturesHH 
=HH 
newHH 
ListHH #
<HH# $
SwastikaHH$ ,
.HH, -
DomainHH- 3
.HH3 4
CoreHH4 8
.HH8 9
ModelsHH9 ?
.HH? @
SupportedCultureHH@ P
>HHP Q
(HHQ R
)HHR S
{II 
newJJ 
SwastikaJJ  
.JJ  !
DomainJJ! '
.JJ' (
CoreJJ( ,
.JJ, -
ModelsJJ- 3
.JJ3 4
SupportedCultureJJ4 D
(JJD E
)JJE F
{KK 
SpecificultureLL &
=LL' (
$strLL) 0
,LL0 1
FullNameMM  
=MM! "
$strMM# 2
,MM2 3
DescriptionNN #
=NN$ %
$strNN& 5
,NN5 6
IconOO 
=OO 
$strOO -
,OO- .
AliasPP 
=PP 
$strPP  $
}QQ 
,QQ 
newRR 
SwastikaRR  
.RR  !
DomainRR! '
.RR' (
CoreRR( ,
.RR, -
ModelsRR- 3
.RR3 4
SupportedCultureRR4 D
(RRD E
)RRE F
{SS 
SpecificultureTT &
=TT' (
$strTT) 0
,TT0 1
FullNameUU  
=UU! "
$strUU# ,
,UU, -
DescriptionVV #
=VV$ %
$strVV& 0
,VV0 1
IconWW 
=WW 
$strWW -
,WW- .
AliasXX 
=XX 
$strXX  $
}YY 
}[[ 
,[[ 
	PageTypes\\ 
=\\ 
Enum\\  
.\\  !
GetNames\\! )
(\\) *
typeof\\* 0
(\\0 1
SWCmsConstants\\1 ?
.\\? @
CateType\\@ H
)\\H I
)\\I J
.\\J K
ToList\\K Q
(\\Q R
)\\R S
}]] 
;]] 
return^^ 
new^^ 
RepositoryResponse^^ )
<^^) *!
SiteSettingsViewModel^^* ?
>^^? @
(^^@ A
)^^A B
{__ 
	IsSucceed`` 
=`` 
true``  
,``  !
Dataaa 
=aa 
settingsaa 
}bb 
;bb 
}cc 	
[ff 	
HttpGetff	 
]ff 
[gg 	
Routegg	 
(gg 
$strgg 
)gg 
]gg 
publichh 
RepositoryResponsehh !
<hh! "
DashboardViewModelhh" 4
>hh4 5
	Dashboardhh6 ?
(hh? @
inthh@ C
idhhD F
)hhF G
{ii 	
returnjj 
newjj 
RepositoryResponsejj )
<jj) *
DashboardViewModeljj* <
>jj< =
(jj= >
)jj> ?
{kk 
	IsSucceedll 
=ll 
truell  
,ll  !
Datamm 
=mm 
newmm 
DashboardViewModelmm -
(mm- .
)mm. /
}nn 
;nn 
}oo 	
[vv 	
	Authorizevv	 
(vv 
Rolesvv 
=vv 
$strvv '
)vv' (
]vv( )
[ww 	
HttpGetww	 
]ww 
[xx 	
Routexx	 
(xx 
$strxx %
)xx% &
]xx& '
publicyy 
RepositoryResponseyy !
<yy! "
JObjectyy" )
>yy) *
LoadAppSettingsyy+ :
(yy: ;
)yy; <
{zz 	
var{{ 
settings{{ 
={{ 
FileRepository{{ )
.{{) *
Instance{{* 2
.{{2 3
GetFile{{3 :
({{: ;
$str{{; H
,{{H I
$str{{J Q
,{{Q R
string{{S Y
.{{Y Z
Empty{{Z _
,{{_ `
true{{a e
,{{e f
$str{{g k
){{k l
;{{l m
JObject|| 
jsonSettings||  
=||! "
null||# '
;||' (
if}} 
(}} 
settings}} 
!=}} 
null}}  
)}}  !
{~~ 
jsonSettings 
= 
JObject &
.& '
Parse' ,
(, -
settings- 5
.5 6
Content6 =
)= >
;> ?
}
ÄÄ 
return
ÅÅ 
new
ÅÅ  
RepositoryResponse
ÅÅ )
<
ÅÅ) *
JObject
ÅÅ* 1
>
ÅÅ1 2
(
ÅÅ2 3
)
ÅÅ3 4
{
ÅÅ5 6
	IsSucceed
ÅÅ7 @
=
ÅÅA B
jsonSettings
ÅÅC O
!=
ÅÅP R
null
ÅÅS W
,
ÅÅW X
Data
ÅÅY ]
=
ÅÅ^ _
jsonSettings
ÅÅ` l
}
ÅÅm n
;
ÅÅn o
}
ÇÇ 	
[
ÖÖ 	
	Authorize
ÖÖ	 
(
ÖÖ 
Roles
ÖÖ 
=
ÖÖ 
$str
ÖÖ '
)
ÖÖ' (
]
ÖÖ( )
[
ÜÜ 	
HttpPost
ÜÜ	 
]
ÜÜ 
[
áá 	
Route
áá	 
(
áá 
$str
áá "
)
áá" #
]
áá# $
public
àà  
RepositoryResponse
àà !
<
àà! "
JObject
àà" )
>
àà) *
SaveAppSettings
àà+ :
(
àà: ;
[
àà; <
FromBody
àà< D
]
ààD E
JObject
ààE L
model
ààM R
)
ààR S
{
ââ 	
var
ää 
settings
ää 
=
ää 
FileRepository
ää )
.
ää) *
Instance
ää* 2
.
ää2 3
GetFile
ää3 :
(
ää: ;
$str
ää; H
,
ääH I
$str
ääJ Q
,
ääQ R
string
ääS Y
.
ääY Z
Empty
ääZ _
,
ää_ `
true
ääa e
,
ääe f
$str
ääg k
)
ääk l
;
ääl m
if
ãã 
(
ãã 
model
ãã 
!=
ãã 
null
ãã 
)
ãã 
{
åå 
settings
çç 
.
çç 
Content
çç  
=
çç! "
model
çç# (
.
çç( )
ToString
çç) 1
(
çç1 2
)
çç2 3
;
çç3 4
FileRepository
éé 
.
éé 
Instance
éé '
.
éé' (
SaveFile
éé( 0
(
éé0 1
settings
éé1 9
)
éé9 :
;
éé: ;(
GlobalConfigurationService
èè *
.
èè* +
Instance
èè+ 3
.
èè3 4#
RefreshConfigurations
èè4 I
(
èèI J
)
èèJ K
;
èèK L
}
êê 
return
ëë 
new
ëë  
RepositoryResponse
ëë )
<
ëë) *
JObject
ëë* 1
>
ëë1 2
(
ëë2 3
)
ëë3 4
{
ëë5 6
	IsSucceed
ëë7 @
=
ëëA B
model
ëëC H
!=
ëëI K
null
ëëL P
,
ëëP Q
Data
ëëR V
=
ëëW X
model
ëëY ^
}
ëë_ `
;
ëë` a
}
íí 	
[
ïï 	
HttpPost
ïï	 
,
ïï 
HttpOptions
ïï 
]
ïï 
[
ññ 	
Route
ññ	 
(
ññ 
$str
ññ 
)
ññ 
]
ññ 
public
óó 
async
óó 
Task
óó 
<
óó  
RepositoryResponse
óó ,
<
óó, -
bool
óó- 1
>
óó1 2
>
óó2 3
Post
óó4 8
(
óó8 9
[
óó9 :
FromBody
óó: B
]
óóB C!
ApiInitCmsViewModel
óóC V
model
óóW \
)
óó\ ]
{
òò 	
if
ôô 
(
ôô 
model
ôô 
!=
ôô 
null
ôô 
)
ôô 
{
öö 
var
õõ 
result
õõ 
=
õõ 
await
õõ "
InitCmsAsync
õõ# /
(
õõ/ 0
model
õõ0 5
)
õõ5 6
.
õõ6 7
ConfigureAwait
õõ7 E
(
õõE F
false
õõF K
)
õõK L
;
õõL M
return
úú 
result
úú 
;
úú 
}
ùù 
return
ûû 
new
ûû  
RepositoryResponse
ûû )
<
ûû) *
bool
ûû* .
>
ûû. /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
}
üü 	
public
§§ 
async
§§ 
Task
§§ 
<
§§  
RepositoryResponse
§§ ,
<
§§, -
bool
§§- 1
>
§§1 2
>
§§2 3
InitCmsAsync
§§4 @
(
§§@ A!
ApiInitCmsViewModel
§§A T
model
§§U Z
)
§§Z [
{
•• 	
var
¶¶ 
result
¶¶ 
=
¶¶ 
new
¶¶  
RepositoryResponse
¶¶ /
<
¶¶/ 0
bool
¶¶0 4
>
¶¶4 5
(
¶¶5 6
)
¶¶6 7
;
¶¶7 8
var
®® 
settings
®® 
=
®® 
FileRepository
®® )
.
®®) *
Instance
®®* 2
.
®®2 3
GetFile
®®3 :
(
®®: ;
$str
®®; H
,
®®H I
$str
®®J Q
,
®®Q R
string
®®S Y
.
®®Y Z
Empty
®®Z _
,
®®_ `
true
®®a e
,
®®e f
$str
®®g k
)
®®k l
;
®®l m
if
©© 
(
©© 
settings
©© 
!=
©© 
null
©©  
)
©©  !
{
™™ 
JObject
´´ 
jsonSettings
´´ $
=
´´% &
JObject
´´' .
.
´´. /
Parse
´´/ 4
(
´´4 5
settings
´´5 =
.
´´= >
Content
´´> E
)
´´E F
;
´´F G
jsonSettings
¨¨ 
[
¨¨ 
$str
¨¨ 0
]
¨¨0 1
[
¨¨1 2
SWCmsConstants
¨¨2 @
.
¨¨@ A&
CONST_DEFAULT_CONNECTION
¨¨A Y
]
¨¨Y Z
=
¨¨[ \
model
¨¨] b
.
¨¨b c
ConnectionString
¨¨c s
;
¨¨s t
jsonSettings
≠≠ 
[
≠≠ 
$str
≠≠ 0
]
≠≠0 1
[
≠≠1 2
$str
≠≠2 E
]
≠≠E F
=
≠≠G H
model
≠≠I N
.
≠≠N O
ConnectionString
≠≠O _
;
≠≠_ `
jsonSettings
ÆÆ 
[
ÆÆ 
$str
ÆÆ '
]
ÆÆ' (
=
ÆÆ) *
false
ÆÆ+ 0
;
ÆÆ0 1
jsonSettings
ØØ 
[
ØØ 
$str
ØØ '
]
ØØ' (
=
ØØ) *
model
ØØ+ 0
.
ØØ0 1
Lang
ØØ1 5
;
ØØ5 6
settings
∞∞ 
.
∞∞ 
Content
∞∞  
=
∞∞! "
jsonSettings
∞∞# /
.
∞∞/ 0
ToString
∞∞0 8
(
∞∞8 9
)
∞∞9 :
;
∞∞: ;
FileRepository
±± 
.
±± 
Instance
±± '
.
±±' (
SaveFile
±±( 0
(
±±0 1
settings
±±1 9
)
±±9 :
;
±±: ;
}
≤≤ (
GlobalConfigurationService
¥¥ &
.
¥¥& '
Instance
¥¥' /
.
¥¥/ 0
CmsConfigurations
¥¥0 A
=
¥¥B C
new
¥¥D G
CmsConfiguration
¥¥H X
(
¥¥X Y
)
¥¥Y Z
;
¥¥Z [
var
µµ 

initResult
µµ 
=
µµ 
await
µµ "(
GlobalConfigurationService
µµ# =
.
µµ= >
Instance
µµ> F
.
µµF G
	InitSWCms
µµG P
(
µµP Q
_userManager
∂∂ 
,
∂∂ 
_roleManager
∂∂ *
)
∂∂* +
;
∂∂+ ,
if
∑∑ 
(
∑∑ 

initResult
∑∑ 
.
∑∑ 
	IsSucceed
∑∑ $
)
∑∑$ %
{
∏∏ 
await
ππ 
InitRolesAsync
ππ $
(
ππ$ %
)
ππ% &
;
ππ& '
result
∫∫ 
.
∫∫ 
	IsSucceed
∫∫  
=
∫∫! "
true
∫∫# '
;
∫∫' ((
GlobalConfigurationService
ªª *
.
ªª* +
Instance
ªª+ 3
.
ªª3 4#
RefreshConfigurations
ªª4 I
(
ªªI J
)
ªªJ K
;
ªªK L
}
ºº 
else
ΩΩ 
{
ææ 
settings
øø 
=
øø 
FileRepository
øø )
.
øø) *
Instance
øø* 2
.
øø2 3
GetFile
øø3 :
(
øø: ;
$str
øø; H
,
øøH I
$str
øøJ Q
,
øøQ R
string
øøS Y
.
øøY Z
Empty
øøZ _
)
øø_ `
;
øø` a
JObject
¿¿ 
jsonSettings
¿¿ $
=
¿¿% &
JObject
¿¿' .
.
¿¿. /
Parse
¿¿/ 4
(
¿¿4 5
settings
¿¿5 =
.
¿¿= >
Content
¿¿> E
)
¿¿E F
;
¿¿F G
jsonSettings
¡¡ 
[
¡¡ 
$str
¡¡ 0
]
¡¡0 1
[
¡¡1 2
SWCmsConstants
¡¡2 @
.
¡¡@ A&
CONST_DEFAULT_CONNECTION
¡¡A Y
]
¡¡Y Z
=
¡¡[ \
null
¡¡] a
;
¡¡a b
jsonSettings
¬¬ 
[
¬¬ 
$str
¬¬ 0
]
¬¬0 1
[
¬¬1 2
$str
¬¬2 E
]
¬¬E F
=
¬¬G H
null
¬¬I M
;
¬¬M N
jsonSettings
√√ 
[
√√ 
$str
√√ '
]
√√' (
=
√√) *
false
√√+ 0
;
√√0 1
jsonSettings
ƒƒ 
[
ƒƒ 
$str
ƒƒ '
]
ƒƒ' (
=
ƒƒ) *
$str
ƒƒ+ 2
;
ƒƒ2 3
settings
≈≈ 
.
≈≈ 
Content
≈≈  
=
≈≈! "
jsonSettings
≈≈# /
.
≈≈/ 0
ToString
≈≈0 8
(
≈≈8 9
)
≈≈9 :
;
≈≈: ;
FileRepository
∆∆ 
.
∆∆ 
Instance
∆∆ '
.
∆∆' (
SaveFile
∆∆( 0
(
∆∆0 1
settings
∆∆1 9
)
∆∆9 :
;
∆∆: ;
if
«« 
(
«« 

initResult
«« 
.
«« 
	Exception
«« (
!=
««) +
null
««, 0
)
««0 1
{
»» 
result
…… 
.
…… 
Errors
…… !
.
……! "
Add
……" %
(
……% &

initResult
……& 0
.
……0 1
	Exception
……1 :
.
……: ;
Message
……; B
)
……B C
;
……C D
}
   
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ 
item
ÀÀ !
in
ÀÀ" $

initResult
ÀÀ% /
.
ÀÀ/ 0
Errors
ÀÀ0 6
)
ÀÀ6 7
{
ÃÃ 
result
ÕÕ 
.
ÕÕ 
Errors
ÕÕ !
.
ÕÕ! "
Add
ÕÕ" %
(
ÕÕ% &
item
ÕÕ& *
)
ÕÕ* +
;
ÕÕ+ ,
}
ŒŒ 
}
œœ 
return
–– 
result
–– 
;
–– 
}
—— 	
private
”” 
async
”” 
Task
”” 
<
”” 
bool
”” 
>
””  
InitRolesAsync
””! /
(
””/ 0
)
””0 1
{
‘‘ 	
bool
’’ 
	isSucceed
’’ 
=
’’ 
true
’’ !
;
’’! "
var
÷÷ 
getRoles
÷÷ 
=
÷÷ 
await
÷÷  
RoleViewModel
÷÷! .
.
÷÷. /

Repository
÷÷/ 9
.
÷÷9 :
GetModelListAsync
÷÷: K
(
÷÷K L
)
÷÷L M
;
÷÷M N
if
◊◊ 
(
◊◊ 
getRoles
◊◊ 
.
◊◊ 
	IsSucceed
◊◊ "
&&
◊◊# %
getRoles
◊◊& .
.
◊◊. /
Data
◊◊/ 3
.
◊◊3 4
Count
◊◊4 9
==
◊◊: <
$num
◊◊= >
)
◊◊> ?
{
ÿÿ 
var
ŸŸ 

saveResult
ŸŸ 
=
ŸŸ  
await
ŸŸ! &
_roleManager
ŸŸ' 3
.
ŸŸ3 4
CreateAsync
ŸŸ4 ?
(
ŸŸ? @
new
ŸŸ@ C
IdentityRole
ŸŸD P
(
ŸŸP Q
)
ŸŸQ R
{
⁄⁄ 
Id
€€ 
=
€€ 
Guid
€€ 
.
€€ 
NewGuid
€€ %
(
€€% &
)
€€& '
.
€€' (
ToString
€€( 0
(
€€0 1
)
€€1 2
,
€€2 3
Name
‹‹ 
=
‹‹ 
$str
‹‹ '
}
›› 
)
›› 
;
›› 
	isSucceed
ﬁﬁ 
=
ﬁﬁ 

saveResult
ﬁﬁ &
.
ﬁﬁ& '
	Succeeded
ﬁﬁ' 0
;
ﬁﬁ0 1
}
ﬂﬂ 
return
‡‡ 
	isSucceed
‡‡ 
;
‡‡ 
}
·· 	
}
‰‰ 
}ÂÂ ‰k
YG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiConfigurationController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str (
)( )
]) *
public 

class &
ApiConfigurationController +
:, -
BaseApiController 
{ 
public &
ApiConfigurationController )
() *
)* +
{ 	
} 	
[!! 	
HttpGet!!	 
]!! 
["" 	
Route""	 
("" 
$str"" -
)""- .
]"". /
[## 	
Route##	 
(## 
$str## #
)### $
]##$ %
public$$ 
async$$ 
Task$$ 
<$$ 
JObject$$ !
>$$! "
Details$$# *
($$* +
string$$+ 1
viewType$$2 :
,$$: ;
string$$< B
keyword$$C J
=$$K L
null$$M Q
)$$Q R
{%% 	
switch&& 
(&& 
viewType&& 
)&& 
{'' 
default(( 
:(( 
if)) 
()) 
!)) 
string)) 
.))  
IsNullOrEmpty))  -
())- .
keyword)). 5
)))5 6
)))6 7
{** 
var++ 
feResult++ $
=++% &
await++' ,$
BEConfigurationViewModel++- E
.++E F

Repository++F P
.++P Q
GetSingleModelAsync++Q d
(++d e
model,, 
=>,,  
model,,! &
.,,& '
Keyword,,' .
==,,/ 1
keyword,,2 9
&&,,: <
model,,= B
.,,B C
Specificulture,,C Q
==,,R T
_lang,,U Z
),,Z [
.,,[ \
ConfigureAwait,,\ j
(,,j k
false,,k p
),,p q
;,,q r
return-- 
JObject-- &
.--& '

FromObject--' 1
(--1 2
feResult--2 :
)--: ;
;--; <
}.. 
else// 
{00 
var11 
configuration11 )
=11* +
new11, /
SiocConfiguration110 A
(11A B
)11B C
{22 
Specificulture33 *
=33+ ,
_lang33- 2
}44 
;44 
var66 
result66 "
=66# $
new66% (
RepositoryResponse66) ;
<66; <$
BEConfigurationViewModel66< T
>66T U
(66U V
)66V W
{77 
	IsSucceed88 %
=88& '
true88( ,
,88, -
Data99  
=99! "
(99# $
await99$ )$
BEConfigurationViewModel99* B
.99B C
	InitAsync99C L
(99L M
configuration99M Z
)99Z [
)99[ \
}:: 
;:: 
return;; 
JObject;; &
.;;& '

FromObject;;' 1
(;;1 2
result;;2 8
);;8 9
;;;9 :
}<< 
}>> 
}?? 	
[BB 	
HttpGetBB	 
]BB 
[CC 	
RouteCC	 
(CC 
$strCC !
)CC! "
]CC" #
publicDD 
asyncDD 
TaskDD 
<DD 
RepositoryResponseDD ,
<DD, -
SiocConfigurationDD- >
>DD> ?
>DD? @
DeleteDDA G
(DDG H
stringDDH N
keywordDDO V
)DDV W
{EE 	
varFF 
getConfigurationFF  
=FF! "$
BEConfigurationViewModelFF# ;
.FF; <

RepositoryFF< F
.FFF G
GetSingleModelFFG U
(FFU V
aFFV W
=>FFX Z
aFF[ \
.FF\ ]
KeywordFF] d
==FFe g
keywordFFh o
&&FFp r
aFFs t
.FFt u
Specificulture	FFu É
==
FFÑ Ü
_lang
FFá å
)
FFå ç
;
FFç é
ifGG 
(GG 
getConfigurationGG  
.GG  !
	IsSucceedGG! *
)GG* +
{HH 
returnII 
awaitII 
getConfigurationII -
.II- .
DataII. 2
.II2 3
RemoveModelAsyncII3 C
(IIC D
trueIID H
)IIH I
.III J
ConfigureAwaitIIJ X
(IIX Y
falseIIY ^
)II^ _
;II_ `
}JJ 
elseKK 
{LL 
returnMM 
newMM 
RepositoryResponseMM -
<MM- .
SiocConfigurationMM. ?
>MM? @
(MM@ A
)MMA B
{MMC D
	IsSucceedMME N
=MMO P
falseMMQ V
}MMW X
;MMX Y
}NN 
}OO 	
[RR 	
HttpGetRR	 
]RR 
[TT 	
RouteTT	 
(TT 
$strTT 
)TT 
]TT 
[UU 	
RouteUU	 
(UU 
$strUU 6
)UU6 7
]UU7 8
[VV 	
RouteVV	 
(VV 
$strVV +
)VV+ ,
]VV, -
[WW 	
RouteWW	 
(WW 
$strWW L
)WWL M
]WWM N
publicXX 
asyncXX 
TaskXX 
<XX 
RepositoryResponseXX ,
<XX, -
PaginationModelXX- <
<XX< =$
BEConfigurationViewModelXX= U
>XXU V
>XXV W
>XXW X
GetXXY \
(XX\ ]
intYY 
?YY 
pageSizeYY 
=YY 
$numYY 
,YY 
intYY  #
?YY# $
	pageIndexYY% .
=YY/ 0
$numYY1 2
,YY2 3
stringYY4 :
orderByYY; B
=YYC D
$strYYE I
,ZZ 
OrderByDirectionZZ 
	directionZZ (
=ZZ) *
OrderByDirectionZZ+ ;
.ZZ; <
	AscendingZZ< E
)ZZE F
{[[ 	
var\\ 
data\\ 
=\\ 
await\\ $
BEConfigurationViewModel\\ 5
.\\5 6

Repository\\6 @
.\\@ A
GetModelListByAsync\\A T
(\\T U
m]] 
=>]] 
m]] 
.]] 
Specificulture]] %
==]]& (
_lang]]) .
,]]. /
orderBy]]0 7
,]]7 8
	direction]]9 B
,]]B C
pageSize]]D L
,]]L M
	pageIndex]]N W
)]]W X
.]]X Y
ConfigureAwait]]Y g
(]]g h
false]]h m
)]]m n
;]]n o
return^^ 
data^^ 
;^^ 
}__ 	
[bb 	
HttpGetbb	 
]bb 
[cc 	
Routecc	 
(cc 
$strcc !
)cc! "
]cc" #
[dd 	
Routedd	 
(dd 
$strdd B
)ddB C
]ddC D
[ee 	
Routeee	 
(ee 
$stree X
)eeX Y
]eeY Z
publicff 
asyncff 
Taskff 
<ff 
RepositoryResponseff ,
<ff, -
PaginationModelff- <
<ff< =$
BEConfigurationViewModelff= U
>ffU V
>ffV W
>ffW X
SearchffY _
(ff_ `
stringgg 
keywordgg 
=gg 
nullgg !
,gg! "
intgg# &
?gg& '
pageSizegg( 0
=gg1 2
nullgg3 7
,gg7 8
intgg9 <
?gg< =
	pageIndexgg> G
=ggH I
nullggJ N
,ggN O
stringggP V
orderByggW ^
=gg_ `
$strgga e
,hh 
OrderByDirectionhh 
	directionhh (
=hh) *
OrderByDirectionhh+ ;
.hh; <
	Ascendinghh< E
)hhE F
{ii 	

Expressionjj 
<jj 
Funcjj 
<jj 
SiocConfigurationjj -
,jj- .
booljj/ 3
>jj3 4
>jj4 5
	predicatejj6 ?
=jj@ A
modeljjB G
=>jjH J
modelkk 
.kk 
Specificulturekk  
==kk! #
_langkk$ )
&&ll 
(ll 
stringmm 
.mm 
IsNullOrWhiteSpacemm %
(mm% &
keywordmm& -
)mm- .
||nn 
modelnn 
.nn 
Keywordnn  
.nn  !
Containsnn! )
(nn) *
keywordnn* 1
)nn1 2
||oo 
modeloo 
.oo 
Descriptionoo $
.oo$ %
Containsoo% -
(oo- .
keywordoo. 5
)oo5 6
||pp 
modelpp 
.pp 
Valuepp 
.pp 
Containspp '
(pp' (
keywordpp( /
)pp/ 0
)qq 
;qq 
varrr 
datarr 
=rr 
awaitrr $
BEConfigurationViewModelrr 5
.rr5 6

Repositoryrr6 @
.rr@ A
GetModelListByAsyncrrA T
(rrT U
	predicaterrU ^
,rr^ _
orderByrr` g
,rrg h
	directionrri r
,rrr s
pageSizerrt |
,rr| }
	pageIndex	rr~ á
)
rrá à
.
rrà â
ConfigureAwait
rrâ ó
(
rró ò
false
rrò ù
)
rrù û
;
rrû ü
returntt 
datatt 
;tt 
}uu 	
[|| 	
HttpPost||	 
,|| 
HttpOptions|| 
]|| 
[}} 	
Route}}	 
(}} 
$str}} 
)}} 
]}} 
public~~ 
async~~ 
Task~~ 
<~~ 
RepositoryResponse~~ ,
<~~, -$
BEConfigurationViewModel~~- E
>~~E F
>~~F G
Post~~H L
(~~L M
[~~M N
FromBody~~N V
]~~V W$
BEConfigurationViewModel~~W o
model~~p u
)~~u v
{ 	
if
ÄÄ 
(
ÄÄ 
model
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 
var
ÇÇ 
result
ÇÇ 
=
ÇÇ 
await
ÇÇ "
model
ÇÇ# (
.
ÇÇ( )
SaveModelAsync
ÇÇ) 7
(
ÇÇ7 8
true
ÇÇ8 <
)
ÇÇ< =
.
ÇÇ= >
ConfigureAwait
ÇÇ> L
(
ÇÇL M
false
ÇÇM R
)
ÇÇR S
;
ÇÇS T
return
ÑÑ 
result
ÑÑ 
;
ÑÑ 
}
ÖÖ 
return
ÜÜ 
new
ÜÜ  
RepositoryResponse
ÜÜ )
<
ÜÜ) *&
BEConfigurationViewModel
ÜÜ* B
>
ÜÜB C
(
ÜÜC D
)
ÜÜD E
;
ÜÜE F
}
áá 	
[
ãã 	
HttpPost
ãã	 
,
ãã 
HttpOptions
ãã 
]
ãã 
[
åå 	
Route
åå	 
(
åå 
$str
åå 
)
åå 
]
åå 
public
çç 
async
çç 
Task
çç 
<
çç  
RepositoryResponse
çç ,
<
çç, -
PaginationModel
çç- <
<
çç< =&
BEConfigurationViewModel
çç= U
>
ççU V
>
ççV W
>
ççW X
GetList
ççY `
(
çç` a
[
çça b
FromBody
ççb j
]
ççj k
RequestPaging
ççk x
requestççy Ä
)ççÄ Å
{
éé 	$
ParseRequestPagingDate
èè "
(
èè" #
request
èè# *
)
èè* +
;
èè+ ,

Expression
êê 
<
êê 
Func
êê 
<
êê 
SiocConfiguration
êê -
,
êê- .
bool
êê/ 3
>
êê3 4
>
êê4 5
	predicate
êê6 ?
=
êê@ A
model
êêB G
=>
êêH J
model
ëë 
.
ëë 
Specificulture
ëë $
==
ëë% '
_lang
ëë( -
&&
íí 
(
íí 
string
íí 
.
íí  
IsNullOrWhiteSpace
íí -
(
íí- .
request
íí. 5
.
íí5 6
Keyword
íí6 =
)
íí= >
||
ìì 
(
ìì 
model
ìì 
.
ìì 
Description
ìì %
.
ìì% &
Contains
ìì& .
(
ìì. /
request
ìì/ 6
.
ìì6 7
Keyword
ìì7 >
)
ìì> ?
||
îî 
model
îî 
.
îî 
Value
îî 
.
îî 
Contains
îî '
(
îî' (
request
îî( /
.
îî/ 0
Keyword
îî0 7
)
îî7 8
||
ïï 
model
ïï 
.
ïï 
Keyword
ïï  
.
ïï  !
Contains
ïï! )
(
ïï) *
request
ïï* 1
.
ïï1 2
Keyword
ïï2 9
)
ïï9 :
)
ïï: ;
)
ïï; <
;
ïï< =
var
óó 
data
óó 
=
óó 
await
óó &
BEConfigurationViewModel
óó 5
.
óó5 6

Repository
óó6 @
.
óó@ A!
GetModelListByAsync
óóA T
(
óóT U
	predicate
óóU ^
,
óó^ _
request
óó` g
.
óóg h
OrderBy
óóh o
,
óóo p
request
óóq x
.
óóx y
	Directionóóy Ç
,óóÇ É
requestóóÑ ã
.óóã å
PageSizeóóå î
,óóî ï
requestóóñ ù
.óóù û
	PageIndexóóû ß
)óóß ®
.óó® ©
ConfigureAwaitóó© ∑
(óó∑ ∏
falseóó∏ Ω
)óóΩ æ
;óóæ ø
return
ôô 
data
ôô 
;
ôô 
}
öö 	
}
ùù 
}ûû Á@
TG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiCustomerController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class !
ApiCustomerController &
:' (
BaseApiController 
{ 
public !
ApiCustomerController $
($ %
)% &
{ 	
} 	
["" 	
HttpGet""	 
]"" 
[## 	
Route##	 
(## 
$str## (
)##( )
]##) *
[$$ 	
Route$$	 
($$ 
$str$$ #
)$$# $
]$$$ %
public%% 
async%% 
Task%% 
<%% 
JObject%% !
>%%! "
Details%%# *
(%%* +
string%%+ 1
viewType%%2 :
,%%: ;
string%%< B
id%%C E
=%%F G
null%%H L
)%%L M
{&& 	
switch'' 
('' 
viewType'' 
)'' 
{(( 
default)) 
:)) 
if** 
(** 
!** 
string** 
.**  
IsNullOrEmpty**  -
(**- .
id**. 0
)**0 1
)**1 2
{++ 
var,, 
feResult,, $
=,,% &
await,,' , 
ApiCustomerViewModel,,- A
.,,A B

Repository,,B L
.,,L M
GetSingleModelAsync,,M `
(,,` a
model-- 
=>--  
model--! &
.--& '
Id--' )
==--* ,
id--- /
).. 
... 
ConfigureAwait.. (
(..( )
false..) .
)... /
;../ 0
return// 
JObject// &
.//& '

FromObject//' 1
(//1 2
feResult//2 :
)//: ;
;//; <
}00 
else11 
{22 
var33 
customer33 $
=33% &
new33' *
SiocCustomer33+ 7
(337 8
)338 9
{44 
}55 
;55 
var77 
result77 "
=77# $
new77% (
RepositoryResponse77) ;
<77; < 
ApiCustomerViewModel77< P
>77P Q
(77Q R
)77R S
{88 
	IsSucceed99 %
=99& '
true99( ,
,99, -
Data::  
=::! "
(::# $
await::$ ) 
ApiCustomerViewModel::* >
.::> ?
	InitAsync::? H
(::H I
customer::I Q
)::Q R
)::R S
};; 
;;; 
return<< 
JObject<< &
.<<& '

FromObject<<' 1
(<<1 2
result<<2 8
)<<8 9
;<<9 :
}== 
}?? 
}@@ 	
[CC 	
HttpGetCC	 
]CC 
[DD 	
RouteDD	 
(DD 
$strDD 
)DD 
]DD 
publicEE 
asyncEE 
TaskEE 
<EE 
RepositoryResponseEE ,
<EE, -
SiocCustomerEE- 9
>EE9 :
>EE: ;
DeleteEE< B
(EEB C
stringEEC I
idEEJ L
)EEL M
{FF 	
varGG 
getCustomerGG 
=GG  
ApiCustomerViewModelGG 2
.GG2 3

RepositoryGG3 =
.GG= >
GetSingleModelGG> L
(GGL M
aGGM N
=>GGO Q
aGGR S
.GGS T
IdGGT V
==GGW Y
idGGZ \
)GG\ ]
;GG] ^
ifHH 
(HH 
getCustomerHH 
.HH 
	IsSucceedHH %
)HH% &
{II 
returnJJ 
awaitJJ 
getCustomerJJ (
.JJ( )
DataJJ) -
.JJ- .
RemoveModelAsyncJJ. >
(JJ> ?
trueJJ? C
)JJC D
.JJD E
ConfigureAwaitJJE S
(JJS T
falseJJT Y
)JJY Z
;JJZ [
}KK 
elseLL 
{MM 
returnNN 
newNN 
RepositoryResponseNN -
<NN- .
SiocCustomerNN. :
>NN: ;
(NN; <
)NN< =
{NN> ?
	IsSucceedNN@ I
=NNJ K
falseNNL Q
}NNR S
;NNS T
}OO 
}PP 	
[WW 	
HttpPostWW	 
,WW 
HttpOptionsWW 
]WW 
[XX 	
RouteXX	 
(XX 
$strXX 
)XX 
]XX 
publicYY 
asyncYY 
TaskYY 
<YY 
RepositoryResponseYY ,
<YY, - 
ApiCustomerViewModelYY- A
>YYA B
>YYB C
PostYYD H
(YYH I
[YYI J
FromBodyYYJ R
]YYR S 
ApiCustomerViewModelYYS g
modelYYh m
)YYm n
{ZZ 	
if[[ 
([[ 
model[[ 
!=[[ 
null[[ 
)[[ 
{\\ 
var]] 
result]] 
=]] 
await]] "
model]]# (
.]]( )
SaveModelAsync]]) 7
(]]7 8
true]]8 <
)]]< =
.]]= >
ConfigureAwait]]> L
(]]L M
false]]M R
)]]R S
;]]S T
return__ 
result__ 
;__ 
}`` 
returnaa 
newaa 
RepositoryResponseaa )
<aa) * 
ApiCustomerViewModelaa* >
>aa> ?
(aa? @
)aa@ A
;aaA B
}bb 	
[ff 	
HttpPostff	 
,ff 
HttpOptionsff 
]ff 
[gg 	
Routegg	 
(gg 
$strgg 
)gg 
]gg 
publichh 
asynchh 
Taskhh 
<hh 
RepositoryResponsehh ,
<hh, -
PaginationModelhh- <
<hh< = 
ApiCustomerViewModelhh= Q
>hhQ R
>hhR S
>hhS T
GetListhhU \
(hh\ ]
[hh] ^
FromBodyhh^ f
]hhf g
RequestPaginghhg t
requesthhu |
)hh| }
{ii 	"
ParseRequestPagingDatejj "
(jj" #
requestjj# *
)jj* +
;jj+ ,

Expressionkk 
<kk 
Funckk 
<kk 
SiocCustomerkk (
,kk( )
boolkk* .
>kk. /
>kk/ 0
	predicatekk1 :
=kk; <
modelkk= B
=>kkC E
(ll 
stringll 
.ll 
IsNullOrWhiteSpacell *
(ll* +
requestll+ 2
.ll2 3
Keywordll3 :
)ll: ;
||mm 
(mm 
modelmm 
.mm 
FullNamemm "
.mm" #
Containsmm# +
(mm+ ,
requestmm, 3
.mm3 4
Keywordmm4 ;
)mm; <
||nn 
modelnn 
.nn 
PhoneNumbernn $
.nn$ %
Containsnn% -
(nn- .
requestnn. 5
.nn5 6
Keywordnn6 =
)nn= >
||oo 
modeloo 
.oo 
Emailoo 
.oo 
Containsoo '
(oo' (
requestoo( /
.oo/ 0
Keywordoo0 7
)oo7 8
)oo8 9
)oo9 :
;oo: ;
varqq 
dataqq 
=qq 
awaitqq  
ApiCustomerViewModelqq 1
.qq1 2

Repositoryqq2 <
.qq< =
GetModelListByAsyncqq= P
(qqP Q
	predicateqqQ Z
,qqZ [
requestqq\ c
.qqc d
OrderByqqd k
,qqk l
requestqqm t
.qqt u
	Directionqqu ~
,qq~ 
request
qqÄ á
.
qqá à
PageSize
qqà ê
,
qqê ë
request
qqí ô
.
qqô ö
	PageIndex
qqö £
)
qq£ §
.
qq§ •
ConfigureAwait
qq• ≥
(
qq≥ ¥
false
qq¥ π
)
qqπ ∫
;
qq∫ ª
returnss 
datass 
;ss 
}tt 	
}ww 
}xx ü;
PG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiFileController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
,M N
Roles 
= 
$str #
)# $
]$ %
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiFileController "
:# $
BaseApiController% 6
{ 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
RepositoryResponse !
<! "
FileViewModel" /
>/ 0
Details1 8
(8 9
string9 ?
folder@ F
,F G
stringH N
filenameO W
)W X
{ 	
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
folder& ,
), -
)- .
{ 
var   
file   
=   
FileRepository   )
.  ) *
Instance  * 2
.  2 3

GetWebFile  3 =
(  = >
filename  > F
,  F G
folder  H N
)  N O
;  O P
return"" 
new"" 
RepositoryResponse"" -
<""- .
FileViewModel"". ;
>""; <
(""< =
)""= >
{## 
	IsSucceed$$ 
=$$ 
file$$  $
!=$$% '
null$$( ,
,$$, -
Data%% 
=%% 
file%% 
}&& 
;&& 
}'' 
else(( 
{)) 
return** 
new** 
RepositoryResponse** -
<**- .
FileViewModel**. ;
>**; <
(**< =
)**= >
;**> ?
}++ 
},, 	
[// 	
HttpGet//	 
]// 
[00 	
Route00	 
(00 
$str00 
)00 
]00 
public11 
RepositoryResponse11 !
<11! "
bool11" &
>11& '
Delete11( .
(11. /
RequestObject11/ <
request11= D
)11D E
{22 	
string33 
fullPath33 
=33 
SwCmsHelper33 )
.33) *
GetFullPath33* 5
(335 6
new336 9
string33: @
[33@ A
]33A B
{44 
request55 
.55 
Key55 
,55 
request66 
.66 
Keyword66 
}77 
)77 
;77 
var88 
result88 
=88 
FileRepository88 '
.88' (
Instance88( 0
.880 1
DeleteWebFile881 >
(88> ?
fullPath88? G
)88G H
;88H I
return99 
new99 
RepositoryResponse99 )
<99) *
bool99* .
>99. /
(99/ 0
)990 1
{:: 
	IsSucceed;; 
=;; 
result;; "
,;;" #
Data<< 
=<< 
result<< 
}== 
;== 
}>> 	
[GG 	
RouteGG	 
(GG 
$strGG 
)GG 
]GG 
[HH 	
HttpPostHH	 
]HH 
publicII 
IActionResultII 
EditII !
(II! "
FileViewModelII" /
templateII0 8
)II8 9
{JJ 	
ifKK 
(KK 

ModelStateKK 
.KK 
IsValidKK "
)KK" #
{LL 
varMM 
resultMM 
=MM 
FileRepositoryMM +
.MM+ ,
InstanceMM, 4
.MM4 5
SaveWebFileMM5 @
(MM@ A
templateMMA I
)MMI J
;MMJ K
returnNN 
GetSuccessResultNN '
(NN' (
resultNN( .
)NN. /
;NN/ 0
}OO 
returnPP 
GetErrorResultPP !
(PP! "
$strPP" *
,PP* +
$strPP, 5
)PP5 6
;PP6 7
}QQ 	
[TT 	
HttpPostTT	 
,TT 
HttpOptionsTT 
]TT 
[UU 	
RouteUU	 
(UU 
$strUU 
)UU 
]UU 
publicVV 
RepositoryResponseVV !
<VV! "
FileViewModelVV" /
>VV/ 0
SaveVV1 5
(VV5 6
[VV6 7
FromBodyVV7 ?
]VV? @
FileViewModelVV@ M
modelVVN S
)VVS T
{WW 	
ifXX 
(XX 
modelXX 
!=XX 
nullXX 
)XX 
{YY 
varZZ 
resultZZ 
=ZZ 
FileRepositoryZZ +
.ZZ+ ,
InstanceZZ, 4
.ZZ4 5
SaveWebFileZZ5 @
(ZZ@ A
modelZZA F
)ZZF G
;ZZG H
return[[ 
new[[ 
RepositoryResponse[[ -
<[[- .
FileViewModel[[. ;
>[[; <
([[< =
)[[= >
{\\ 
	IsSucceed]] 
=]] 
result]]  &
,]]& '
Data^^ 
=^^ 
model^^  
}__ 
;__ 
}`` 
returnaa 
newaa 
RepositoryResponseaa )
<aa) *
FileViewModelaa* 7
>aa7 8
(aa8 9
)aa9 :
;aa: ;
}bb 	
[ff 	
HttpPostff	 
,ff 
HttpOptionsff 
]ff 
[gg 	
Routegg	 
(gg 
$strgg 
)gg 
]gg 
publichh 
RepositoryResponsehh !
<hh! " 
ApiFilePageViewModelhh" 6
>hh6 7
GetListhh8 ?
(hh? @
[hh@ A
FromBodyhhA I
]hhI J
RequestPaginghhJ W
requesthhX _
)hh_ `
{ii 	"
ParseRequestPagingDatejj "
(jj" #
requestjj# *
)jj* +
;jj+ ,
varkk 
fileskk 
=kk 
FileRepositorykk &
.kk& '
Instancekk' /
.kk/ 0
GetTopFileskk0 ;
(kk; <
requestkk< C
.kkC D
KeykkD G
)kkG H
;kkH I
varll 
directoriesll 
=ll 
FileRepositoryll ,
.ll, -
Instancell- 5
.ll5 6
GetTopDirectoriesll6 G
(llG H
requestllH O
.llO P
KeyllP S
)llS T
;llT U
returnmm 
newmm 
RepositoryResponsemm )
<mm) * 
ApiFilePageViewModelmm* >
>mm> ?
(mm? @
)mm@ A
{nn 
	IsSucceedoo 
=oo 
trueoo  
,oo  !
Datapp 
=pp 
newpp  
ApiFilePageViewModelpp /
(pp/ 0
)pp0 1
{qq 
Filesrr 
=rr 
filesrr !
,rr! "
Directoriesss 
=ss  !
directoriesss" -
}tt 
}uu 
;uu 
}vv 	
}zz 
}{{ «≠
QG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiMediaController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Route 

(
 
$str  
)  !
]! "
public 

class 
ApiMediaController #
:$ %
BaseApiController 
{ 
public 
ApiMediaController !
(! "
)" #
{ 	
} 	
[## 	
HttpGet##	 
]## 
[$$ 	
Route$$	 
($$ 
$str$$ (
)$$( )
]$$) *
[%% 	
Route%%	 
(%% 
$str%% #
)%%# $
]%%$ %
public&& 
async&& 
Task&& 
<&& 
JObject&& !
>&&! "
	BEDetails&&# ,
(&&, -
string&&- 3
viewType&&4 <
,&&< =
int&&> A
?&&A B
id&&C E
=&&F G
null&&H L
)&&L M
{'' 	
switch(( 
((( 
viewType(( 
)(( 
{)) 
default** 
:** 
if++ 
(++ 
id++ 
.++ 
HasValue++ #
)++# $
{,, 
var-- 
feResult-- $
=--% &
await--' ,
BEMediaViewModel--- =
.--= >

Repository--> H
.--H I
GetSingleModelAsync--I \
(--\ ]
model.. 
=>..  
model..! &
...& '
Id..' )
==..* ,
id..- /
&&..0 2
model..3 8
...8 9
Specificulture..9 G
==..H J
_lang..K P
)..P Q
...Q R
ConfigureAwait..R `
(..` a
false..a f
)..f g
;..g h
return// 
JObject// &
.//& '

FromObject//' 1
(//1 2
feResult//2 :
)//: ;
;//; <
}00 
else11 
{22 
var33 
media33 !
=33" #
new33$ '
	SiocMedia33( 1
(331 2
)332 3
{44 
Specificulture55 *
=55+ ,
_lang55- 2
,552 3
Priority66 $
=66% &
BEMediaViewModel66' 7
.667 8

Repository668 B
.66B C
Max66C F
(66F G
a66G H
=>66I K
a66L M
.66M N
Priority66N V
)66V W
.66W X
Data66X \
+66] ^
$num66_ `
}77 
;77 
var88 
result88 "
=88# $
new88% (
RepositoryResponse88) ;
<88; <
BEMediaViewModel88< L
>88L M
(88M N
)88N O
{99 
	IsSucceed:: %
=::& '
true::( ,
,::, -
Data;;  
=;;! "
(;;# $
await;;$ )
BEMediaViewModel;;* :
.;;: ;
	InitAsync;;; D
(;;D E
media;;E J
);;J K
);;K L
}<< 
;<< 
return== 
JObject== &
.==& '

FromObject==' 1
(==1 2
result==2 8
)==8 9
;==9 :
}>> 
}@@ 
}AA 	
[DD 	
HttpGetDD	 
]DD 
[EE 	
RouteEE	 
(EE 
$strEE 
)EE 
]EE 
publicFF 
asyncFF 
TaskFF 
<FF 
RepositoryResponseFF ,
<FF, -
	SiocMediaFF- 6
>FF6 7
>FF7 8
DeleteFF9 ?
(FF? @
intFF@ C
idFFD F
)FFF G
{GG 	
varHH 
getMediaHH 
=HH 
BEMediaViewModelHH +
.HH+ ,

RepositoryHH, 6
.HH6 7
GetSingleModelHH7 E
(HHE F
aHHF G
=>HHH J
aHHK L
.HHL M
IdHHM O
==HHP R
idHHS U
&&HHV X
aHHY Z
.HHZ [
SpecificultureHH[ i
==HHj l
_langHHm r
)HHr s
;HHs t
ifII 
(II 
getMediaII 
.II 
	IsSucceedII "
)II" #
{JJ 
returnKK 
awaitKK 
getMediaKK %
.KK% &
DataKK& *
.KK* +
RemoveModelAsyncKK+ ;
(KK; <
trueKK< @
)KK@ A
.KKA B
ConfigureAwaitKKB P
(KKP Q
falseKKQ V
)KKV W
;KKW X
}LL 
elseMM 
{NN 
returnOO 
newOO 
RepositoryResponseOO -
<OO- .
	SiocMediaOO. 7
>OO7 8
(OO8 9
)OO9 :
{OO; <
	IsSucceedOO= F
=OOG H
falseOOI N
}OOO P
;OOP Q
}PP 
}QQ 	
[TT 	
HttpGetTT	 
]TT 
[VV 	
RouteVV	 
(VV 
$strVV 
)VV 
]VV 
[WW 	
RouteWW	 
(WW 
$strWW 6
)WW6 7
]WW7 8
[XX 	
RouteXX	 
(XX 
$strXX +
)XX+ ,
]XX, -
[YY 	
RouteYY	 
(YY 
$strYY L
)YYL M
]YYM N
publicZZ 
asyncZZ 
TaskZZ 
<ZZ 
RepositoryResponseZZ ,
<ZZ, -
PaginationModelZZ- <
<ZZ< =
BEMediaViewModelZZ= M
>ZZM N
>ZZN O
>ZZO P
GetZZQ T
(ZZT U
int[[ 
?[[ 
pageSize[[ 
=[[ 
$num[[ 
,[[ 
int[[  #
?[[# $
	pageIndex[[% .
=[[/ 0
$num[[1 2
,[[2 3
string[[4 :
orderBy[[; B
=[[C D
$str[[E I
,\\ 
OrderByDirection\\ 
	direction\\ (
=\\) *
OrderByDirection\\+ ;
.\\; <
	Ascending\\< E
)\\E F
{]] 	
var^^ 
data^^ 
=^^ 
await^^ 
BEMediaViewModel^^ -
.^^- .

Repository^^. 8
.^^8 9
GetModelListByAsync^^9 L
(^^L M
m__ 
=>__ 
m__ 
.__ 
Specificulture__ %
==__& (
_lang__) .
,__. /
orderBy__0 7
,__7 8
	direction__9 B
,__B C
pageSize__D L
,__L M
	pageIndex__N W
)__W X
.__X Y
ConfigureAwait__Y g
(__g h
false__h m
)__m n
;__n o
return`` 
data`` 
;`` 
}aa 	
[dd 	
HttpGetdd	 
]dd 
[ee 	
Routeee	 
(ee 
$stree !
)ee! "
]ee" #
[ff 	
Routeff	 
(ff 
$strff B
)ffB C
]ffC D
[gg 	
Routegg	 
(gg 
$strgg X
)ggX Y
]ggY Z
publichh 
asynchh 
Taskhh 
<hh 
RepositoryResponsehh ,
<hh, -
PaginationModelhh- <
<hh< =
BEMediaViewModelhh= M
>hhM N
>hhN O
>hhO P
SearchhhQ W
(hhW X
stringii 
keywordii 
=ii 
nullii !
,ii! "
intii# &
?ii& '
pageSizeii( 0
=ii1 2
nullii3 7
,ii7 8
intii9 <
?ii< =
	pageIndexii> G
=iiH I
nulliiJ N
,iiN O
stringiiP V
orderByiiW ^
=ii_ `
$striia e
,jj 
OrderByDirectionjj 
	directionjj (
=jj) *
OrderByDirectionjj+ ;
.jj; <
	Ascendingjj< E
)jjE F
{kk 	

Expressionll 
<ll 
Funcll 
<ll 
	SiocMediall %
,ll% &
boolll' +
>ll+ ,
>ll, -
	predicatell. 7
=ll8 9
modelll: ?
=>ll@ B
modelmm 
.mm 
Specificulturemm  
==mm! #
_langmm$ )
&&nn 
(nn 
stringoo 
.oo 
IsNullOrWhiteSpaceoo %
(oo% &
keywordoo& -
)oo- .
||pp 
modelpp 
.pp 
FileNamepp !
.pp! "
Containspp" *
(pp* +
keywordpp+ 2
)pp2 3
)qq 
;qq 
varrr 
datarr 
=rr 
awaitrr 
BEMediaViewModelrr -
.rr- .

Repositoryrr. 8
.rr8 9
GetModelListByAsyncrr9 L
(rrL M
	predicaterrM V
,rrV W
orderByrrX _
,rr_ `
	directionrra j
,rrj k
pageSizerrl t
,rrt u
	pageIndexrrv 
)	rr Ä
.
rrÄ Å
ConfigureAwait
rrÅ è
(
rrè ê
false
rrê ï
)
rrï ñ
;
rrñ ó
returntt 
datatt 
;tt 
}uu 	
[{{ 	
Route{{	 
({{ 
$str{{ 
){{ 
]{{ 
[|| 	
HttpPost||	 
]|| 
public}} 
async}} 
Task}} 
<}} 
RepositoryResponse}} ,
<}}, -
BEMediaViewModel}}- =
>}}= >
>}}> ?
UploadAsync}}@ K
(}}K L
[}}L M
FromForm}}M U
]}}U V
string}}W ]

fileFolder}}^ h
,}}h i
[}}j k
FromForm}}k s
]}}s t
string}}u {
title	}}| Å
,
}}Å Ç
[
}}É Ñ
FromForm
}}Ñ å
]
}}å ç
string
}}é î
description
}}ï †
)
}}† °
{~~ 	
var 
files 
= 
Request 
.  
Form  $
.$ %
Files% *
;* +
if
ÅÅ 
(
ÅÅ 
files
ÅÅ 
.
ÅÅ 
Count
ÅÅ 
>
ÅÅ 
$num
ÅÅ 
)
ÅÅ  
{
ÇÇ 
var
ÉÉ 

fileUpload
ÉÉ 
=
ÉÉ  
files
ÉÉ! &
.
ÉÉ& '
FirstOrDefault
ÉÉ' 5
(
ÉÉ5 6
)
ÉÉ6 7
;
ÉÉ7 8
string
ÖÖ 

folderPath
ÖÖ !
=
ÖÖ" #
SwCmsHelper
ÖÖ$ /
.
ÖÖ/ 0
GetFullPath
ÖÖ0 ;
(
ÖÖ; <
new
ÖÖ< ?
[
ÖÖ? @
]
ÖÖ@ A
{
ÖÖB C
SWCmsConstants
ÜÜ "
.
ÜÜ" #

Parameters
ÜÜ# -
.
ÜÜ- .
UploadFolder
ÜÜ. :
,
ÜÜ: ;

fileFolder
áá 
,
áá 
DateTime
àà 
.
àà 
UtcNow
àà #
.
àà# $
ToString
àà$ ,
(
àà, -
$str
àà- 6
)
àà6 7
}
ââ 
)
ââ 
;
ââ 
string
ãã 

uploadPath
ãã !
=
ãã" #
SwCmsHelper
ãã$ /
.
ãã/ 0
GetFullPath
ãã0 ;
(
ãã; <
new
ãã< ?
[
ãã? @
]
ãã@ A
{
ããB C
SWCmsConstants
åå "
.
åå" #

Parameters
åå# -
.
åå- .
WebRootPath
åå. 9
,
åå9 :

folderPath
çç 
}
éé 
)
éé 
;
éé 
string
êê 
fileName
êê 
=
êê  !
SwCmsHelper
ëë 
.
ëë 
GetFullPath
ëë '
(
ëë' (
new
ëë( +
[
ëë+ ,
]
ëë, -
{
ëë. /
$str
íí 
,
íí 
await
ìì 
UploadFileAsync
ìì )
(
ìì) *
files
ìì* /
.
ìì/ 0
FirstOrDefault
ìì0 >
(
ìì> ?
)
ìì? @
,
ìì@ A

uploadPath
ììB L
)
ììL M
.
ììM N
ConfigureAwait
ììN \
(
ìì\ ]
false
ìì] b
)
ììb c
}
îî 
)
îî 
;
îî 
BEMediaViewModel
ïï  
media
ïï! &
=
ïï' (
new
ïï) ,
BEMediaViewModel
ïï- =
(
ïï= >
new
ïï> A
	SiocMedia
ïïB K
(
ïïK L
)
ïïL M
{
ññ 
Specificulture
óó "
=
óó# $
_lang
óó% *
,
óó* +
FileName
òò 
=
òò 
fileName
òò '
.
òò' (
Split
òò( -
(
òò- .
$char
òò. 1
)
òò1 2
[
òò2 3
$num
òò3 4
]
òò4 5
.
òò5 6
	Substring
òò6 ?
(
òò? @
fileName
òò@ H
.
òòH I
LastIndexOf
òòI T
(
òòT U
$char
òòU X
)
òòX Y
+
òòZ [
$num
òò\ ]
)
òò] ^
,
òò^ _

FileFolder
ôô 
=
ôô  

folderPath
ôô! +
,
ôô+ ,
	Extension
öö 
=
öö 
fileName
öö  (
.
öö( )
	Substring
öö) 2
(
öö2 3
fileName
öö3 ;
.
öö; <
LastIndexOf
öö< G
(
ööG H
$char
ööH K
)
ööK L
)
ööL M
,
ööM N
CreatedDateTime
õõ #
=
õõ$ %
DateTime
õõ& .
.
õõ. /
UtcNow
õõ/ 5
,
õõ5 6
FileType
úú 
=
úú 

fileUpload
úú )
.
úú) *
ContentType
úú* 5
.
úú5 6
Split
úú6 ;
(
úú; <
$char
úú< ?
)
úú? @
[
úú@ A
$num
úúA B
]
úúB C
,
úúC D
FileSize
ùù 
=
ùù 

fileUpload
ùù )
.
ùù) *
Length
ùù* 0
,
ùù0 1
Title
ûû 
=
ûû 
title
ûû !
??
ûû" $
fileName
ûû% -
.
ûû- .
Split
ûû. 3
(
ûû3 4
$char
ûû4 7
)
ûû7 8
[
ûû8 9
$num
ûû9 :
]
ûû: ;
.
ûû; <
	Substring
ûû< E
(
ûûE F
fileName
ûûF N
.
ûûN O
LastIndexOf
ûûO Z
(
ûûZ [
$char
ûû[ ^
)
ûû^ _
+
ûû` a
$num
ûûb c
)
ûûc d
,
ûûd e
Description
üü 
=
üü  !
description
üü" -
??
üü. 0
fileName
üü1 9
.
üü9 :
Split
üü: ?
(
üü? @
$char
üü@ C
)
üüC D
[
üüD E
$num
üüE F
]
üüF G
.
üüG H
	Substring
üüH Q
(
üüQ R
fileName
üüR Z
.
üüZ [
LastIndexOf
üü[ f
(
üüf g
$char
üüg j
)
üüj k
+
üül m
$num
üün o
)
üüo p
}
†† 
)
†† 
;
†† 
return
°° 
await
°° 
media
°° "
.
°°" #
SaveModelAsync
°°# 1
(
°°1 2
)
°°2 3
;
°°3 4
}
¢¢ 
else
££ 
{
§§ 
return
•• 
new
••  
RepositoryResponse
•• -
<
••- .
BEMediaViewModel
••. >
>
••> ?
(
••? @
)
••@ A
;
••A B
}
¶¶ 
}
ßß 	
[
™™ 	
HttpPost
™™	 
,
™™ 
HttpOptions
™™ 
]
™™ 
[
´´ 	
Route
´´	 
(
´´ 
$str
´´ 
)
´´ 
]
´´ 
public
¨¨ 
async
¨¨ 
Task
¨¨ 
<
¨¨  
RepositoryResponse
¨¨ ,
<
¨¨, -
BEMediaViewModel
¨¨- =
>
¨¨= >
>
¨¨> ?
Post
¨¨@ D
(
¨¨D E
[
¨¨E F
FromBody
¨¨F N
]
¨¨N O
BEMediaViewModel
¨¨O _
model
¨¨` e
)
¨¨e f
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
model
ÆÆ 
!=
ÆÆ 
null
ÆÆ 
)
ÆÆ 
{
ØØ 
var
∞∞ 
result
∞∞ 
=
∞∞ 
await
∞∞ "
model
∞∞# (
.
∞∞( )
SaveModelAsync
∞∞) 7
(
∞∞7 8
true
∞∞8 <
)
∞∞< =
.
∞∞= >
ConfigureAwait
∞∞> L
(
∞∞L M
false
∞∞M R
)
∞∞R S
;
∞∞S T
return
≤≤ 
result
≤≤ 
;
≤≤ 
}
≥≥ 
return
¥¥ 
new
¥¥  
RepositoryResponse
¥¥ )
<
¥¥) *
BEMediaViewModel
¥¥* :
>
¥¥: ;
(
¥¥; <
)
¥¥< =
;
¥¥= >
}
µµ 	
[
ππ 	
HttpPost
ππ	 
,
ππ 
HttpOptions
ππ 
]
ππ 
[
∫∫ 	
Route
∫∫	 
(
∫∫ 
$str
∫∫ 
)
∫∫ 
]
∫∫ 
public
ªª 
async
ªª 
Task
ªª 
<
ªª  
RepositoryResponse
ªª ,
<
ªª, -
PaginationModel
ªª- <
<
ªª< =
BEMediaViewModel
ªª= M
>
ªªM N
>
ªªN O
>
ªªO P
GetList
ªªQ X
(
ªªX Y
[
ªªY Z
FromBody
ªªZ b
]
ªªb c
RequestPaging
ªªc p
request
ªªq x
)
ªªx y
{
ºº 	$
ParseRequestPagingDate
ΩΩ "
(
ΩΩ" #
request
ΩΩ# *
)
ΩΩ* +
;
ΩΩ+ ,

Expression
ææ 
<
ææ 
Func
ææ 
<
ææ 
	SiocMedia
ææ %
,
ææ% &
bool
ææ' +
>
ææ+ ,
>
ææ, -
	predicate
ææ. 7
=
ææ8 9
model
ææ: ?
=>
ææ@ B
model
øø 
.
øø 
Specificulture
øø $
==
øø% '
_lang
øø( -
&&
¿¿ 
(
¿¿ 
string
¿¿ 
.
¿¿  
IsNullOrWhiteSpace
¿¿ -
(
¿¿- .
request
¿¿. 5
.
¿¿5 6
Keyword
¿¿6 =
)
¿¿= >
||
¡¡ 
(
¡¡ 
model
¡¡ 
.
¡¡ 
FileName
¡¡ "
.
¡¡" #
Contains
¡¡# +
(
¡¡+ ,
request
¡¡, 3
.
¡¡3 4
Keyword
¡¡4 ;
)
¡¡; <
||
¬¬ 
model
¬¬ 
.
¬¬ 
Title
¬¬ 
.
¬¬ 
Contains
¬¬ '
(
¬¬' (
request
¬¬( /
.
¬¬/ 0
Keyword
¬¬0 7
)
¬¬7 8
||
√√ 
model
√√ 
.
√√ 
Description
√√ $
.
√√$ %
Contains
√√% -
(
√√- .
request
√√. 5
.
√√5 6
Keyword
√√6 =
)
√√= >
)
√√> ?
)
√√? @
&&
ƒƒ 
(
ƒƒ 
!
ƒƒ 
request
ƒƒ 
.
ƒƒ 
FromDate
ƒƒ %
.
ƒƒ% &
HasValue
ƒƒ& .
||
≈≈ 
(
≈≈ 
model
≈≈ 
.
≈≈ 
CreatedDateTime
≈≈ -
>=
≈≈. 0
request
≈≈1 8
.
≈≈8 9
FromDate
≈≈9 A
.
≈≈A B
Value
≈≈B G
)
≈≈G H
)
∆∆ 
&&
«« 
(
«« 
!
«« 
request
«« 
.
«« 
ToDate
«« #
.
««# $
HasValue
««$ ,
||
»» 
(
»» 
model
»» 
.
»» 
CreatedDateTime
»» -
<=
»». 0
request
»»1 8
.
»»8 9
ToDate
»»9 ?
.
»»? @
Value
»»@ E
)
»»E F
)
…… 
;
…… 
var
ÀÀ 
data
ÀÀ 
=
ÀÀ 
await
ÀÀ 
BEMediaViewModel
ÀÀ -
.
ÀÀ- .

Repository
ÀÀ. 8
.
ÀÀ8 9!
GetModelListByAsync
ÀÀ9 L
(
ÀÀL M
	predicate
ÀÀM V
,
ÀÀV W
request
ÀÀX _
.
ÀÀ_ `
OrderBy
ÀÀ` g
,
ÀÀg h
request
ÀÀi p
.
ÀÀp q
	Direction
ÀÀq z
,
ÀÀz {
requestÀÀ| É
.ÀÀÉ Ñ
PageSizeÀÀÑ å
,ÀÀå ç
requestÀÀé ï
.ÀÀï ñ
	PageIndexÀÀñ ü
)ÀÀü †
.ÀÀ† °
ConfigureAwaitÀÀ° Ø
(ÀÀØ ∞
falseÀÀ∞ µ
)ÀÀµ ∂
;ÀÀ∂ ∑
return
ÕÕ 
data
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
[
–– 	
HttpPost
––	 
,
–– 
HttpOptions
–– 
]
–– 
[
—— 	
Route
——	 
(
—— 
$str
—— +
)
——+ ,
]
——, -
[
““ 	
Route
““	 
(
““ 
$str
““ 
)
““  
]
““  !
public
”” 
async
”” 
Task
”” 
<
””  
RepositoryResponse
”” ,
<
””, -
PaginationModel
””- <
<
””< =&
NavProductMediaViewModel
””= U
>
””U V
>
””V W
>
””W X
GetListByProduct
””Y i
(
””i j
RequestPaging
””j w
request
””x 
,”” Ä
string””Å á
	productId””à ë
=””í ì
null””î ò
)””ò ô
{
‘‘ 	
var
’’ 
data
’’ 
=
’’ 
await
’’ &
NavProductMediaViewModel
’’ 5
.
’’5 6

Repository
’’6 @
.
’’@ A!
GetModelListByAsync
’’A T
(
’’T U
m
÷÷ 
=>
÷÷ 
m
÷÷ 
.
÷÷ 
	ProductId
÷÷ 
==
÷÷ 
	productId
÷÷  )
&&
÷÷* ,
m
÷÷- .
.
÷÷. /
Specificulture
÷÷/ =
==
÷÷> @
_lang
÷÷A F
,
÷÷F G
request
÷÷H O
.
÷÷O P
OrderBy
÷÷P W
,
◊◊ 
request
◊◊ 
.
◊◊ 
	Direction
◊◊ 
,
◊◊  
request
◊◊! (
.
◊◊( )
PageSize
◊◊) 1
,
◊◊1 2
request
◊◊3 :
.
◊◊: ;
	PageIndex
◊◊; D
)
◊◊D E
.
ÿÿ 
ConfigureAwait
ÿÿ 
(
ÿÿ 
false
ÿÿ !
)
ÿÿ! "
;
ÿÿ" #
return
⁄⁄ 
data
⁄⁄ 
;
⁄⁄ 
}
‹‹ 	
}
ﬂﬂ 
}‡‡ °∑
RG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiModuleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str !
)! "
]" #
public 

class 
ApiModuleController $
:% &
BaseApiController 
{ 
public 
ApiModuleController "
(" #
)# $
{ 	
} 	
["" 	
HttpGet""	 
]"" 
[## 	
Route##	 
(## 
$str## (
)##( )
]##) *
[$$ 	
Route$$	 
($$ 
$str$$ #
)$$# $
]$$$ %
public%% 
async%% 
Task%% 
<%% 
JObject%% !
>%%! "
DetailsByType%%# 0
(%%0 1
string%%1 7
viewType%%8 @
,%%@ A
int%%B E
?%%E F
id%%G I
=%%J K
null%%L P
)%%P Q
{&& 	
switch'' 
('' 
viewType'' 
)'' 
{(( 
case)) 
$str)) 
:)) 
if** 
(** 
id** 
.** 
HasValue** #
)**# $
{++ 
var,, 
	spaResult,, %
=,,& '
await,,( -
SpaModuleViewModel,,. @
.,,@ A

Repository,,A K
.,,K L
GetSingleModelAsync,,L _
(,,_ `
model,,` e
=>,,f h
model,,i n
.,,n o
Id,,o q
==,,r t
id,,u w
&&,,x z
model	,,{ Ä
.
,,Ä Å
Specificulture
,,Å è
==
,,ê í
_lang
,,ì ò
)
,,ò ô
.
,,ô ö
ConfigureAwait
,,ö ®
(
,,® ©
false
,,© Æ
)
,,Æ Ø
;
,,Ø ∞
return-- 
JObject-- &
.--& '

FromObject--' 1
(--1 2
	spaResult--2 ;
)--; <
;--< =
}.. 
else// 
{00 
var11 
model11 !
=11" #
new11$ '

SiocModule11( 2
(112 3
)113 4
{115 6
Specificulture117 E
=11F G
_lang11H M
,11M N
Status11O U
=11V W
(11X Y
int11Y \
)11\ ]
SWStatus11] e
.11e f
Preview11f m
}11n o
;11o p
RepositoryResponse33 *
<33* +
SpaModuleViewModel33+ =
>33= >
result33? E
=33F G
new33H K
RepositoryResponse33L ^
<33^ _
SpaModuleViewModel33_ q
>33q r
(33r s
)33s t
{44 
	IsSucceed55 %
=55& '
true55( ,
,55, -
Data66  
=66! "
await66# (
SpaModuleViewModel66) ;
.66; <
	InitAsync66< E
(66E F
model66F K
)66K L
}77 
;77 
return88 
JObject88 &
.88& '

FromObject88' 1
(881 2
result882 8
)888 9
;889 :
}99 
case:: 
$str:: 
::: 
if;; 
(;; 
id;; 
.;; 
HasValue;; #
);;# $
{<< 
var== 
beResult== $
===% &
await==' ,
ApiModuleViewModel==- ?
.==? @

Repository==@ J
.==J K
GetSingleModelAsync==K ^
(==^ _
model==_ d
=>==e g
model==h m
.==m n
Id==n p
====q s
id==t v
&&==w y
model==z 
.	== Ä
Specificulture
==Ä é
==
==è ë
_lang
==í ó
)
==ó ò
.
==ò ô
ConfigureAwait
==ô ß
(
==ß ®
false
==® ≠
)
==≠ Æ
;
==Æ Ø
return>> 
JObject>> &
.>>& '

FromObject>>' 1
(>>1 2
beResult>>2 :
)>>: ;
;>>; <
}?? 
else@@ 
{AA 
varBB 
modelBB !
=BB" #
newBB$ '

SiocModuleBB( 2
(BB2 3
)BB3 4
{CC 
SpecificultureDD *
=DD+ ,
_langDD- 2
,DD2 3
StatusEE "
=EE# $
(EE% &
intEE& )
)EE) *
SWStatusEE* 2
.EE2 3
PreviewEE3 :
,FF 
PriorityGG $
=GG% &
ApiModuleViewModelGG' 9
.GG9 :

RepositoryGG: D
.GGD E
MaxGGE H
(GGH I
aGGI J
=>GGK M
aGGN O
.GGO P
PriorityGGP X
)GGX Y
.GGY Z
DataGGZ ^
+GG_ `
$numGGa b
}HH 
;HH 
RepositoryResponseJJ *
<JJ* +
ApiModuleViewModelJJ+ =
>JJ= >
resultJJ? E
=JJF G
newJJH K
RepositoryResponseJJL ^
<JJ^ _
ApiModuleViewModelJJ_ q
>JJq r
(JJr s
)JJs t
{KK 
	IsSucceedLL %
=LL& '
trueLL( ,
,LL, -
DataMM  
=MM! "
awaitMM# (
ApiModuleViewModelMM) ;
.MM; <
	InitAsyncMM< E
(MME F
modelMMF K
)MMK L
}NN 
;NN 
returnOO 
JObjectOO &
.OO& '

FromObjectOO' 1
(OO1 2
resultOO2 8
)OO8 9
;OO9 :
}PP 
defaultQQ 
:QQ 
ifRR 
(RR 
idRR 
.RR 
HasValueRR #
)RR# $
{SS 
varTT 
beResultTT $
=TT% &
awaitTT' ,
FEModuleViewModelTT- >
.TT> ?

RepositoryTT? I
.TTI J
GetSingleModelAsyncTTJ ]
(TT] ^
modelTT^ c
=>TTd f
modelTTg l
.TTl m
IdTTm o
==TTp r
idTTs u
&&TTv x
modelTTy ~
.TT~ 
Specificulture	TT ç
==
TTé ê
_lang
TTë ñ
)
TTñ ó
.
TTó ò
ConfigureAwait
TTò ¶
(
TT¶ ß
false
TTß ¨
)
TT¨ ≠
;
TT≠ Æ
returnUU 
JObjectUU &
.UU& '

FromObjectUU' 1
(UU1 2
beResultUU2 :
)UU: ;
;UU; <
}VV 
elseWW 
{XX 
varYY 
modelYY !
=YY" #
newYY$ '

SiocModuleYY( 2
(YY2 3
)YY3 4
;YY4 5
RepositoryResponseZZ *
<ZZ* +
FEModuleViewModelZZ+ <
>ZZ< =
resultZZ> D
=ZZE F
newZZG J
RepositoryResponseZZK ]
<ZZ] ^
FEModuleViewModelZZ^ o
>ZZo p
(ZZp q
)ZZq r
{[[ 
	IsSucceed\\ %
=\\& '
true\\( ,
,\\, -
Data]]  
=]]! "
new]]# &
FEModuleViewModel]]' 8
(]]8 9
model]]9 >
)]]> ?
{]]@ A
Specificulture]]B P
=]]Q R
_lang]]S X
,]]X Y
Status]]Z `
=]]a b
SWStatus]]c k
.]]k l
Preview]]l s
}]]t u
}^^ 
;^^ 
return__ 
JObject__ &
.__& '

FromObject__' 1
(__1 2
result__2 8
)__8 9
;__9 :
}`` 
}aa 
}bb 	
[ee 	
HttpGetee	 
]ee 
[ff 	
Routeff	 
(ff 
$strff 
)ff 
]ff 
publicgg 
asyncgg 
Taskgg 
<gg 
RepositoryResponsegg ,
<gg, -

SiocModulegg- 7
>gg7 8
>gg8 9
DeleteAsyncgg: E
(ggE F
intggF I
idggJ L
)ggL M
{hh 	
varii 
	getModuleii 
=ii 
awaitii !
FEModuleViewModelii" 3
.ii3 4

Repositoryii4 >
.ii> ?
GetSingleModelAsyncii? R
(iiR S
modeljj 
=>jj 
modeljj 
.jj 
Idjj !
==jj" $
idjj% '
&&jj( *
modeljj+ 0
.jj0 1
Specificulturejj1 ?
==jj@ B
_langjjC H
)jjH I
;jjI J
ifkk 
(kk 
	getModulekk 
.kk 
	IsSucceedkk #
)kk# $
{ll 
returnnn 
awaitnn 
	getModulenn &
.nn& '
Datann' +
.nn+ ,
RemoveModelAsyncnn, <
(nn< =
truenn= A
)nnA B
;nnB C
}oo 
elsepp 
{qq 
returnrr 
newrr 
RepositoryResponserr -
<rr- .

SiocModulerr. 8
>rr8 9
(rr9 :
)rr: ;
{ss 
	IsSucceedtt 
=tt 
falsett  %
}uu 
;uu 
}vv 
}ww 	
[{{ 	
HttpGet{{	 
]{{ 
[|| 	
Route||	 
(|| 
$str|| 
)||  
]||  !
[}} 	
Route}}	 
(}} 
$str}} +
)}}+ ,
]}}, -
public~~ 
async~~ 
Task~~ 
<~~ 
RepositoryResponse~~ ,
<~~, -
FEModuleViewModel~~- >
>~~> ?
>~~? @
GetByArticle~~A M
(~~M N
int~~N Q
id~~R T
,~~T U
string~~V \
	articleId~~] f
=~~g h
null~~i m
)~~m n
{ 	
var
ÄÄ 
result
ÄÄ 
=
ÄÄ 
await
ÄÄ 
FEModuleViewModel
ÄÄ 0
.
ÄÄ0 1

Repository
ÄÄ1 ;
.
ÄÄ; <!
GetSingleModelAsync
ÄÄ< O
(
ÄÄO P
model
ÄÄP U
=>
ÄÄV X
model
ÄÄY ^
.
ÄÄ^ _
Id
ÄÄ_ a
==
ÄÄb d
id
ÄÄe g
&&
ÄÄh j
model
ÄÄk p
.
ÄÄp q
Specificulture
ÄÄq 
==ÄÄÄ Ç
_langÄÄÉ à
)ÄÄà â
.ÄÄâ ä
ConfigureAwaitÄÄä ò
(ÄÄò ô
falseÄÄô û
)ÄÄû ü
;ÄÄü †
return
ÅÅ 
result
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
[
ÖÖ 	
HttpGet
ÖÖ	 
]
ÖÖ 
[
ÜÜ 	
Route
ÜÜ	 
(
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
]
ÜÜ 
[
áá 	
Route
áá	 
(
áá 
$str
áá 6
)
áá6 7
]
áá7 8
[
àà 	
Route
àà	 
(
àà 
$str
àà +
)
àà+ ,
]
àà, -
[
ââ 	
Route
ââ	 
(
ââ 
$str
ââ L
)
ââL M
]
ââM N
public
ää 
async
ää 
Task
ää 
<
ää  
RepositoryResponse
ää ,
<
ää, -
PaginationModel
ää- <
<
ää< =!
InfoModuleViewModel
ää= P
>
ääP Q
>
ääQ R
>
ääR S
Get
ääT W
(
ääW X
int
ãã 
?
ãã 
pageSize
ãã 
=
ãã 
$num
ãã 
,
ãã 
int
ãã  #
?
ãã# $
	pageIndex
ãã% .
=
ãã/ 0
$num
ãã1 2
,
ãã2 3
string
ãã4 :
orderBy
ãã; B
=
ããC D
$str
ããE I
,
åå 
OrderByDirection
åå 
	direction
åå (
=
åå) *
OrderByDirection
åå+ ;
.
åå; <
	Ascending
åå< E
)
ååE F
{
çç 	
var
éé 
data
éé 
=
éé 
await
éé !
InfoModuleViewModel
éé 0
.
éé0 1

Repository
éé1 ;
.
éé; <!
GetModelListByAsync
éé< O
(
ééO P
m
ééP Q
=>
ééR T
m
ééU V
.
ééV W
Specificulture
ééW e
==
ééf h
_lang
ééi n
,
één o
orderBy
éép w
,
ééw x
	directionééy Ç
,ééÇ É
pageSizeééÑ å
,ééå ç
	pageIndexééé ó
)ééó ò
.ééò ô
ConfigureAwaitééô ß
(ééß ®
falseéé® ≠
)éé≠ Æ
;ééÆ Ø
return
èè 
data
èè 
;
èè 
}
êê 	
[
ìì 	
HttpGet
ìì	 
]
ìì 
[
îî 	
Route
îî	 
(
îî 
$str
îî !
)
îî! "
]
îî" #
[
ïï 	
Route
ïï	 
(
ïï 
$str
ïï B
)
ïïB C
]
ïïC D
[
ññ 	
Route
ññ	 
(
ññ 
$str
ññ P
)
ññP Q
]
ññQ R
[
óó 	
Route
óó	 
(
óó 
$str
óó X
)
óóX Y
]
óóY Z
[
òò 	
Route
òò	 
(
òò 
$str
òò f
)
òòf g
]
òòg h
public
ôô 
Task
ôô 
<
ôô  
RepositoryResponse
ôô &
<
ôô& '
PaginationModel
ôô' 6
<
ôô6 7!
InfoModuleViewModel
ôô7 J
>
ôôJ K
>
ôôK L
>
ôôL M
Search
ôôN T
(
ôôT U
string
öö 
keyword
öö 
=
öö 
null
öö !
,
öö! "
string
õõ 
description
õõ 
=
õõ  
null
õõ! %
,
õõ% &
int
úú 
?
úú 
pageSize
úú 
=
úú 
null
úú  
,
úú  !
int
úú" %
?
úú% &
	pageIndex
úú' 0
=
úú1 2
null
úú3 7
,
úú7 8
string
úú9 ?
orderBy
úú@ G
=
úúH I
$str
úúJ N
,
ùù 
OrderByDirection
ùù 
	direction
ùù (
=
ùù) *
OrderByDirection
ùù+ ;
.
ùù; <
	Ascending
ùù< E
)
ùùE F
{
ûû 	

Expression
üü 
<
üü 
Func
üü 
<
üü 

SiocModule
üü &
,
üü& '
bool
üü( ,
>
üü, -
>
üü- .
	predicate
üü/ 8
=
üü9 :
model
üü; @
=>
üüA C
model
†† 
.
†† 
Specificulture
††  
==
††! #
_lang
††$ )
&&
°° 
(
°° 
string
°° 
.
°°  
IsNullOrWhiteSpace
°° )
(
°°) *
keyword
°°* 1
)
°°1 2
||
°°3 5
(
°°6 7
model
°°7 <
.
°°< =
Title
°°= B
.
°°B C
Contains
°°C K
(
°°K L
keyword
°°L S
)
°°S T
)
°°T U
)
°°U V
&&
¢¢ 
(
¢¢ 
string
¢¢ 
.
¢¢  
IsNullOrWhiteSpace
¢¢ )
(
¢¢) *
description
¢¢* 5
)
¢¢5 6
||
¢¢7 9
(
¢¢: ;
model
¢¢; @
.
¢¢@ A
Description
¢¢A L
.
¢¢L M
Contains
¢¢M U
(
¢¢U V
description
¢¢V a
)
¢¢a b
)
¢¢b c
)
¢¢c d
;
¢¢d e
return
££ !
InfoModuleViewModel
££ &
.
§§ 

Repository
§§ 
.
•• !
GetModelListByAsync
•• $
(
••$ %
	predicate
••% .
,
••. /
orderBy
••0 7
,
••7 8
	direction
••9 B
,
••B C
pageSize
••D L
,
••L M
	pageIndex
••N W
)
••W X
;
••X Y
}
¶¶ 	
[
≠≠ 	
HttpPost
≠≠	 
,
≠≠ 
HttpOptions
≠≠ 
]
≠≠ 
[
ÆÆ 	
Route
ÆÆ	 
(
ÆÆ 
$str
ÆÆ 
)
ÆÆ 
]
ÆÆ 
public
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ  
RepositoryResponse
ØØ ,
<
ØØ, - 
ApiModuleViewModel
ØØ- ?
>
ØØ? @
>
ØØ@ A
Post
ØØB F
(
ØØF G
[
ØØG H
FromBody
ØØH P
]
ØØP Q 
ApiModuleViewModel
ØØQ c
model
ØØd i
)
ØØi j
{
∞∞ 	
if
±± 
(
±± 
model
±± 
!=
±± 
null
±± 
)
±± 
{
≤≤ 
var
≥≥ 
result
≥≥ 
=
≥≥ 
await
≥≥ "
model
≥≥# (
.
≥≥( )
SaveModelAsync
≥≥) 7
(
≥≥7 8
true
≥≥8 <
)
≥≥< =
.
≥≥= >
ConfigureAwait
≥≥> L
(
≥≥L M
false
≥≥M R
)
≥≥R S
;
≥≥S T
return
¥¥ 
result
¥¥ 
;
¥¥ 
}
µµ 
return
∂∂ 
new
∂∂  
RepositoryResponse
∂∂ )
<
∂∂) * 
ApiModuleViewModel
∂∂* <
>
∂∂< =
(
∂∂= >
)
∂∂> ?
;
∂∂? @
}
∑∑ 	
[
∫∫ 	
HttpPost
∫∫	 
,
∫∫ 
HttpOptions
∫∫ 
]
∫∫ 
[
ªª 	
Route
ªª	 
(
ªª 
$str
ªª 
)
ªª 
]
ªª 
public
ºº 
async
ºº 
Task
ºº 
<
ºº  
RepositoryResponse
ºº ,
<
ºº, -

SiocModule
ºº- 7
>
ºº7 8
>
ºº8 9

SaveFields
ºº: D
(
ººD E
int
ººE H
id
ººI K
,
ººK L
[
ººM N
FromBody
ººN V
]
ººV W
List
ººW [
<
ºº[ \
EntityField
ºº\ g
>
ººg h
fields
ººi o
)
ººo p
{
ΩΩ 	
if
ææ 
(
ææ 
fields
ææ 
!=
ææ 
null
ææ 
)
ææ 
{
øø 
var
¿¿ 
result
¿¿ 
=
¿¿ 
new
¿¿   
RepositoryResponse
¿¿! 3
<
¿¿3 4

SiocModule
¿¿4 >
>
¿¿> ?
(
¿¿? @
)
¿¿@ A
{
¿¿B C
	IsSucceed
¿¿D M
=
¿¿N O
true
¿¿P T
}
¿¿U V
;
¿¿V W
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
property
¡¡ %
in
¡¡& (
fields
¡¡) /
)
¡¡/ 0
{
¬¬ 
if
√√ 
(
√√ 
result
√√ 
.
√√ 
	IsSucceed
√√ (
)
√√( )
{
ƒƒ 
result
≈≈ 
=
≈≈  
await
≈≈! &!
InfoModuleViewModel
≈≈' :
.
≈≈: ;

Repository
≈≈; E
.
≈≈E F
UpdateFieldsAsync
≈≈F W
(
≈≈W X
c
≈≈X Y
=>
≈≈Z \
c
≈≈] ^
.
≈≈^ _
Id
≈≈_ a
==
≈≈b d
id
≈≈e g
&&
≈≈h j
c
≈≈k l
.
≈≈l m
Specificulture
≈≈m {
==
≈≈| ~
_lang≈≈ Ñ
,≈≈Ñ Ö
fields≈≈Ü å
)≈≈å ç
.≈≈ç é
ConfigureAwait≈≈é ú
(≈≈ú ù
false≈≈ù ¢
)≈≈¢ £
;≈≈£ §
}
∆∆ 
else
«« 
{
»» 
break
…… 
;
…… 
}
   
}
ÃÃ 
return
ÕÕ 
result
ÕÕ 
;
ÕÕ 
}
ŒŒ 
return
œœ 
new
œœ  
RepositoryResponse
œœ )
<
œœ) *

SiocModule
œœ* 4
>
œœ4 5
(
œœ5 6
)
œœ6 7
;
œœ7 8
}
–– 	
[
”” 	
HttpPost
””	 
,
”” 
HttpOptions
”” 
]
”” 
[
‘‘ 	
Route
‘‘	 
(
‘‘ 
$str
‘‘ 
)
‘‘ 
]
‘‘ 
[
’’ 	
Route
’’	 
(
’’ 
$str
’’ 
)
’’ 
]
’’ 
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷  
RepositoryResponse
÷÷ ,
<
÷÷, -
PaginationModel
÷÷- <
<
÷÷< =!
InfoModuleViewModel
÷÷= P
>
÷÷P Q
>
÷÷Q R
>
÷÷R S
GetList
÷÷T [
(
÷÷[ \
[
÷÷\ ]
FromBody
÷÷] e
]
÷÷e f
RequestPaging
÷÷g t
request
÷÷u |
,
÷÷| }
int÷÷~ Å
?÷÷Å Ç
level÷÷É à
=÷÷â ä
$num÷÷ã å
)÷÷å ç
{
◊◊ 	

Expression
ŸŸ 
<
ŸŸ 
Func
ŸŸ 
<
ŸŸ 

SiocModule
ŸŸ &
,
ŸŸ& '
bool
ŸŸ( ,
>
ŸŸ, -
>
ŸŸ- .
	predicate
ŸŸ/ 8
=
ŸŸ9 :
model
ŸŸ; @
=>
ŸŸA C
model
⁄⁄ 
.
⁄⁄ 
Specificulture
⁄⁄ $
==
⁄⁄% '
_lang
⁄⁄( -
&&
€€ 
(
€€ 
string
€€ 
.
€€  
IsNullOrWhiteSpace
€€ -
(
€€- .
request
€€. 5
.
€€5 6
Keyword
€€6 =
)
€€= >
||
‹‹ 
(
‹‹ 
model
‹‹ 
.
‹‹ 
Title
‹‹ #
.
‹‹# $
Contains
‹‹$ ,
(
‹‹, -
request
‹‹- 4
.
‹‹4 5
Keyword
‹‹5 <
)
‹‹< =
||
›› 
model
›› 
.
›› 
Description
›› (
.
››( )
Contains
››) 1
(
››1 2
request
››2 9
.
››9 :
Keyword
››: A
)
››A B
)
››B C
)
››C D
&&
ﬁﬁ 
(
ﬁﬁ 
!
ﬁﬁ 
request
ﬁﬁ 
.
ﬁﬁ 
FromDate
ﬁﬁ %
.
ﬁﬁ% &
HasValue
ﬁﬁ& .
||
ﬂﬂ 
(
ﬂﬂ 
model
ﬂﬂ 
.
ﬂﬂ 
LastModified
ﬂﬂ *
>=
ﬂﬂ+ -
request
ﬂﬂ. 5
.
ﬂﬂ5 6
FromDate
ﬂﬂ6 >
.
ﬂﬂ> ?
Value
ﬂﬂ? D
.
ﬂﬂD E
ToUniversalTime
ﬂﬂE T
(
ﬂﬂT U
)
ﬂﬂU V
)
ﬂﬂV W
)
‡‡ 
&&
·· 
(
·· 
!
·· 
request
·· 
.
·· 
ToDate
·· #
.
··# $
HasValue
··$ ,
||
‚‚ 
(
‚‚ 
model
‚‚ 
.
‚‚ 
LastModified
‚‚ *
<=
‚‚+ -
request
‚‚. 5
.
‚‚5 6
ToDate
‚‚6 <
.
‚‚< =
Value
‚‚= B
.
‚‚B C
ToUniversalTime
‚‚C R
(
‚‚R S
)
‚‚S T
)
‚‚T U
)
„„ 
;
‰‰ 
var
ÊÊ 
data
ÊÊ 
=
ÊÊ 
await
ÊÊ !
InfoModuleViewModel
ÊÊ 0
.
ÊÊ0 1

Repository
ÊÊ1 ;
.
ÊÊ; <!
GetModelListByAsync
ÊÊ< O
(
ÊÊO P
	predicate
ÊÊP Y
,
ÊÊY Z
request
ÊÊ[ b
.
ÊÊb c
OrderBy
ÊÊc j
,
ÊÊj k
request
ÊÊl s
.
ÊÊs t
	Direction
ÊÊt }
,
ÊÊ} ~
requestÊÊ Ü
.ÊÊÜ á
PageSizeÊÊá è
,ÊÊè ê
requestÊÊë ò
.ÊÊò ô
	PageIndexÊÊô ¢
)ÊÊ¢ £
.ÊÊ£ §
ConfigureAwaitÊÊ§ ≤
(ÊÊ≤ ≥
falseÊÊ≥ ∏
)ÊÊ∏ π
;ÊÊπ ∫
return
ÁÁ 
data
ÁÁ 
;
ÁÁ 
}
ËË 	
}
ÎÎ 
}ÏÏ ëÛ
VG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiModuleDataController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str &
)& '
]' (
public 

class #
ApiModuleDataController (
:) *
BaseApiController 
{ 
public #
ApiModuleDataController &
(& '
)' (
{ 	
} 	
[ 	
HttpPost	 
, 
HttpOptions 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
RepositoryResponse ,
<, -
SiocModuleData- ;
>; <
>< =

SaveFields> H
(H I
stringI O
idP R
,R S
[T U
FromBodyU ]
]] ^
List^ b
<b c
EntityFieldc n
>n o
fieldsp v
)v w
{ 	
var   
result   
=   
new   
RepositoryResponse   /
<  / 0
SiocModuleData  0 >
>  > ?
(  ? @
)  @ A
;  A B
if!! 
(!! 
fields!! 
!=!! 
null!! 
)!! 
{"" 
foreach## 
(## 
var## 
property## %
in##& (
fields##) /
)##/ 0
{$$ 
result%% 
=%% 
await%% "#
InfoModuleDataViewModel%%# :
.%%: ;

Repository%%; E
.%%E F
UpdateFieldsAsync%%F W
(%%W X
c%%X Y
=>%%Z \
c%%] ^
.%%^ _
Id%%_ a
==%%b d
id%%e g
,%%g h
fields%%i o
)%%o p
.%%p q
ConfigureAwait%%q 
(	%% Ä
false
%%Ä Ö
)
%%Ö Ü
;
%%Ü á
}(( 
return)) 
result)) 
;)) 
}** 
return++ 
result++ 
;++ 
},, 	
[// 	
HttpGet//	 
]// 
[00 	
Route00	 
(00 
$str00 3
)003 4
]004 5
[11 	
Route11	 
(11 
$str11 .
)11. /
]11/ 0
public22 
async22 
Task22 
<22 
RepositoryResponse22 ,
<22, -"
ApiModuleDataViewModel22- C
>22C D
>22D E
DetailsAsync22F R
(22R S
string22S Y
viewType22Z b
,22b c
int22d g
moduleId22h p
,22p q
string22r x
id22y {
=22| }
null	22~ Ç
)
22Ç É
{33 	
if55 
(55 
string55 
.55 
IsNullOrEmpty55 $
(55$ %
id55% '
)55' (
)55( )
{66 
var77 
	getModule77 
=77 
await77  %
InfoModuleViewModel77& 9
.779 :

Repository77: D
.77D E
GetSingleModelAsync77E X
(77X Y
m88 	
=>88
 
m88 
.88 
Id88 
==88 
moduleId88 
&&88  
m88! "
.88" #
Specificulture88# 1
==882 4
_lang885 :
)88: ;
.88; <
ConfigureAwait88< J
(88J K
false88K P
)88P Q
;88Q R
if99 
(99 
	getModule99 
.99 
	IsSucceed99 '
)99' (
{:: 
var;; 
model;; 
=;; 
new;;  #
SiocModuleData;;$ 2
(;;2 3
)<< 
{== 
ModuleId>>  
=>>! "
moduleId>># +
,>>+ ,
Specificulture?? &
=??' (
_lang??) .
,??. /
Fields@@ 
=@@  
	getModule@@! *
.@@* +
Data@@+ /
.@@/ 0
Fields@@0 6
}AA 
;AA 
returnBB 
newBB 
RepositoryResponseBB 1
<BB1 2"
ApiModuleDataViewModelBB2 H
>BBH I
(BBI J
)BBJ K
{BBL M
	IsSucceedBBN W
=BBX Y
trueBBZ ^
,BB^ _
DataBB` d
=BBe f
awaitBBg l#
ApiModuleDataViewModel	BBm É
.
BBÉ Ñ
	InitAsync
BBÑ ç
(
BBç é
model
BBé ì
)
BBì î
}
BBï ñ
;
BBñ ó
}CC 
elseDD 
{EE 
returnFF 
newFF 
RepositoryResponseFF 1
<FF1 2"
ApiModuleDataViewModelFF2 H
>FFH I
(FFI J
)FFJ K
{FFL M
	IsSucceedFFN W
=FFX Y
falseFFZ _
}FF` a
;FFa b
}GG 
}HH 
elseII 
{JJ 
varKK 
beKK 
=KK 
awaitKK "
ApiModuleDataViewModelKK 5
.KK5 6

RepositoryKK6 @
.KK@ A
GetSingleModelAsyncKKA T
(KKT U
modelKKU Z
=>KK[ ]
modelKK^ c
.KKc d
IdKKd f
==KKg i
idKKj l
&&KKm o
modelKKp u
.KKu v
Specificulture	KKv Ñ
==
KKÖ á
_lang
KKà ç
)
KKç é
;
KKé è
returnLL 
beLL 
;LL 
}MM 
}NN 	
[QQ 	
HttpGetQQ	 
]QQ 
[RR 	
RouteRR	 
(RR 
$strRR 
)RR 
]RR 
publicSS 
TaskSS 
<SS 
RepositoryResponseSS &
<SS& '#
InfoModuleDataViewModelSS' >
>SS> ?
>SS? @
EditSSA E
(SSE F
stringSSF L
idSSM O
)SSO P
{TT 	
returnUU #
InfoModuleDataViewModelUU *
.UU* +

RepositoryUU+ 5
.UU5 6
GetSingleModelAsyncUU6 I
(UUI J
modelUUJ O
=>UUP R
modelUUS X
.UUX Y
IdUUY [
==UU\ ^
idUU_ a
&&UUb d
modelUUe j
.UUj k
SpecificultureUUk y
==UUz |
_lang	UU} Ç
)
UUÇ É
;
UUÉ Ñ
}VV 	
[YY 	
HttpGetYY	 
]YY 
[ZZ 	
RouteZZ	 
(ZZ 
$strZZ "
)ZZ" #
]ZZ# $
public[[ 
async[[ 
Task[[ 
<[[ 
RepositoryResponse[[ ,
<[[, -!
BEModuleDataViewModel[[- B
>[[B C
>[[C D
CreateAsync[[E P
([[P Q
int[[Q T
moduleId[[U ]
)[[] ^
{\\ 	
var]] 
	getModule]] 
=]] 
await]] !
InfoModuleViewModel]]" 5
.]]5 6

Repository]]6 @
.]]@ A
GetSingleModelAsync]]A T
(]]T U
m^^ 
=>^^ 
m^^ 
.^^ 
Id^^ 
==^^ 
moduleId^^ %
&&^^& (
m^^) *
.^^* +
Specificulture^^+ 9
==^^: <
_lang^^= B
)^^B C
.^^C D
ConfigureAwait^^D R
(^^R S
false^^S X
)^^X Y
;^^Y Z
if__ 
(__ 
	getModule__ 
.__ 
	IsSucceed__ #
)__# $
{`` 
varaa 

ModuleDataaa 
=aa  
newaa! $!
BEModuleDataViewModelaa% :
(aa: ;
newbb 
SiocModuleDatabb &
(bb& '
)bb' (
{cc 
ModuleIddd  
=dd! "
moduleIddd# +
,dd+ ,
Specificultureee &
=ee' (
_langee) .
,ee. /
Fieldsff 
=ff  
	getModuleff! *
.ff* +
Dataff+ /
.ff/ 0
Fieldsff0 6
}gg 
)gg 
;gg 
returnhh 
newhh 
RepositoryResponsehh -
<hh- .!
BEModuleDataViewModelhh. C
>hhC D
(hhD E
)hhE F
{ii 
	IsSucceedjj 
=jj 
truejj  $
,jj$ %
Datakk 
=kk 

ModuleDatakk %
}ll 
;ll 
}mm 
elsenn 
{oo 
returnpp 
newpp 
RepositoryResponsepp -
<pp- .!
BEModuleDataViewModelpp. C
>ppC D
(ppD E
)ppE F
{qq 
	IsSucceedrr 
=rr 
falserr  %
,rr% &
Datass 
=ss 
nullss 
,ss  
	Exceptiontt 
=tt 
	getModulett  )
.tt) *
	Exceptiontt* 3
,tt3 4
Errorsuu 
=uu 
	getModuleuu &
.uu& '
Errorsuu' -
}vv 
;vv 
}ww 
}xx 	
[{{ 	
HttpGet{{	 
]{{ 
[|| 	
Route||	 
(|| 
$str|| "
)||" #
]||# $
public}} 
async}} 
Task}} 
<}} 
RepositoryResponse}} ,
<}}, -"
ApiModuleDataViewModel}}- C
>}}C D
>}}D E
	InitAsync}}F O
(}}O P
string}}P V

moduleName}}W a
)}}a b
{~~ 	
var 
	getModule 
= 
await !
InfoModuleViewModel" 5
.5 6

Repository6 @
.@ A
GetSingleModelAsyncA T
(T U
m
ÄÄ 
=>
ÄÄ 
m
ÄÄ 
.
ÄÄ 
Name
ÄÄ 
==
ÄÄ 

moduleName
ÄÄ )
&&
ÄÄ* ,
m
ÄÄ- .
.
ÄÄ. /
Specificulture
ÄÄ/ =
==
ÄÄ> @
_lang
ÄÄA F
)
ÄÄF G
.
ÄÄG H
ConfigureAwait
ÄÄH V
(
ÄÄV W
false
ÄÄW \
)
ÄÄ\ ]
;
ÄÄ] ^
if
ÅÅ 
(
ÅÅ 
	getModule
ÅÅ 
.
ÅÅ 
	IsSucceed
ÅÅ #
)
ÅÅ# $
{
ÇÇ 
var
ÉÉ 

ModuleData
ÉÉ 
=
ÉÉ  
new
ÉÉ! $$
ApiModuleDataViewModel
ÉÉ% ;
(
ÉÉ; <
new
ÑÑ 
SiocModuleData
ÑÑ &
(
ÑÑ& '
)
ÑÑ' (
{
ÖÖ 
ModuleId
ÜÜ  
=
ÜÜ! "
	getModule
ÜÜ# ,
.
ÜÜ, -
Data
ÜÜ- 1
.
ÜÜ1 2
Id
ÜÜ2 4
,
ÜÜ4 5
Specificulture
áá &
=
áá' (
_lang
áá) .
,
áá. /
Fields
àà 
=
àà  
	getModule
àà! *
.
àà* +
Data
àà+ /
.
àà/ 0
Fields
àà0 6
}
ââ 
)
ââ 
;
ââ 
return
ää 
new
ää  
RepositoryResponse
ää -
<
ää- .$
ApiModuleDataViewModel
ää. D
>
ääD E
(
ääE F
)
ääF G
{
ãã 
	IsSucceed
åå 
=
åå 
true
åå  $
,
åå$ %
Data
çç 
=
çç 

ModuleData
çç %
}
éé 
;
éé 
}
èè 
else
êê 
{
ëë 
return
íí 
new
íí  
RepositoryResponse
íí -
<
íí- .$
ApiModuleDataViewModel
íí. D
>
ííD E
(
ííE F
)
ííF G
{
ìì 
	IsSucceed
îî 
=
îî 
false
îî  %
,
îî% &
Data
ïï 
=
ïï 
null
ïï 
,
ïï  
	Exception
ññ 
=
ññ 
	getModule
ññ  )
.
ññ) *
	Exception
ññ* 3
,
ññ3 4
Errors
óó 
=
óó 
	getModule
óó &
.
óó& '
Errors
óó' -
}
òò 
;
òò 
}
ôô 
}
öö 	
[
ùù 	
HttpGet
ùù	 
]
ùù 
[
ûû 	
Route
ûû	 
(
ûû 
$str
ûû  
)
ûû  !
]
ûû! "
public
üü 
async
üü 
Task
üü 
<
üü  
RepositoryResponse
üü ,
<
üü, -$
ApiModuleDataViewModel
üü- C
>
üüC D
>
üüD E
InitByIdAsync
üüF S
(
üüS T
int
üüT W
moduleId
üüX `
)
üü` a
{
†† 	
var
°° 
	getModule
°° 
=
°° 
await
°° !!
InfoModuleViewModel
°°" 5
.
°°5 6

Repository
°°6 @
.
°°@ A!
GetSingleModelAsync
°°A T
(
°°T U
m
¢¢ 
=>
¢¢ 
m
¢¢ 
.
¢¢ 
Id
¢¢ 
==
¢¢ 
moduleId
¢¢ %
&&
¢¢& (
m
¢¢) *
.
¢¢* +
Specificulture
¢¢+ 9
==
¢¢: <
_lang
¢¢= B
)
¢¢B C
.
¢¢C D
ConfigureAwait
¢¢D R
(
¢¢R S
false
¢¢S X
)
¢¢X Y
;
¢¢Y Z
if
££ 
(
££ 
	getModule
££ 
.
££ 
	IsSucceed
££ #
)
££# $
{
§§ 
var
•• 

ModuleData
•• 
=
••  
new
••! $$
ApiModuleDataViewModel
••% ;
(
••; <
new
¶¶ 
SiocModuleData
¶¶ &
(
¶¶& '
)
¶¶' (
{
ßß 
ModuleId
®®  
=
®®! "
	getModule
®®# ,
.
®®, -
Data
®®- 1
.
®®1 2
Id
®®2 4
,
®®4 5
Specificulture
©© &
=
©©' (
_lang
©©) .
,
©©. /
Fields
™™ 
=
™™  
	getModule
™™! *
.
™™* +
Data
™™+ /
.
™™/ 0
Fields
™™0 6
}
´´ 
)
´´ 
;
´´ 
return
¨¨ 
new
¨¨  
RepositoryResponse
¨¨ -
<
¨¨- .$
ApiModuleDataViewModel
¨¨. D
>
¨¨D E
(
¨¨E F
)
¨¨F G
{
≠≠ 
	IsSucceed
ÆÆ 
=
ÆÆ 
true
ÆÆ  $
,
ÆÆ$ %
Data
ØØ 
=
ØØ 

ModuleData
ØØ %
}
∞∞ 
;
∞∞ 
}
±± 
else
≤≤ 
{
≥≥ 
return
¥¥ 
new
¥¥  
RepositoryResponse
¥¥ -
<
¥¥- .$
ApiModuleDataViewModel
¥¥. D
>
¥¥D E
(
¥¥E F
)
¥¥F G
{
µµ 
	IsSucceed
∂∂ 
=
∂∂ 
false
∂∂  %
,
∂∂% &
Data
∑∑ 
=
∑∑ 
null
∑∑ 
,
∑∑  
	Exception
∏∏ 
=
∏∏ 
	getModule
∏∏  )
.
∏∏) *
	Exception
∏∏* 3
,
∏∏3 4
Errors
ππ 
=
ππ 
	getModule
ππ &
.
ππ& '
Errors
ππ' -
}
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
[
øø 	
HttpGet
øø	 
]
øø 
[
¿¿ 	
Route
¿¿	 
(
¿¿ 
$str
¿¿ 
)
¿¿ 
]
¿¿ 
public
¡¡ 
Task
¡¡ 
<
¡¡  
RepositoryResponse
¡¡ &
<
¡¡& '
SiocModuleData
¡¡' 5
>
¡¡5 6
>
¡¡6 7
Delete
¡¡8 >
(
¡¡> ?
string
¡¡? E
id
¡¡F H
)
¡¡H I
{
¬¬ 	
return
√√ %
InfoModuleDataViewModel
√√ *
.
√√* +

Repository
√√+ 5
.
√√5 6
RemoveModelAsync
√√6 F
(
√√F G
model
√√G L
=>
√√M O
model
√√P U
.
√√U V
Id
√√V X
==
√√Y [
id
√√\ ^
&&
√√_ a
model
√√b g
.
√√g h
Specificulture
√√h v
==
√√w y
_lang
√√z 
)√√ Ä
;√√Ä Å
}
ƒƒ 	
[
«« 	
HttpGet
««	 
]
«« 
[
»» 	
Route
»»	 
(
»» 
$str
»» 
)
»» 
]
»» 
[
…… 	
Route
……	 
(
…… 
$str
…… <
)
……< =
]
……= >
[
   	
Route
  	 
(
   
$str
   1
)
  1 2
]
  2 3
[
ÀÀ 	
Route
ÀÀ	 
(
ÀÀ 
$str
ÀÀ R
)
ÀÀR S
]
ÀÀS T
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ  
RepositoryResponse
ÃÃ ,
<
ÃÃ, -
PaginationModel
ÃÃ- <
<
ÃÃ< =%
InfoModuleDataViewModel
ÃÃ= T
>
ÃÃT U
>
ÃÃU V
>
ÃÃV W
Get
ÃÃX [
(
ÃÃ[ \
int
ÕÕ 
moduleId
ÕÕ 
,
ÕÕ 
int
ŒŒ 
?
ŒŒ 
pageSize
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
,
ŒŒ 
int
ŒŒ  #
?
ŒŒ# $
	pageIndex
ŒŒ% .
=
ŒŒ/ 0
$num
ŒŒ1 2
,
ŒŒ2 3
string
ŒŒ4 :
orderBy
ŒŒ; B
=
ŒŒC D
$str
ŒŒE O
,
œœ 
OrderByDirection
œœ 
	direction
œœ (
=
œœ) *
OrderByDirection
œœ+ ;
.
œœ; <
	Ascending
œœ< E
)
œœE F
{
–– 	
var
—— 
result
—— 
=
—— 
await
—— %
InfoModuleDataViewModel
—— 6
.
——6 7

Repository
——7 A
.
——A B!
GetModelListByAsync
——B U
(
——U V
m
““ 
=>
““ 
m
““ 
.
““ 
ModuleId
““ 
==
““  "
moduleId
““# +
&&
““, .
m
““/ 0
.
““0 1
Specificulture
““1 ?
==
““@ B
_lang
““C H
,
““H I
orderBy
““J Q
,
““Q R
	direction
““S \
,
““\ ]
pageSize
““^ f
,
““f g
	pageIndex
““h q
)
““q r
.
““r s
ConfigureAwait““s Å
(““Å Ç
false““Ç á
)““á à
;““à â
result
”” 
.
”” 
Data
”” 
.
”” 
	JsonItems
”” !
=
””" #
new
””$ '
List
””( ,
<
””, -

Newtonsoft
””- 7
.
””7 8
Json
””8 <
.
””< =
Linq
””= A
.
””A B
JObject
””B I
>
””I J
(
””J K
)
””K L
;
””L M
result
‘‘ 
.
‘‘ 
Data
‘‘ 
.
‘‘ 
Items
‘‘ 
.
‘‘ 
ForEach
‘‘ %
(
‘‘% &
i
‘‘& '
=>
‘‘( *
result
‘‘+ 1
.
‘‘1 2
Data
‘‘2 6
.
‘‘6 7
	JsonItems
‘‘7 @
.
‘‘@ A
Add
‘‘A D
(
‘‘D E
i
‘‘E F
.
‘‘F G
	ParseJson
‘‘G P
(
‘‘P Q
)
‘‘Q R
)
‘‘R S
)
‘‘S T
;
‘‘T U
return
’’ 
result
’’ 
;
’’ 
}
÷÷ 	
[
ŸŸ 	
HttpGet
ŸŸ	 
]
ŸŸ 
[
⁄⁄ 	
Route
⁄⁄	 
(
⁄⁄ 
$str
⁄⁄ 4
)
⁄⁄4 5
]
⁄⁄5 6
[
€€ 	
Route
€€	 
(
€€ 
$str
€€ U
)
€€U V
]
€€V W
[
‹‹ 	
Route
‹‹	 
(
‹‹ 
$str
‹‹ J
)
‹‹J K
]
‹‹K L
[
›› 	
Route
››	 
(
›› 
$str
›› k
)
››k l
]
››l m
public
ﬁﬁ 
async
ﬁﬁ 
Task
ﬁﬁ 
<
ﬁﬁ  
RepositoryResponse
ﬁﬁ ,
<
ﬁﬁ, -
PaginationModel
ﬁﬁ- <
<
ﬁﬁ< =%
InfoModuleDataViewModel
ﬁﬁ= T
>
ﬁﬁT U
>
ﬁﬁU V
>
ﬁﬁV W
GetByArticle
ﬁﬁX d
(
ﬁﬁd e
string
ﬂﬂ 
	articleId
ﬂﬂ 
,
ﬂﬂ 
int
ﬂﬂ !
moduleId
ﬂﬂ" *
,
ﬂﬂ* +
int
‡‡ 
?
‡‡ 
pageSize
‡‡ 
=
‡‡ 
$num
‡‡ 
,
‡‡ 
int
‡‡  #
?
‡‡# $
	pageIndex
‡‡% .
=
‡‡/ 0
$num
‡‡1 2
,
‡‡2 3
string
‡‡4 :
orderBy
‡‡; B
=
‡‡C D
$str
‡‡E O
,
·· 
OrderByDirection
·· 
	direction
·· (
=
··) *
OrderByDirection
··+ ;
.
··; <
	Ascending
··< E
)
··E F
{
‚‚ 	
var
„„ 
result
„„ 
=
„„ 
await
„„ %
InfoModuleDataViewModel
„„ 6
.
„„6 7

Repository
„„7 A
.
„„A B!
GetModelListByAsync
„„B U
(
„„U V
m
‰‰ 
=>
‰‰ 
m
‰‰ 
.
‰‰ 
ModuleId
‰‰ 
==
‰‰  "
moduleId
‰‰# +
&&
‰‰, .
m
‰‰/ 0
.
‰‰0 1
	ArticleId
‰‰1 :
==
‰‰; =
	articleId
‰‰> G
&&
‰‰H J
m
‰‰K L
.
‰‰L M
Specificulture
‰‰M [
==
‰‰\ ^
_lang
‰‰_ d
,
‰‰d e
orderBy
ÂÂ 
,
ÂÂ 
	direction
ÂÂ "
,
ÂÂ" #
pageSize
ÂÂ$ ,
,
ÂÂ, -
	pageIndex
ÂÂ. 7
)
ÂÂ7 8
.
ÂÂ8 9
ConfigureAwait
ÂÂ9 G
(
ÂÂG H
false
ÂÂH M
)
ÂÂM N
;
ÂÂN O
result
ÊÊ 
.
ÊÊ 
Data
ÊÊ 
.
ÊÊ 
	JsonItems
ÊÊ !
=
ÊÊ" #
new
ÊÊ$ '
List
ÊÊ( ,
<
ÊÊ, -

Newtonsoft
ÊÊ- 7
.
ÊÊ7 8
Json
ÊÊ8 <
.
ÊÊ< =
Linq
ÊÊ= A
.
ÊÊA B
JObject
ÊÊB I
>
ÊÊI J
(
ÊÊJ K
)
ÊÊK L
;
ÊÊL M
result
ÁÁ 
.
ÁÁ 
Data
ÁÁ 
.
ÁÁ 
Items
ÁÁ 
.
ÁÁ 
ForEach
ÁÁ %
(
ÁÁ% &
i
ÁÁ& '
=>
ÁÁ( *
result
ÁÁ+ 1
.
ÁÁ1 2
Data
ÁÁ2 6
.
ÁÁ6 7
	JsonItems
ÁÁ7 @
.
ÁÁ@ A
Add
ÁÁA D
(
ÁÁD E
i
ÁÁE F
.
ÁÁF G
	ParseJson
ÁÁG P
(
ÁÁP Q
)
ÁÁQ R
)
ÁÁR S
)
ÁÁS T
;
ÁÁT U
return
ËË 
result
ËË 
;
ËË 
}
ÈÈ 	
[
ÏÏ 	
HttpGet
ÏÏ	 
]
ÏÏ 
[
ÌÌ 	
Route
ÌÌ	 
(
ÌÌ 
$str
ÌÌ %
)
ÌÌ% &
]
ÌÌ& '
[
ÓÓ 	
Route
ÓÓ	 
(
ÓÓ 
$str
ÓÓ F
)
ÓÓF G
]
ÓÓG H
[
ÔÔ 	
Route
ÔÔ	 
(
ÔÔ 
$str
ÔÔ \
)
ÔÔ\ ]
]
ÔÔ] ^
public
 
async
 
Task
 
<
  
RepositoryResponse
 ,
<
, -
PaginationModel
- <
<
< =%
InfoModuleDataViewModel
= T
>
T U
>
U V
>
V W
Search
X ^
(
^ _
int
_ b
moduleId
c k
,
k l
string
ÒÒ 
keyword
ÒÒ 
=
ÒÒ 
null
ÒÒ !
,
ÒÒ! "
int
ÚÚ 
?
ÚÚ 
pageSize
ÚÚ 
=
ÚÚ 
null
ÚÚ  
,
ÚÚ  !
int
ÚÚ" %
?
ÚÚ% &
	pageIndex
ÚÚ' 0
=
ÚÚ1 2
null
ÚÚ3 7
,
ÚÚ7 8
string
ÚÚ9 ?
orderBy
ÚÚ@ G
=
ÚÚH I
$str
ÚÚJ N
,
ÚÚN O
OrderByDirection
ÛÛ 
	direction
ÛÛ &
=
ÛÛ' (
OrderByDirection
ÛÛ) 9
.
ÛÛ9 :
	Ascending
ÛÛ: C
)
ÛÛC D
{
ÙÙ 	

Expression
ıı 
<
ıı 
Func
ıı 
<
ıı 
SiocModuleData
ıı *
,
ıı* +
bool
ıı, 0
>
ıı0 1
>
ıı1 2
	predicate
ıı3 <
=
ıı= >
model
ıı? D
=>
ııE G
model
ˆˆ 
.
ˆˆ 
ModuleId
ˆˆ 
==
ˆˆ !
moduleId
ˆˆ" *
&&
˜˜ 
model
˜˜ 
.
˜˜ 
Specificulture
˜˜ '
==
˜˜( *
_lang
˜˜+ 0
&&
¯¯ 
(
¯¯ 
string
¯¯ 
.
¯¯  
IsNullOrWhiteSpace
¯¯ -
(
¯¯- .
keyword
¯¯. 5
)
¯¯5 6
||
¯¯7 9
(
¯¯: ;
model
¯¯; @
.
¯¯@ A
Fields
¯¯A G
.
¯¯G H
Contains
¯¯H P
(
¯¯P Q
keyword
¯¯Q X
)
¯¯X Y
)
¯¯Y Z
)
¯¯Z [
;
¯¯[ \
var
˙˙ 
result
˙˙ 
=
˙˙ 
await
˙˙ %
InfoModuleDataViewModel
˙˙ 6
.
˙˙6 7

Repository
˙˙7 A
.
˙˙A B!
GetModelListByAsync
˙˙B U
(
˙˙U V
	predicate
˙˙V _
,
˙˙_ `
orderBy
˙˙a h
,
˙˙h i
	direction
˙˙j s
,
˙˙s t
pageSize
˙˙u }
,
˙˙} ~
	pageIndex˙˙ à
)˙˙à â
.˙˙â ä
ConfigureAwait˙˙ä ò
(˙˙ò ô
false˙˙ô û
)˙˙û ü
;˙˙ü †
result
˚˚ 
.
˚˚ 
Data
˚˚ 
.
˚˚ 
	JsonItems
˚˚ !
=
˚˚" #
new
˚˚$ '
List
˚˚( ,
<
˚˚, -

Newtonsoft
˚˚- 7
.
˚˚7 8
Json
˚˚8 <
.
˚˚< =
Linq
˚˚= A
.
˚˚A B
JObject
˚˚B I
>
˚˚I J
(
˚˚J K
)
˚˚K L
;
˚˚L M
result
¸¸ 
.
¸¸ 
Data
¸¸ 
.
¸¸ 
Items
¸¸ 
.
¸¸ 
ForEach
¸¸ %
(
¸¸% &
i
¸¸& '
=>
¸¸( *
result
¸¸+ 1
.
¸¸1 2
Data
¸¸2 6
.
¸¸6 7
	JsonItems
¸¸7 @
.
¸¸@ A
Add
¸¸A D
(
¸¸D E
i
¸¸E F
.
¸¸F G
	ParseJson
¸¸G P
(
¸¸P Q
)
¸¸Q R
)
¸¸R S
)
¸¸S T
;
¸¸T U
return
˝˝ 
result
˝˝ 
;
˝˝ 
}
˛˛ 	
[
ÑÑ 	
HttpPost
ÑÑ	 
,
ÑÑ 
HttpOptions
ÑÑ 
]
ÑÑ 
[
ÖÖ 	
Route
ÖÖ	 
(
ÖÖ 
$str
ÖÖ 
)
ÖÖ 
]
ÖÖ 
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ  
RepositoryResponse
ÜÜ ,
<
ÜÜ, -$
ApiModuleDataViewModel
ÜÜ- C
>
ÜÜC D
>
ÜÜD E
Post
ÜÜF J
(
ÜÜJ K
[
ÜÜK L
FromBody
ÜÜL T
]
ÜÜT U$
ApiModuleDataViewModel
ÜÜU k
model
ÜÜl q
)
ÜÜq r
{
áá 	
if
àà 
(
àà 
model
àà 
!=
àà 
null
àà 
)
àà 
{
ââ 
var
ää 
result
ää 
=
ää 
await
ää "
model
ää# (
.
ää( )
SaveModelAsync
ää) 7
(
ää7 8
true
ää8 <
)
ää< =
.
ää= >
ConfigureAwait
ää> L
(
ääL M
false
ääM R
)
ääR S
;
ääS T
return
ãã 
result
ãã 
;
ãã 
}
åå 
return
çç 
new
çç  
RepositoryResponse
çç )
<
çç) *$
ApiModuleDataViewModel
çç* @
>
çç@ A
(
ççA B
)
ççB C
;
ççC D
}
éé 	
[
íí 	
HttpPost
íí	 
,
íí 
HttpOptions
íí 
]
íí 
[
ìì 	
Route
ìì	 
(
ìì 
$str
ìì 
)
ìì 
]
ìì 
[
îî 	
Route
îî	 
(
îî 
$str
îî 
)
îî 
]
îî 
public
ïï 
async
ïï 
Task
ïï 
<
ïï  
RepositoryResponse
ïï ,
<
ïï, -
PaginationModel
ïï- <
<
ïï< =%
InfoModuleDataViewModel
ïï= T
>
ïïT U
>
ïïU V
>
ïïV W
GetList
ïïX _
(
ïï_ `
[
ññ 
FromBody
ññ 
]
ññ 
RequestPaging
ññ $
request
ññ% ,
,
ññ, -
int
ññ. 1
?
ññ1 2
level
ññ3 8
=
ññ9 :
$num
ññ; <
)
ññ< =
{
óó 	
int
òò 
.
òò 
TryParse
òò 
(
òò 
request
òò  
.
òò  !
Key
òò! $
,
òò$ %
out
òò& )
int
òò* -
moduleId
òò. 6
)
òò6 7
;
òò7 8

Expression
ôô 
<
ôô 
Func
ôô 
<
ôô 
SiocModuleData
ôô *
,
ôô* +
bool
ôô, 0
>
ôô0 1
>
ôô1 2
	predicate
ôô3 <
=
ôô= >
model
ôô? D
=>
ôôE G
model
öö 
.
öö 
Specificulture
öö $
==
öö% '
_lang
öö( -
&&
õõ 
model
õõ 
.
õõ 
ModuleId
õõ !
==
õõ" $
moduleId
õõ% -
&&
üü 
(
üü 
!
üü 
request
üü 
.
üü 
FromDate
üü %
.
üü% &
HasValue
üü& .
||
†† 
(
†† 
model
†† 
.
†† 
CreatedDateTime
†† -
>=
††. 0
request
††1 8
.
††8 9
FromDate
††9 A
.
††A B
Value
††B G
.
††G H
ToUniversalTime
††H W
(
††W X
)
††X Y
)
††Y Z
)
°° 
&&
¢¢ 
(
¢¢ 
!
¢¢ 
request
¢¢ 
.
¢¢ 
ToDate
¢¢ #
.
¢¢# $
HasValue
¢¢$ ,
||
££ 
(
££ 
model
££ 
.
££ 
CreatedDateTime
££ -
<=
££. 0
request
££1 8
.
££8 9
ToDate
££9 ?
.
££? @
Value
££@ E
.
££E F
ToUniversalTime
££F U
(
££U V
)
££V W
)
££W X
)
§§ 
;
•• 
var
ßß 
data
ßß 
=
ßß 
await
ßß %
InfoModuleDataViewModel
ßß 4
.
ßß4 5

Repository
ßß5 ?
.
ßß? @!
GetModelListByAsync
ßß@ S
(
ßßS T
	predicate
ßßT ]
,
ßß] ^
request
ßß_ f
.
ßßf g
OrderBy
ßßg n
,
ßßn o
request
ßßp w
.
ßßw x
	Directionßßx Å
,ßßÅ Ç
requestßßÉ ä
.ßßä ã
PageSizeßßã ì
,ßßì î
requestßßï ú
.ßßú ù
	PageIndexßßù ¶
)ßß¶ ß
.ßßß ®
ConfigureAwaitßß® ∂
(ßß∂ ∑
falseßß∑ º
)ßßº Ω
;ßßΩ æ
return
©© 
data
©© 
;
©© 
}
™™ 	
}
≠≠ 
}ÆÆ ú
VG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiNavigationController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Route 

(
 
$str 
) 
]  
public 

class #
ApiNavigationController (
:) *
BaseApiController 
{ 
public #
ApiNavigationController &
(& '
IHostingEnvironment' :
env; >
)> ?
{ 	
} 	
[   	
HttpPost  	 
,   
HttpOptions   
]   
[!! 	
Route!!	 
(!! 
$str!! %
)!!% &
]!!& '
public"" 
async"" 
Task"" 
<"" 
RepositoryResponse"" ,
<"", -
PaginationModel""- <
<""< =&
NavRelatedProductViewModel""= W
>""W X
>""X Y
>""Y Z
GetList""[ b
(""b c
RequestPaging""c p
request""q x
)""x y
{## 	
if$$ 
($$ 
string$$ 
.$$ 
IsNullOrEmpty$$ $
($$$ %
request$$% ,
.$$, -
Keyword$$- 4
)$$4 5
)$$5 6
{%% 
var&& 
data&& 
=&& 
await&&  &
NavRelatedProductViewModel&&! ;
.&&; <

Repository&&< F
.&&F G
GetModelListByAsync&&G Z
(&&Z [
m'' 
=>'' 
m'' 
.'' 
Specificulture'' %
==''& (
_lang'') .
,''. /
request''0 7
.''7 8
OrderBy''8 ?
,''? @
request''A H
.''H I
	Direction''I R
,''R S
request''T [
.''[ \
PageSize''\ d
,''d e
request''f m
.''m n
	PageIndex''n w
)''w x
.''x y
ConfigureAwait	''y á
(
''á à
false
''à ç
)
''ç é
;
''é è
return)) 
data)) 
;)) 
}** 
else++ 
{,, 

Expression-- 
<-- 
Func-- 
<--  
SiocRelatedProduct--  2
,--2 3
bool--4 8
>--8 9
>--9 :
	predicate--; D
=--E F
model--G L
=>--M O
model.. 
... 
Specificulture.. (
==..) +
_lang.., 1
&&// 
(// 
string// 
.// 
IsNullOrWhiteSpace// 1
(//1 2
request//2 9
.//9 :
Keyword//: A
)//A B
)//B C
;//C D
var00 
data00 
=00 
await00  &
NavRelatedProductViewModel00! ;
.00; <

Repository00< F
.00F G
GetModelListByAsync00G Z
(00Z [
	predicate00[ d
,00d e
request00f m
.00m n
OrderBy00n u
,00u v
request00w ~
.00~ 
	Direction	00 à
,
00à â
request
00ä ë
.
00ë í
PageSize
00í ö
,
00ö õ
request
00ú £
.
00£ §
	PageIndex
00§ ≠
)
00≠ Æ
.
00Æ Ø
ConfigureAwait
00Ø Ω
(
00Ω æ
false
00æ √
)
00√ ƒ
;
00ƒ ≈
return22 
data22 
;22 
}33 
}44 	
}:: 
};; ‡
YG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiNavPageModuleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{		 
[

 
Produces

 
(

 
$str

  
)

  !
]

! "
[ 
Route 

(
 
$str !
)! "
]" #
public 

class &
ApiNavPageModuleController +
:, -

Controller. 8
{ 
} 
} ≠ˆ
PG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiPageController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
)  
]  !
[ 
Route 

(
 
$str #
)# $
]$ %
public 

class !
ApiCategoryController &
:' (
BaseApiController 
{ 
public !
ApiCategoryController $
($ %
)% &
{ 	
} 	
[## 	
HttpGet##	 
]## 
[$$ 	
Route$$	 
($$ 
$str$$ 
)$$ 
]$$ 
public%% 
async%% 
Task%% 
<%% 
RepositoryResponse%% ,
<%%, -
SiocCategory%%- 9
>%%9 :
>%%: ;
DeleteAsync%%< G
(%%G H
int%%H K
id%%L N
)%%N O
{&& 	
var'' 
getPage'' 
='' 
await'' 
FECategoryViewModel''  3
.''3 4

Repository''4 >
.''> ?
GetSingleModelAsync''? R
(''R S
model(( 
=>(( 
model(( 
.(( 
Id(( !
==((" $
id((% '
&&((( *
model((+ 0
.((0 1
Specificulture((1 ?
==((@ B
_lang((C H
)((H I
;((I J
if)) 
()) 
getPage)) 
.)) 
	IsSucceed)) !
)))! "
{** 
return,, 
await,, 
getPage,, $
.,,$ %
Data,,% )
.,,) *
RemoveModelAsync,,* :
(,,: ;
true,,; ?
),,? @
;,,@ A
}-- 
else.. 
{// 
return00 
new00 
RepositoryResponse00 -
<00- .
SiocCategory00. :
>00: ;
(00; <
)00< =
{11 
	IsSucceed22 
=22 
false22  %
}33 
;33 
}44 
}55 	
[88 	
HttpGet88	 
]88 
[99 	
Route99	 
(99 
$str99 (
)99( )
]99) *
[:: 	
Route::	 
(:: 
$str:: #
)::# $
]::$ %
public;; 
async;; 
Task;; 
<;; 
JObject;; !
>;;! "
	BEDetails;;# ,
(;;, -
string;;- 3
viewType;;4 <
,;;< =
int;;> A
?;;A B
id;;C E
);;E F
{<< 	
switch== 
(== 
viewType== 
)== 
{>> 
case?? 
$str?? 
:?? 
if@@ 
(@@ 
id@@ 
.@@ 
HasValue@@ #
)@@# $
{AA 
varBB 
beResultBB $
=BB% &
awaitBB' , 
ApiCategoryViewModelBB- A
.BBA B

RepositoryBBB L
.BBL M
GetSingleModelAsyncBBM `
(BB` a
modelBBa f
=>BBg i
modelBBj o
.BBo p
IdBBp r
==BBs u
idBBv x
&&BBy {
model	BB| Å
.
BBÅ Ç
Specificulture
BBÇ ê
==
BBë ì
_lang
BBî ô
)
BBô ö
.
BBö õ
ConfigureAwait
BBõ ©
(
BB© ™
false
BB™ Ø
)
BBØ ∞
;
BB∞ ±
ifCC 
(CC 
beResultCC $
.CC$ %
	IsSucceedCC% .
)CC. /
{DD 
beResultEE $
.EE$ %
DataEE% )
.EE) *

DetailsUrlEE* 4
=EE5 6
SwCmsHelperEE7 B
.EEB C
GetRouterUrlEEC O
(EEO P
$strEEP V
,EEV W
newEEX [
{EE\ ]
beResultEE^ f
.EEf g
DataEEg k
.EEk l
SeoNameEEl s
}EEt u
,EEu v
RequestEEw ~
,EE~ 
Url
EEÄ É
)
EEÉ Ñ
;
EEÑ Ö
}FF 
returnGG 
JObjectGG &
.GG& '

FromObjectGG' 1
(GG1 2
beResultGG2 :
)GG: ;
;GG; <
}HH 
elseII 
{JJ 
varKK 
modelKK !
=KK" #
newKK$ '
SiocCategoryKK( 4
(KK4 5
)KK5 6
{LL 
SpecificultureMM *
=MM+ ,
_langMM- 2
,MM2 3
StatusNN "
=NN# $
(NN% &
intNN& )
)NN) *
SWStatusNN* 2
.NN2 3
PreviewNN3 :
,NN: ;
PageSizeOO $
=OO% &
$numOO' )
,PP 
PriorityQQ $
=QQ% & 
ApiCategoryViewModelQQ' ;
.QQ; <

RepositoryQQ< F
.QQF G
MaxQQG J
(QQJ K
aQQK L
=>QQM O
aQQP Q
.QQQ R
PriorityQQR Z
)QQZ [
.QQ[ \
DataQQ\ `
+QQa b
$numQQc d
}RR 
;RR 
RepositoryResponseTT *
<TT* + 
ApiCategoryViewModelTT+ ?
>TT? @
resultTTA G
=TTH I
newTTJ M
RepositoryResponseTTN `
<TT` a 
ApiCategoryViewModelTTa u
>TTu v
(TTv w
)TTw x
{UU 
	IsSucceedVV %
=VV& '
trueVV( ,
,VV, -
DataWW  
=WW! "
awaitWW# ( 
ApiCategoryViewModelWW) =
.WW= >
	InitAsyncWW> G
(WWG H
modelWWH M
)WWM N
}XX 
;XX 
returnYY 
JObjectYY &
.YY& '

FromObjectYY' 1
(YY1 2
resultYY2 8
)YY8 9
;YY9 :
}ZZ 
default[[ 
:[[ 
if\\ 
(\\ 
id\\ 
.\\ 
HasValue\\ #
)\\# $
{]] 
var^^ 
beResult^^ $
=^^% &
await^^' ,
FECategoryViewModel^^- @
.^^@ A

Repository^^A K
.^^K L
GetSingleModelAsync^^L _
(^^_ `
model^^` e
=>^^f h
model^^i n
.^^n o
Id^^o q
==^^r t
id^^u w
&&^^x z
model	^^{ Ä
.
^^Ä Å
Specificulture
^^Å è
==
^^ê í
_lang
^^ì ò
)
^^ò ô
.
^^ô ö
ConfigureAwait
^^ö ®
(
^^® ©
false
^^© Æ
)
^^Æ Ø
;
^^Ø ∞
if__ 
(__ 
beResult__ $
.__$ %
	IsSucceed__% .
)__. /
{`` 
beResultaa $
.aa$ %
Dataaa% )
.aa) *

DetailsUrlaa* 4
=aa5 6
SwCmsHelperaa7 B
.aaB C
GetRouterUrlaaC O
(aaO P
$straaP V
,aaV W
newaaX [
{aa\ ]
beResultaa^ f
.aaf g
Dataaag k
.aak l
SeoNameaal s
}aat u
,aau v
Requestaaw ~
,aa~ 
Url
aaÄ É
)
aaÉ Ñ
;
aaÑ Ö
}bb 
returncc 
JObjectcc &
.cc& '

FromObjectcc' 1
(cc1 2
beResultcc2 :
)cc: ;
;cc; <
}dd 
elseee 
{ff 
vargg 
modelgg !
=gg" #
newgg$ '
SiocCategorygg( 4
(gg4 5
)gg5 6
;gg6 7
RepositoryResponsehh *
<hh* +
FECategoryViewModelhh+ >
>hh> ?
resulthh@ F
=hhG H
newhhI L
RepositoryResponsehhM _
<hh_ `
FECategoryViewModelhh` s
>hhs t
(hht u
)hhu v
{ii 
	IsSucceedjj %
=jj& '
truejj( ,
,jj, -
Datakk  
=kk! "
newkk# &
FECategoryViewModelkk' :
(kk: ;
modelkk; @
)kk@ A
{ll 
Specificulturemm  .
=mm/ 0
_langmm1 6
,mm6 7
Statusnn  &
=nn' (
SWStatusnn) 1
.nn1 2
Previewnn2 9
,nn9 :
PageSizeoo  (
=oo) *
$numoo+ -
}pp 
}qq 
;qq 
returnrr 
JObjectrr &
.rr& '

FromObjectrr' 1
(rr1 2
resultrr2 8
)rr8 9
;rr9 :
}ss 
}tt 
}uu 	
[xx 	
HttpGetxx	 
]xx 
[yy 	
Routeyy	 
(yy 
$stryy 
)yy  
]yy  !
[zz 	
Routezz	 
(zz 
$strzz +
)zz+ ,
]zz, -
public{{ 
Task{{ 
<{{ 
RepositoryResponse{{ &
<{{& '
FECategoryViewModel{{' :
>{{: ;
>{{; <
GetByArticle{{= I
({{I J
int{{J M
id{{N P
,{{P Q
string{{R X
	articleId{{Y b
={{c d
null{{e i
){{i j
{|| 	
return}} 
FECategoryViewModel}} &
.}}& '

Repository}}' 1
.}}1 2
GetSingleModelAsync}}2 E
(}}E F
model~~ 
=>~~ 
model~~ 
.~~ 
Id~~ !
==~~" $
id~~% '
&&~~( *
model~~+ 0
.~~0 1
Specificulture~~1 ?
==~~@ B
_lang~~C H
)~~H I
;~~I J
} 	
[
ÇÇ 	
HttpGet
ÇÇ	 
]
ÇÇ 
[
ÉÉ 	
Route
ÉÉ	 
(
ÉÉ 
$str
ÉÉ 
)
ÉÉ 
]
ÉÉ 
[
ÑÑ 	
Route
ÑÑ	 
(
ÑÑ 
$str
ÑÑ 6
)
ÑÑ6 7
]
ÑÑ7 8
[
ÖÖ 	
Route
ÖÖ	 
(
ÖÖ 
$str
ÖÖ +
)
ÖÖ+ ,
]
ÖÖ, -
[
ÜÜ 	
Route
ÜÜ	 
(
ÜÜ 
$str
ÜÜ L
)
ÜÜL M
]
ÜÜM N
public
áá 
async
áá 
Task
áá 
<
áá  
RepositoryResponse
áá ,
<
áá, -
PaginationModel
áá- <
<
áá< =#
InfoCategoryViewModel
áá= R
>
ááR S
>
ááS T
>
ááT U
Get
ááV Y
(
ááY Z
int
àà 
?
àà 
PageSize
àà 
=
àà 
$num
àà 
,
àà 
int
àà  #
?
àà# $
	PageIndex
àà% .
=
àà/ 0
$num
àà1 2
,
àà2 3
string
àà4 :
orderBy
àà; B
=
ààC D
$str
ààE I
,
ââ 
OrderByDirection
ââ 
	direction
ââ (
=
ââ) *
OrderByDirection
ââ+ ;
.
ââ; <
	Ascending
ââ< E
)
ââE F
{
ää 	
var
ãã 
data
ãã 
=
ãã 
await
ãã #
InfoCategoryViewModel
ãã 2
.
ãã2 3

Repository
ãã3 =
.
ãã= >!
GetModelListByAsync
ãã> Q
(
ããQ R
m
åå 
=>
åå 
m
åå 
.
åå 
Specificulture
åå %
==
åå& (
_lang
åå) .
,
åå. /
orderBy
åå0 7
,
åå7 8
	direction
åå9 B
,
ååB C
PageSize
ååD L
,
ååL M
	PageIndex
ååN W
)
ååW X
.
ååX Y
ConfigureAwait
ååY g
(
ååg h
false
ååh m
)
ååm n
;
åån o
return
çç 
data
çç 
;
çç 
}
éé 	
[
ëë 	
HttpGet
ëë	 
]
ëë 
[
íí 	
Route
íí	 
(
íí 
$str
íí !
)
íí! "
]
íí" #
[
ìì 	
Route
ìì	 
(
ìì 
$str
ìì B
)
ììB C
]
ììC D
[
îî 	
Route
îî	 
(
îî 
$str
îî P
)
îîP Q
]
îîQ R
[
ïï 	
Route
ïï	 
(
ïï 
$str
ïï X
)
ïïX Y
]
ïïY Z
[
ññ 	
Route
ññ	 
(
ññ 
$str
ññ f
)
ññf g
]
ññg h
public
óó 
Task
óó 
<
óó  
RepositoryResponse
óó &
<
óó& '
PaginationModel
óó' 6
<
óó6 7#
InfoCategoryViewModel
óó7 L
>
óóL M
>
óóM N
>
óóN O
Search
óóP V
(
óóV W
string
òò 
keyword
òò 
=
òò 
null
òò !
,
òò! "
string
ôô 
description
ôô 
=
ôô  
null
ôô! %
,
ôô% &
int
öö 
?
öö 
PageSize
öö 
=
öö 
null
öö  
,
öö  !
int
öö" %
?
öö% &
	PageIndex
öö' 0
=
öö1 2
null
öö3 7
,
öö7 8
string
öö9 ?
orderBy
öö@ G
=
ööH I
$str
ööJ N
,
õõ 
OrderByDirection
õõ 
	direction
õõ (
=
õõ) *
OrderByDirection
õõ+ ;
.
õõ; <
	Ascending
õõ< E
)
õõE F
{
úú 	

Expression
ùù 
<
ùù 
Func
ùù 
<
ùù 
SiocCategory
ùù (
,
ùù( )
bool
ùù* .
>
ùù. /
>
ùù/ 0
	predicate
ùù1 :
=
ùù; <
model
ùù= B
=>
ùùC E
model
ûû 
.
ûû 
Specificulture
ûû  
==
ûû! #
_lang
ûû$ )
&&
üü 
(
üü 
string
üü 
.
üü  
IsNullOrWhiteSpace
üü )
(
üü) *
keyword
üü* 1
)
üü1 2
||
üü3 5
(
üü6 7
model
üü7 <
.
üü< =
Title
üü= B
.
üüB C
Contains
üüC K
(
üüK L
keyword
üüL S
)
üüS T
)
üüT U
)
üüU V
&&
†† 
(
†† 
string
†† 
.
††  
IsNullOrWhiteSpace
†† )
(
††) *
description
††* 5
)
††5 6
||
††7 9
(
††: ;
model
††; @
.
††@ A
Excerpt
††A H
.
††H I
Contains
††I Q
(
††Q R
description
††R ]
)
††] ^
)
††^ _
)
††_ `
;
††` a
return
°° #
InfoCategoryViewModel
°° (
.
¢¢ 

Repository
¢¢ 
.
££ !
GetModelListByAsync
££ $
(
££$ %
	predicate
££% .
,
££. /
orderBy
££0 7
,
££7 8
	direction
££9 B
,
££B C
PageSize
££D L
,
££L M
	PageIndex
££N W
)
££W X
;
££X Y
}
§§ 	
[
´´ 	
	Authorize
´´	 
]
´´ 
[
¨¨ 	
HttpPost
¨¨	 
,
¨¨ 
HttpOptions
¨¨ 
]
¨¨ 
[
≠≠ 	
Route
≠≠	 
(
≠≠ 
$str
≠≠ 
)
≠≠ 
]
≠≠ 
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ  
RepositoryResponse
ÆÆ ,
<
ÆÆ, -"
ApiCategoryViewModel
ÆÆ- A
>
ÆÆA B
>
ÆÆB C
Post
ÆÆD H
(
ÆÆH I
[
ÆÆI J
FromBody
ÆÆJ R
]
ÆÆR S"
ApiCategoryViewModel
ÆÆS g
model
ÆÆh m
)
ÆÆm n
{
ØØ 	
if
∞∞ 
(
∞∞ 
model
∞∞ 
!=
∞∞ 
null
∞∞ 
)
∞∞ 
{
±± 
model
≤≤ 
.
≤≤ 
	CreatedBy
≤≤ 
=
≤≤  !
User
≤≤" &
.
≤≤& '
Identity
≤≤' /
.
≤≤/ 0
Name
≤≤0 4
;
≤≤4 5
var
≥≥ 
result
≥≥ 
=
≥≥ 
await
≥≥ "
model
≥≥# (
.
≥≥( )
SaveModelAsync
≥≥) 7
(
≥≥7 8
true
≥≥8 <
)
≥≥< =
.
≥≥= >
ConfigureAwait
≥≥> L
(
≥≥L M
false
≥≥M R
)
≥≥R S
;
≥≥S T
return
¥¥ 
result
¥¥ 
;
¥¥ 
}
µµ 
return
∂∂ 
new
∂∂  
RepositoryResponse
∂∂ )
<
∂∂) *"
ApiCategoryViewModel
∂∂* >
>
∂∂> ?
(
∂∂? @
)
∂∂@ A
;
∂∂A B
}
∑∑ 	
[
∫∫ 	
HttpPost
∫∫	 
,
∫∫ 
HttpOptions
∫∫ 
]
∫∫ 
[
ªª 	
Route
ªª	 
(
ªª 
$str
ªª 
)
ªª 
]
ªª 
public
ºº 
async
ºº 
Task
ºº 
<
ºº  
RepositoryResponse
ºº ,
<
ºº, -
SiocCategory
ºº- 9
>
ºº9 :
>
ºº: ;

SaveFields
ºº< F
(
ººF G
int
ººG J
id
ººK M
,
ººM N
[
ººO P
FromBody
ººP X
]
ººX Y
List
ººY ]
<
ºº] ^
EntityField
ºº^ i
>
ººi j
fields
ººk q
)
ººq r
{
ΩΩ 	
if
ææ 
(
ææ 
fields
ææ 
!=
ææ 
null
ææ 
)
ææ 
{
øø 
var
¿¿ 
result
¿¿ 
=
¿¿ 
new
¿¿   
RepositoryResponse
¿¿! 3
<
¿¿3 4
SiocCategory
¿¿4 @
>
¿¿@ A
(
¿¿A B
)
¿¿B C
{
¿¿D E
	IsSucceed
¿¿F O
=
¿¿P Q
true
¿¿R V
}
¿¿W X
;
¿¿X Y
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
property
¡¡ %
in
¡¡& (
fields
¡¡) /
)
¡¡/ 0
{
¬¬ 
if
√√ 
(
√√ 
result
√√ 
.
√√ 
	IsSucceed
√√ (
)
√√( )
{
ƒƒ 
result
≈≈ 
=
≈≈  
await
≈≈! &#
InfoCategoryViewModel
≈≈' <
.
≈≈< =

Repository
≈≈= G
.
≈≈G H
UpdateFieldsAsync
≈≈H Y
(
≈≈Y Z
c
≈≈Z [
=>
≈≈\ ^
c
≈≈_ `
.
≈≈` a
Id
≈≈a c
==
≈≈d f
id
≈≈g i
&&
≈≈j l
c
≈≈m n
.
≈≈n o
Specificulture
≈≈o }
==≈≈~ Ä
_lang≈≈Å Ü
,≈≈Ü á
fields≈≈à é
)≈≈é è
.≈≈è ê
ConfigureAwait≈≈ê û
(≈≈û ü
false≈≈ü §
)≈≈§ •
;≈≈• ¶
}
∆∆ 
else
«« 
{
»» 
break
…… 
;
…… 
}
   
}
ÃÃ 
return
ÕÕ 
result
ÕÕ 
;
ÕÕ 
}
ŒŒ 
return
œœ 
new
œœ  
RepositoryResponse
œœ )
<
œœ) *
SiocCategory
œœ* 6
>
œœ6 7
(
œœ7 8
)
œœ8 9
;
œœ9 :
}
–– 	
[
”” 	
HttpPost
””	 
,
”” 
HttpOptions
”” 
]
”” 
[
‘‘ 	
Route
‘‘	 
(
‘‘ 
$str
‘‘ 
)
‘‘ 
]
‘‘ 
[
’’ 	
Route
’’	 
(
’’ 
$str
’’ 
)
’’ 
]
’’ 
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷ 
JObject
÷÷ !
>
÷÷! "
GetList
÷÷# *
(
÷÷* +
[
◊◊ 
FromBody
◊◊ 
]
◊◊ 
RequestPaging
◊◊ $
request
◊◊% ,
,
◊◊, -
int
◊◊. 1
?
◊◊1 2
level
◊◊3 8
=
◊◊9 :
$num
◊◊; <
)
◊◊< =
{
ÿÿ 	$
ParseRequestPagingDate
ŸŸ "
(
ŸŸ" #
request
ŸŸ# *
)
ŸŸ* +
;
ŸŸ+ ,

Expression
⁄⁄ 
<
⁄⁄ 
Func
⁄⁄ 
<
⁄⁄ 
SiocCategory
⁄⁄ (
,
⁄⁄( )
bool
⁄⁄* .
>
⁄⁄. /
>
⁄⁄/ 0
	predicate
⁄⁄1 :
;
⁄⁄: ;
switch
€€ 
(
€€ 
request
€€ 
.
€€ 
Key
€€ 
)
€€  
{
‹‹ 
case
›› 
$str
›› 
:
›› 
	predicate
ﬁﬁ 
=
ﬁﬁ 
model
ﬁﬁ  %
=>
ﬁﬁ& (
model
ﬂﬂ 
.
ﬂﬂ 
Specificulture
ﬂﬂ ,
==
ﬂﬂ- /
_lang
ﬂﬂ0 5
&&
‡‡ 
(
‡‡ 
string
‡‡ "
.
‡‡" # 
IsNullOrWhiteSpace
‡‡# 5
(
‡‡5 6
request
‡‡6 =
.
‡‡= >
Keyword
‡‡> E
)
‡‡E F
||
·· 
(
··  
model
··  %
.
··% &
Title
··& +
.
··+ ,
Contains
··, 4
(
··4 5
request
··5 <
.
··< =
Keyword
··= D
)
··D E
||
‚‚ 
model
‚‚ $
.
‚‚$ %
Excerpt
‚‚% ,
.
‚‚, -
Contains
‚‚- 5
(
‚‚5 6
request
‚‚6 =
.
‚‚= >
Keyword
‚‚> E
)
‚‚E F
)
‚‚F G
)
‚‚G H
&&
„„ 
(
„„ 
!
„„ 
request
„„ $
.
„„$ %
FromDate
„„% -
.
„„- .
HasValue
„„. 6
||
‰‰ 
(
‰‰  
model
‰‰  %
.
‰‰% &
CreatedDateTime
‰‰& 5
>=
‰‰6 8
request
‰‰9 @
.
‰‰@ A
FromDate
‰‰A I
.
‰‰I J
Value
‰‰J O
)
‰‰O P
)
ÂÂ 
&&
ÊÊ 
(
ÊÊ 
!
ÊÊ 
request
ÊÊ $
.
ÊÊ$ %
ToDate
ÊÊ% +
.
ÊÊ+ ,
HasValue
ÊÊ, 4
||
ÁÁ 
(
ÁÁ  
model
ÁÁ  %
.
ÁÁ% &
CreatedDateTime
ÁÁ& 5
<=
ÁÁ6 8
request
ÁÁ9 @
.
ÁÁ@ A
ToDate
ÁÁA G
.
ÁÁG H
Value
ÁÁH M
)
ÁÁM N
)
ËË 
;
ËË 
var
ÈÈ 
fedata
ÈÈ 
=
ÈÈ  
await
ÈÈ! &!
FECategoryViewModel
ÈÈ' :
.
ÈÈ: ;

Repository
ÈÈ; E
.
ÈÈE F!
GetModelListByAsync
ÈÈF Y
(
ÈÈY Z
	predicate
ÈÈZ c
,
ÈÈc d
request
ÈÈe l
.
ÈÈl m
OrderBy
ÈÈm t
,
ÈÈt u
request
ÈÈv }
.
ÈÈ} ~
	DirectionÈÈ~ á
,ÈÈá à
requestÈÈâ ê
.ÈÈê ë
PageSizeÈÈë ô
,ÈÈô ö
requestÈÈõ ¢
.ÈÈ¢ £
	PageIndexÈÈ£ ¨
)ÈÈ¨ ≠
.ÈÈ≠ Æ
ConfigureAwaitÈÈÆ º
(ÈÈº Ω
falseÈÈΩ ¬
)ÈÈ¬ √
;ÈÈ√ ƒ
if
ÍÍ 
(
ÍÍ 
fedata
ÍÍ 
.
ÍÍ 
	IsSucceed
ÍÍ (
)
ÍÍ( )
{
ÎÎ 
fedata
ÏÏ 
.
ÏÏ 
Data
ÏÏ #
.
ÏÏ# $
Items
ÏÏ$ )
.
ÏÏ) *
ForEach
ÏÏ* 1
(
ÏÏ1 2
a
ÏÏ2 3
=>
ÏÏ4 6
{
ÌÌ 
a
ÓÓ 
.
ÓÓ 

DetailsUrl
ÓÓ (
=
ÓÓ) *
SwCmsHelper
ÓÓ+ 6
.
ÓÓ6 7
GetRouterUrl
ÓÓ7 C
(
ÓÓC D
$str
ÔÔ  &
,
ÔÔ& '
new
ÔÔ( +
{
ÔÔ, -
a
ÔÔ. /
.
ÔÔ/ 0
SeoName
ÔÔ0 7
}
ÔÔ8 9
,
ÔÔ9 :
Request
ÔÔ; B
,
ÔÔB C
Url
ÔÔD G
)
ÔÔG H
;
ÔÔH I
}
 
)
 
;
 
}
ÒÒ 
return
ÚÚ 
JObject
ÚÚ "
.
ÚÚ" #

FromObject
ÚÚ# -
(
ÚÚ- .
fedata
ÚÚ. 4
)
ÚÚ4 5
;
ÚÚ5 6
case
ÛÛ 
$str
ÛÛ 
:
ÛÛ 
	predicate
ÙÙ 
=
ÙÙ 
model
ÙÙ  %
=>
ÙÙ& (
model
ıı 
.
ıı 
Specificulture
ıı ,
==
ıı- /
_lang
ıı0 5
&&
ˆˆ 
(
ˆˆ 
string
ˆˆ "
.
ˆˆ" # 
IsNullOrWhiteSpace
ˆˆ# 5
(
ˆˆ5 6
request
ˆˆ6 =
.
ˆˆ= >
Keyword
ˆˆ> E
)
ˆˆE F
||
˜˜ 
(
˜˜  
model
˜˜  %
.
˜˜% &
Title
˜˜& +
.
˜˜+ ,
Contains
˜˜, 4
(
˜˜4 5
request
˜˜5 <
.
˜˜< =
Keyword
˜˜= D
)
˜˜D E
||
¯¯ 
model
¯¯ $
.
¯¯$ %
Excerpt
¯¯% ,
.
¯¯, -
Contains
¯¯- 5
(
¯¯5 6
request
¯¯6 =
.
¯¯= >
Keyword
¯¯> E
)
¯¯E F
)
¯¯F G
)
¯¯G H
&&
˘˘ 
(
˘˘ 
!
˘˘ 
request
˘˘ $
.
˘˘$ %
FromDate
˘˘% -
.
˘˘- .
HasValue
˘˘. 6
||
˙˙ 
(
˙˙  
model
˙˙  %
.
˙˙% &
CreatedDateTime
˙˙& 5
>=
˙˙6 8
request
˙˙9 @
.
˙˙@ A
FromDate
˙˙A I
.
˙˙I J
Value
˙˙J O
)
˙˙O P
)
˚˚ 
&&
¸¸ 
(
¸¸ 
!
¸¸ 
request
¸¸ $
.
¸¸$ %
ToDate
¸¸% +
.
¸¸+ ,
HasValue
¸¸, 4
||
˝˝ 
(
˝˝  
model
˝˝  %
.
˝˝% &
CreatedDateTime
˝˝& 5
<=
˝˝6 8
request
˝˝9 @
.
˝˝@ A
ToDate
˝˝A G
.
˝˝G H
Value
˝˝H M
)
˝˝M N
)
˛˛ 
;
˛˛ 
var
ˇˇ 
bedata
ˇˇ 
=
ˇˇ  
await
ˇˇ! &"
ApiCategoryViewModel
ˇˇ' ;
.
ˇˇ; <

Repository
ˇˇ< F
.
ˇˇF G!
GetModelListByAsync
ˇˇG Z
(
ˇˇZ [
	predicate
ˇˇ[ d
,
ˇˇd e
request
ˇˇf m
.
ˇˇm n
OrderBy
ˇˇn u
,
ˇˇu v
request
ˇˇw ~
.
ˇˇ~ 
	Directionˇˇ à
,ˇˇà â
requestˇˇä ë
.ˇˇë í
PageSizeˇˇí ö
,ˇˇö õ
requestˇˇú £
.ˇˇ£ §
	PageIndexˇˇ§ ≠
)ˇˇ≠ Æ
.ˇˇÆ Ø
ConfigureAwaitˇˇØ Ω
(ˇˇΩ æ
falseˇˇæ √
)ˇˇ√ ƒ
;ˇˇƒ ≈
if
ÄÄ 
(
ÄÄ 
bedata
ÄÄ 
.
ÄÄ 
	IsSucceed
ÄÄ (
)
ÄÄ( )
{
ÅÅ 
bedata
ÇÇ 
.
ÇÇ 
Data
ÇÇ #
.
ÇÇ# $
Items
ÇÇ$ )
.
ÇÇ) *
ForEach
ÇÇ* 1
(
ÇÇ1 2
a
ÇÇ2 3
=>
ÇÇ4 6
{
ÉÉ 
a
ÑÑ 
.
ÑÑ 

DetailsUrl
ÑÑ (
=
ÑÑ) *
SwCmsHelper
ÑÑ+ 6
.
ÑÑ6 7
GetRouterUrl
ÑÑ7 C
(
ÑÑC D
$str
ÖÖ  &
,
ÖÖ& '
new
ÖÖ( +
{
ÖÖ, -
a
ÖÖ. /
.
ÖÖ/ 0
SeoName
ÖÖ0 7
}
ÖÖ8 9
,
ÖÖ9 :
Request
ÖÖ; B
,
ÖÖB C
Url
ÖÖD G
)
ÖÖG H
;
ÖÖH I
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
return
àà 
JObject
àà "
.
àà" #

FromObject
àà# -
(
àà- .
bedata
àà. 4
)
àà4 5
;
àà5 6
default
ââ 
:
ââ 
	predicate
ää 
=
ää 
model
ää  %
=>
ää& (
model
ãã 
.
ãã 
Specificulture
ãã ,
==
ãã- /
_lang
ãã0 5
&&
åå 
model
åå  
.
åå  !
Level
åå! &
==
åå' )
level
åå* /
&&
çç 
(
çç 
string
çç "
.
çç" # 
IsNullOrWhiteSpace
çç# 5
(
çç5 6
request
çç6 =
.
çç= >
Keyword
çç> E
)
ççE F
||
éé 
(
éé  
model
éé  %
.
éé% &
Title
éé& +
.
éé+ ,
Contains
éé, 4
(
éé4 5
request
éé5 <
.
éé< =
Keyword
éé= D
)
ééD E
||
èè 
model
èè $
.
èè$ %
Excerpt
èè% ,
.
èè, -
Contains
èè- 5
(
èè5 6
request
èè6 =
.
èè= >
Keyword
èè> E
)
èèE F
)
èèF G
)
èèG H
&&
êê 
(
êê 
!
êê 
request
êê $
.
êê$ %
FromDate
êê% -
.
êê- .
HasValue
êê. 6
||
ëë 
(
ëë  
model
ëë  %
.
ëë% &
CreatedDateTime
ëë& 5
>=
ëë6 8
request
ëë9 @
.
ëë@ A
FromDate
ëëA I
.
ëëI J
Value
ëëJ O
)
ëëO P
)
íí 
&&
ìì 
(
ìì 
!
ìì 
request
ìì $
.
ìì$ %
ToDate
ìì% +
.
ìì+ ,
HasValue
ìì, 4
||
îî 
(
îî  
model
îî  %
.
îî% &
CreatedDateTime
îî& 5
<=
îî6 8
request
îî9 @
.
îî@ A
ToDate
îîA G
.
îîG H
Value
îîH M
)
îîM N
)
ïï 
;
ïï 
var
ññ 
data
ññ 
=
ññ 
await
ññ $#
InfoCategoryViewModel
ññ% :
.
ññ: ;

Repository
ññ; E
.
ññE F!
GetModelListByAsync
ññF Y
(
ññY Z
	predicate
ññZ c
,
ññc d
request
ññe l
.
ññl m
OrderBy
ññm t
,
ññt u
request
ññv }
.
ññ} ~
	Directionññ~ á
,ññá à
requestññâ ê
.ññê ë
PageSizeññë ô
,ññô ö
requestññõ ¢
.ññ¢ £
	PageIndexññ£ ¨
)ññ¨ ≠
.ññ≠ Æ
ConfigureAwaitññÆ º
(ññº Ω
falseññΩ ¬
)ññ¬ √
;ññ√ ƒ
if
óó 
(
óó 
data
óó 
.
óó 
	IsSucceed
óó &
)
óó& '
{
òò 
data
ôô 
.
ôô 
Data
ôô !
.
ôô! "
Items
ôô" '
.
ôô' (
ForEach
ôô( /
(
ôô/ 0
a
ôô0 1
=>
ôô2 4
{
öö 
a
õõ 
.
õõ 

DetailsUrl
õõ (
=
õõ) *
SwCmsHelper
õõ+ 6
.
õõ6 7
GetRouterUrl
õõ7 C
(
õõC D
$str
úú  &
,
úú& '
new
úú( +
{
úú, -
a
úú. /
.
úú/ 0
SeoName
úú0 7
}
úú8 9
,
úú9 :
Request
úú; B
,
úúB C
Url
úúD G
)
úúG H
;
úúH I
a
ùù 
.
ùù 
Childs
ùù $
.
ùù$ %
ForEach
ùù% ,
(
ùù, -
c
ùù- .
=>
ùù/ 1
{
ûû 
c
üü  !
.
üü! "

DetailsUrl
üü" ,
=
üü- .
SwCmsHelper
üü/ :
.
üü: ;
GetRouterUrl
üü; G
(
üüG H
$str
††$ *
,
††* +
new
††, /
{
††0 1
c
††2 3
.
††3 4
SeoName
††4 ;
}
††< =
,
††= >
Request
††? F
,
††F G
Url
††H K
)
††K L
;
††L M
}
°° 
)
°° 
;
°° 
}
¢¢ 
)
¢¢ 
;
¢¢ 
}
££ 
return
§§ 
JObject
§§ "
.
§§" #

FromObject
§§# -
(
§§- .
data
§§. 2
)
§§2 3
;
§§3 4
}
•• 
}
¶¶ 	
}
©© 
}™™ €â
SG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiProductController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str "
)" #
]# $
public 

class  
ApiProductController %
:& '
BaseApiController 
{ 
public  
ApiProductController #
(# $
)$ %
{   	
}!! 	
[&& 	
HttpGet&&	 
]&& 
['' 	
Route''	 
('' 
$str'' (
)''( )
]'') *
[(( 	
Route((	 
((( 
$str(( #
)((# $
](($ %
public)) 
async)) 
Task)) 
<)) 
JObject)) !
>))! "
Details))# *
())* +
string))+ 1
viewType))2 :
,)): ;
string))< B
id))C E
)))E F
{** 	
switch++ 
(++ 
viewType++ 
)++ 
{,, 
case-- 
$str-- 
:-- 
if.. 
(.. 
!.. 
string.. 
...  
IsNullOrEmpty..  -
(..- .
id... 0
)..0 1
)..1 2
{// 
var00 
beResult00 $
=00% &
await00' ,
ApiProductViewModel00- @
.00@ A

Repository00A K
.00K L
GetSingleModelAsync00L _
(00_ `
model00` e
=>00f h
model00i n
.00n o
Id00o q
==00r t
id00u w
&&00x z
model	00{ Ä
.
00Ä Å
Specificulture
00Å è
==
00ê í
_lang
00ì ò
)
00ò ô
.
00ô ö
ConfigureAwait
00ö ®
(
00® ©
false
00© Æ
)
00Æ Ø
;
00Ø ∞
if11 
(11 
beResult11 $
.11$ %
	IsSucceed11% .
)11. /
{22 
beResult33 $
.33$ %
Data33% )
.33) *

DetailsUrl33* 4
=335 6
SwCmsHelper337 B
.33B C
GetRouterUrl33C O
(33O P
$str33P Y
,33Y Z
new33[ ^
{33_ `
beResult33a i
.33i j
Data33j n
.33n o
SeoName33o v
}33w x
,33x y
Request	33z Å
,
33Å Ç
Url
33É Ü
)
33Ü á
;
33á à
}44 
return55 
JObject55 &
.55& '

FromObject55' 1
(551 2
beResult552 :
)55: ;
;55; <
}66 
else77 
{88 
var99 
model99 !
=99" #
new99$ '
SiocProduct99( 3
(993 4
)994 5
{996 7
Specificulture998 F
=99G H
_lang99I N
,99N O
Status99P V
=99W X
(99Y Z
int99Z ]
)99] ^
SWStatus99^ f
.99f g
Preview99g n
}99o p
;99p q
RepositoryResponse:: *
<::* +
ApiProductViewModel::+ >
>::> ?
result::@ F
=::G H
new::I L
RepositoryResponse::M _
<::_ `
ApiProductViewModel::` s
>::s t
(::t u
)::u v
{;; 
	IsSucceed<< %
=<<& '
true<<( ,
,<<, -
Data==  
===! "
new==# &
ApiProductViewModel==' :
(==: ;
model==; @
)==@ A
}>> 
;>> 
return?? 
JObject?? &
.??& '

FromObject??' 1
(??1 2
result??2 8
)??8 9
;??9 :
}@@ 
defaultAA 
:AA 
ifBB 
(BB 
!BB 
stringBB 
.BB  
IsNullOrEmptyBB  -
(BB- .
idBB. 0
)BB0 1
)BB1 2
{CC 
varDD 
beResultDD $
=DD% &
awaitDD' ,
FEProductViewModelDD- ?
.DD? @

RepositoryDD@ J
.DDJ K
GetSingleModelAsyncDDK ^
(DD^ _
modelDD_ d
=>DDe g
modelDDh m
.DDm n
IdDDn p
==DDq s
idDDt v
&&DDw y
modelDDz 
.	DD Ä
Specificulture
DDÄ é
==
DDè ë
_lang
DDí ó
)
DDó ò
.
DDò ô
ConfigureAwait
DDô ß
(
DDß ®
false
DD® ≠
)
DD≠ Æ
;
DDÆ Ø
ifEE 
(EE 
beResultEE $
.EE$ %
	IsSucceedEE% .
)EE. /
{FF 
beResultGG $
.GG$ %
DataGG% )
.GG) *

DetailsUrlGG* 4
=GG5 6
SwCmsHelperGG7 B
.GGB C
GetRouterUrlGGC O
(GGO P
$strGGP Y
,GGY Z
newGG[ ^
{GG_ `
beResultGGa i
.GGi j
DataGGj n
.GGn o
SeoNameGGo v
}GGw x
,GGx y
Request	GGz Å
,
GGÅ Ç
Url
GGÉ Ü
)
GGÜ á
;
GGá à
}HH 
returnII 
JObjectII &
.II& '

FromObjectII' 1
(II1 2
beResultII2 :
)II: ;
;II; <
}JJ 
elseKK 
{LL 
varMM 
modelMM !
=MM" #
newMM$ '
SiocProductMM( 3
(MM3 4
)MM4 5
;MM5 6
RepositoryResponseNN *
<NN* +
FEProductViewModelNN+ =
>NN= >
resultNN? E
=NNF G
newNNH K
RepositoryResponseNNL ^
<NN^ _
FEProductViewModelNN_ q
>NNq r
(NNr s
)NNs t
{OO 
	IsSucceedPP %
=PP& '
truePP( ,
,PP, -
DataQQ  
=QQ! "
newQQ# &
FEProductViewModelQQ' 9
(QQ9 :
modelQQ: ?
)QQ? @
{QQA B
SpecificultureQQC Q
=QQR S
_langQQT Y
,QQY Z
StatusQQ[ a
=QQb c
SWStatusQQd l
.QQl m
PreviewQQm t
}QQu v
}RR 
;RR 
returnSS 
JObjectSS &
.SS& '

FromObjectSS' 1
(SS1 2
resultSS2 8
)SS8 9
;SS9 :
}TT 
}UU 
}VV 	
[YY 	
HttpGetYY	 
]YY 
[ZZ 	
RouteZZ	 
(ZZ 
$strZZ 
)ZZ 
]ZZ 
public[[ 
async[[ 
Task[[ 
<[[ 
RepositoryResponse[[ ,
<[[, - 
InfoProductViewModel[[- A
>[[A B
>[[B C
Recycle[[D K
([[K L
string[[L R
id[[S U
)[[U V
{\\ 	
var]] 

getProduct]] 
=]]  
InfoProductViewModel]] 1
.]]1 2

Repository]]2 <
.]]< =
GetSingleModel]]= K
(]]K L
a]]L M
=>]]N P
a]]Q R
.]]R S
Id]]S U
==]]V X
id]]Y [
)]][ \
;]]\ ]
if^^ 
(^^ 

getProduct^^ 
.^^ 
	IsSucceed^^ $
)^^$ %
{__ 
var`` 
data`` 
=`` 

getProduct`` %
.``% &
Data``& *
;``* +
dataaa 
.aa 
Statusaa 
=aa 
SWStatusaa &
.aa& '
Deletedaa' .
;aa. /
returnbb 
awaitbb 
databb !
.bb! "
SaveModelAsyncbb" 0
(bb0 1
)bb1 2
.bb2 3
ConfigureAwaitbb3 A
(bbA B
falsebbB G
)bbG H
;bbH I
}cc 
elsedd 
{ee 
returnff 
newff 
RepositoryResponseff -
<ff- . 
InfoProductViewModelff. B
>ffB C
(ffC D
)ffD E
{ffF G
	IsSucceedffH Q
=ffR S
falseffT Y
}ffZ [
;ff[ \
}gg 
}hh 	
[kk 	
HttpGetkk	 
]kk 
[ll 	
Routell	 
(ll 
$strll 
)ll 
]ll 
publicmm 
asyncmm 
Taskmm 
<mm 
RepositoryResponsemm ,
<mm, - 
InfoProductViewModelmm- A
>mmA B
>mmB C
RestoremmD K
(mmK L
stringmmL R
idmmS U
)mmU V
{nn 	
varoo 

getProductoo 
=oo  
InfoProductViewModeloo 1
.oo1 2

Repositoryoo2 <
.oo< =
GetSingleModeloo= K
(ooK L
aooL M
=>ooN P
aooQ R
.ooR S
IdooS U
==ooV X
idooY [
)oo[ \
;oo\ ]
ifpp 
(pp 

getProductpp 
.pp 
	IsSucceedpp $
)pp$ %
{qq 
varrr 
datarr 
=rr 

getProductrr %
.rr% &
Datarr& *
;rr* +
datass 
.ss 
Statusss 
=ss 
SWStatusss &
.ss& '
Previewss' .
;ss. /
returntt 
awaittt 
datatt !
.tt! "
SaveModelAsynctt" 0
(tt0 1
)tt1 2
.tt2 3
ConfigureAwaittt3 A
(ttA B
falsettB G
)ttG H
;ttH I
}uu 
elsevv 
{ww 
returnxx 
newxx 
RepositoryResponsexx -
<xx- . 
InfoProductViewModelxx. B
>xxB C
(xxC D
)xxD E
{xxF G
	IsSucceedxxH Q
=xxR S
falsexxT Y
}xxZ [
;xx[ \
}yy 
}zz 	
[}} 	
HttpGet}}	 
]}} 
[~~ 	
Route~~	 
(~~ 
$str~~ 
)~~ 
]~~ 
public 
async 
Task 
< 
RepositoryResponse ,
<, -
SiocProduct- 8
>8 9
>9 :
Delete; A
(A B
stringB H
idI K
)K L
{
ÄÄ 	
var
ÅÅ 

getProduct
ÅÅ 
=
ÅÅ !
ApiProductViewModel
ÅÅ 0
.
ÅÅ0 1

Repository
ÅÅ1 ;
.
ÅÅ; <
GetSingleModel
ÅÅ< J
(
ÅÅJ K
a
ÅÅK L
=>
ÅÅM O
a
ÅÅP Q
.
ÅÅQ R
Id
ÅÅR T
==
ÅÅU W
id
ÅÅX Z
&&
ÅÅ[ ]
a
ÅÅ^ _
.
ÅÅ_ `
Specificulture
ÅÅ` n
==
ÅÅo q
_lang
ÅÅr w
)
ÅÅw x
;
ÅÅx y
if
ÇÇ 
(
ÇÇ 

getProduct
ÇÇ 
.
ÇÇ 
	IsSucceed
ÇÇ $
)
ÇÇ$ %
{
ÉÉ 
return
ÑÑ 
await
ÑÑ 

getProduct
ÑÑ '
.
ÑÑ' (
Data
ÑÑ( ,
.
ÑÑ, -
RemoveModelAsync
ÑÑ- =
(
ÑÑ= >
true
ÑÑ> B
)
ÑÑB C
.
ÑÑC D
ConfigureAwait
ÑÑD R
(
ÑÑR S
false
ÑÑS X
)
ÑÑX Y
;
ÑÑY Z
}
ÖÖ 
else
ÜÜ 
{
áá 
return
àà 
new
àà  
RepositoryResponse
àà -
<
àà- .
SiocProduct
àà. 9
>
àà9 :
(
àà: ;
)
àà; <
{
àà= >
	IsSucceed
àà? H
=
ààI J
false
ààK P
}
ààQ R
;
ààR S
}
ââ 
}
ää 	
[
çç 	
HttpGet
çç	 
]
çç 
[
èè 	
Route
èè	 
(
èè 
$str
èè 
)
èè 
]
èè 
[
êê 	
Route
êê	 
(
êê 
$str
êê 6
)
êê6 7
]
êê7 8
[
ëë 	
Route
ëë	 
(
ëë 
$str
ëë +
)
ëë+ ,
]
ëë, -
[
íí 	
Route
íí	 
(
íí 
$str
íí L
)
ííL M
]
ííM N
public
ìì 
async
ìì 
Task
ìì 
<
ìì  
RepositoryResponse
ìì ,
<
ìì, -
PaginationModel
ìì- <
<
ìì< ="
InfoProductViewModel
ìì= Q
>
ììQ R
>
ììR S
>
ììS T
Get
ììU X
(
ììX Y
int
ììY \
?
ìì\ ]
pageSize
ìì^ f
=
ììg h
$num
ììi k
,
ììk l
int
ììm p
?
ììp q
	pageIndex
ììr {
=
ìì| }
$num
ìì~ 
,ìì Ä
stringììÅ á
orderByììà è
=ììê ë
$strììí ñ
,ììñ ó 
OrderByDirectionììò ®
	directionìì© ≤
=ìì≥ ¥ 
OrderByDirectionììµ ≈
.ìì≈ ∆
	Ascendingìì∆ œ
)ììœ –
{
îî 	
var
ïï 
data
ïï 
=
ïï 
await
ïï "
InfoProductViewModel
ïï 1
.
ïï1 2

Repository
ïï2 <
.
ïï< =!
GetModelListByAsync
ïï= P
(
ïïP Q
m
ññ 
=>
ññ 
m
ññ 
.
ññ 
Status
ññ 
!=
ññ  
(
ññ! "
int
ññ" %
)
ññ% &
SWStatus
ññ& .
.
ññ. /
Deleted
ññ/ 6
&&
ññ7 9
m
ññ: ;
.
ññ; <
Specificulture
ññ< J
==
ññK M
_lang
ññN S
,
ññS T
orderBy
ññU \
,
ññ\ ]
	direction
ññ^ g
,
ññg h
pageSize
ññi q
,
ññq r
	pageIndex
ññs |
)
ññ| }
.
ññ} ~
ConfigureAwaitññ~ å
(ññå ç
falseññç í
)ññí ì
;ññì î
if
óó 
(
óó 
data
óó 
.
óó 
	IsSucceed
óó 
)
óó 
{
òò 
data
ôô 
.
ôô 
Data
ôô 
.
ôô 
Items
ôô 
.
ôô  
ForEach
ôô  '
(
ôô' (
a
ôô( )
=>
ôô* ,
a
ôô- .
.
ôô. /

DetailsUrl
ôô/ 9
=
ôô: ;
SwCmsHelper
ôô< G
.
ôôG H
GetRouterUrl
ôôH T
(
ôôT U
$str
ôôU ^
,
ôô^ _
new
ôô` c
{
ôôd e
a
ôôf g
.
ôôg h
SeoName
ôôh o
}
ôôp q
,
ôôq r
Request
ôôs z
,
ôôz {
Url
ôô| 
)ôô Ä
)ôôÄ Å
;ôôÅ Ç
}
öö 
return
õõ 
data
õõ 
;
õõ 
}
úú 	
[
üü 	
HttpGet
üü	 
]
üü 
[
†† 	
Route
††	 
(
†† 
$str
†† !
)
††! "
]
††" #
[
°° 	
Route
°°	 
(
°° 
$str
°° B
)
°°B C
]
°°C D
[
¢¢ 	
Route
¢¢	 
(
¢¢ 
$str
¢¢ X
)
¢¢X Y
]
¢¢Y Z
public
££ 
async
££ 
Task
££ 
<
££  
RepositoryResponse
££ ,
<
££, -
PaginationModel
££- <
<
££< ="
InfoProductViewModel
££= Q
>
££Q R
>
££R S
>
££S T
Search
££U [
(
££[ \
string
££\ b
keyword
££c j
=
££k l
null
££m q
,
££q r
int
££s v
?
££v w
pageSize££x Ä
=££Å Ç
null££É á
,££á à
int££â å
?££å ç
	pageIndex££é ó
=££ò ô
null££ö û
,££û ü
string££† ¶
orderBy££ß Æ
=££Ø ∞
$str££± µ
,££µ ∂ 
OrderByDirection££∑ «
	direction££» —
=££“ ” 
OrderByDirection££‘ ‰
.££‰ Â
	Ascending££Â Ó
)££Ó Ô
{
§§ 	

Expression
•• 
<
•• 
Func
•• 
<
•• 
SiocProduct
•• '
,
••' (
bool
••) -
>
••- .
>
••. /
	predicate
••0 9
=
••: ;
model
••< A
=>
••B D
model
¶¶ 
.
¶¶ 
Specificulture
¶¶ $
==
¶¶% '
_lang
¶¶( -
&&
ßß 
model
ßß 
.
ßß 
Status
ßß 
!=
ßß  "
(
ßß# $
int
ßß$ '
)
ßß' (
SWStatus
ßß( 0
.
ßß0 1
Deleted
ßß1 8
&&
®® 
(
®® 
string
®® 
.
®®  
IsNullOrWhiteSpace
®® -
(
®®- .
keyword
®®. 5
)
®®5 6
||
©© 
(
©© 
model
©© 
.
©© 
Title
©© #
.
©©# $
Contains
©©$ ,
(
©©, -
keyword
©©- 4
)
©©4 5
||
™™ 
model
™™ 
.
™™ 
Content
™™ $
.
™™$ %
Contains
™™% -
(
™™- .
keyword
™™. 5
)
™™5 6
)
™™6 7
)
™™7 8
;
™™8 9
var
¨¨ 
data
¨¨ 
=
¨¨ 
await
¨¨ "
InfoProductViewModel
¨¨ 1
.
¨¨1 2

Repository
¨¨2 <
.
¨¨< =!
GetModelListByAsync
¨¨= P
(
¨¨P Q
	predicate
≠≠ 
,
≠≠ 
orderBy
≠≠ "
,
≠≠" #
	direction
≠≠$ -
,
≠≠- .
pageSize
≠≠/ 7
,
≠≠7 8
	pageIndex
≠≠9 B
)
≠≠B C
.
≠≠C D
ConfigureAwait
≠≠D R
(
≠≠R S
false
≠≠S X
)
≠≠X Y
;
≠≠Y Z
return
ÆÆ 
data
ÆÆ 
;
ÆÆ 
}
ØØ 	
[
≤≤ 	
HttpGet
≤≤	 
]
≤≤ 
[
≥≥ 	
Route
≥≥	 
(
≥≥ 
$str
≥≥  
)
≥≥  !
]
≥≥! "
[
¥¥ 	
Route
¥¥	 
(
¥¥ 
$str
¥¥ 7
)
¥¥7 8
]
¥¥8 9
[
µµ 	
Route
µµ	 
(
µµ 
$str
µµ A
)
µµA B
]
µµB C
[
∂∂ 	
Route
∂∂	 
(
∂∂ 
$str
∂∂ W
)
∂∂W X
]
∂∂X Y
public
∑∑ 
async
∑∑ 
Task
∑∑ 
<
∑∑  
RepositoryResponse
∑∑ ,
<
∑∑, -
PaginationModel
∑∑- <
<
∑∑< ="
InfoProductViewModel
∑∑= Q
>
∑∑Q R
>
∑∑R S
>
∑∑S T
Draft
∑∑U Z
(
∑∑Z [
string
∏∏ 
keyword
∏∏ 
=
∏∏ 
null
∏∏ !
,
∏∏! "
int
∏∏# &
?
∏∏& '
pageSize
∏∏( 0
=
∏∏1 2
null
∏∏3 7
,
∏∏7 8
int
∏∏9 <
?
∏∏< =
	pageIndex
∏∏> G
=
∏∏H I
null
∏∏J N
,
∏∏N O
string
∏∏P V
orderBy
∏∏W ^
=
∏∏_ `
$str
∏∏a e
,
ππ 
OrderByDirection
ππ 
	direction
ππ (
=
ππ) *
OrderByDirection
ππ+ ;
.
ππ; <
	Ascending
ππ< E
)
ππE F
{
∫∫ 	

Expression
ªª 
<
ªª 
Func
ªª 
<
ªª 
SiocProduct
ªª '
,
ªª' (
bool
ªª) -
>
ªª- .
>
ªª. /
	predicate
ªª0 9
=
ªª: ;
model
ªª< A
=>
ªªB D
model
ºº 
.
ºº 
Specificulture
ºº  
==
ºº! #
_lang
ºº$ )
&&
ææ 
model
ææ 
.
ææ 
Status
ææ 
!=
ææ 
(
ææ  
int
ææ  #
)
ææ# $
SWStatus
ææ$ ,
.
ææ, -
Deleted
ææ- 4
&&
øø 
(
øø 
string
¿¿ 
.
¿¿  
IsNullOrWhiteSpace
¿¿ %
(
¿¿% &
keyword
¿¿& -
)
¿¿- .
||
¡¡ 
(
¡¡ 
model
¡¡ 
.
¡¡ 
Title
¡¡ 
.
¡¡  
Contains
¡¡  (
(
¡¡( )
keyword
¡¡) 0
)
¡¡0 1
||
¡¡2 4
model
¡¡5 :
.
¡¡: ;
Content
¡¡; B
.
¡¡B C
Contains
¡¡C K
(
¡¡K L
keyword
¡¡L S
)
¡¡S T
)
¡¡T U
)
¬¬ 
;
¬¬ 
var
√√ 
data
√√ 
=
√√ 
await
√√ "
InfoProductViewModel
√√ 1
.
√√1 2

Repository
√√2 <
.
√√< =!
GetModelListByAsync
√√= P
(
√√P Q
	predicate
ƒƒ 
,
ƒƒ 
orderBy
ƒƒ "
,
ƒƒ" #
	direction
ƒƒ$ -
,
ƒƒ- .
pageSize
ƒƒ/ 7
,
ƒƒ7 8
	pageIndex
ƒƒ9 B
)
ƒƒB C
.
ƒƒC D
ConfigureAwait
ƒƒD R
(
ƒƒR S
false
ƒƒS X
)
ƒƒX Y
;
ƒƒY Z
return
≈≈ 
data
≈≈ 
;
≈≈ 
}
∆∆ 	
[
ÕÕ 	
HttpPost
ÕÕ	 
]
ÕÕ 
[
ŒŒ 	
Route
ŒŒ	 
(
ŒŒ 
$str
ŒŒ 
)
ŒŒ 
]
ŒŒ 
public
œœ 
async
œœ 
Task
œœ 
<
œœ  
RepositoryResponse
œœ ,
<
œœ, -!
ApiProductViewModel
œœ- @
>
œœ@ A
>
œœA B
Save
œœC G
(
œœG H
[
œœH I
FromBody
œœI Q
]
œœQ R!
ApiProductViewModel
œœS f
product
œœg n
)
œœn o
{
–– 	
if
—— 
(
—— 
product
—— 
!=
—— 
null
—— 
)
——  
{
““ 
product
”” 
.
”” 
	CreatedBy
”” !
=
””" #
User
””$ (
.
””( )
Identity
””) 1
.
””1 2
Name
””2 6
;
””6 7
var
‘‘ 
result
‘‘ 
=
‘‘ 
await
‘‘ "
product
‘‘# *
.
‘‘* +
SaveModelAsync
‘‘+ 9
(
‘‘9 :
true
‘‘: >
)
‘‘> ?
.
‘‘? @
ConfigureAwait
‘‘@ N
(
‘‘N O
false
‘‘O T
)
‘‘T U
;
‘‘U V
if
’’ 
(
’’ 
result
’’ 
.
’’ 
	IsSucceed
’’ $
)
’’$ %
{
÷÷ 
result
◊◊ 
.
◊◊ 
Data
◊◊ 
.
◊◊  

DetailsUrl
◊◊  *
=
◊◊+ ,
SwCmsHelper
◊◊- 8
.
◊◊8 9
GetRouterUrl
◊◊9 E
(
◊◊E F
$str
◊◊F O
,
◊◊O P
new
◊◊Q T
{
◊◊U V
seoName
◊◊W ^
=
◊◊_ `
product
◊◊a h
.
◊◊h i
SeoName
◊◊i p
}
◊◊q r
,
◊◊r s
Request
◊◊t {
,
◊◊{ |
Url◊◊} Ä
)◊◊Ä Å
;◊◊Å Ç
}
ÿÿ 
return
ŸŸ 
result
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
return
€€ 
new
€€  
RepositoryResponse
€€ )
<
€€) *!
ApiProductViewModel
€€* =
>
€€= >
(
€€> ?
)
€€? @
;
€€@ A
}
‹‹ 	
[
ﬂﬂ 	
HttpPost
ﬂﬂ	 
,
ﬂﬂ 
HttpOptions
ﬂﬂ 
]
ﬂﬂ 
[
‡‡ 	
Route
‡‡	 
(
‡‡ 
$str
‡‡ 
)
‡‡ 
]
‡‡ 
public
·· 
async
·· 
Task
·· 
<
··  
RepositoryResponse
·· ,
<
··, -
SiocProduct
··- 8
>
··8 9
>
··9 :

SaveFields
··; E
(
··E F
string
··F L
id
··M O
,
··O P
[
··Q R
FromBody
··R Z
]
··Z [
List
··[ _
<
··_ `
EntityField
··` k
>
··k l
fields
··m s
)
··s t
{
‚‚ 	
var
„„ 
result
„„ 
=
„„ 
new
„„  
RepositoryResponse
„„ /
<
„„/ 0
SiocProduct
„„0 ;
>
„„; <
(
„„< =
)
„„= >
;
„„> ?
if
‰‰ 
(
‰‰ 
fields
‰‰ 
!=
‰‰ 
null
‰‰ 
)
‰‰ 
{
ÂÂ 
foreach
ÊÊ 
(
ÊÊ 
var
ÊÊ 
property
ÊÊ %
in
ÊÊ& (
fields
ÊÊ) /
)
ÊÊ/ 0
{
ÁÁ 
result
ËË 
=
ËË 
await
ËË "!
ApiProductViewModel
ËË# 6
.
ËË6 7

Repository
ËË7 A
.
ËËA B
UpdateFieldsAsync
ËËB S
(
ËËS T
c
ËËT U
=>
ËËV X
c
ËËY Z
.
ËËZ [
Id
ËË[ ]
==
ËË^ `
id
ËËa c
,
ËËc d
fields
ËËe k
)
ËËk l
.
ËËl m
ConfigureAwait
ËËm {
(
ËË{ |
falseËË| Å
)ËËÅ Ç
;ËËÇ É
}
ÈÈ 
return
ÍÍ 
result
ÍÍ 
;
ÍÍ 
}
ÎÎ 
else
ÏÏ 
{
ÌÌ 
return
ÓÓ 
result
ÓÓ 
;
ÓÓ 
}
ÔÔ 
}
 	
[
ÙÙ 	
HttpPost
ÙÙ	 
,
ÙÙ 
HttpOptions
ÙÙ 
]
ÙÙ 
[
ıı 	
Route
ıı	 
(
ıı 
$str
ıı 
)
ıı 
]
ıı 
public
ˆˆ 
async
ˆˆ 
Task
ˆˆ 
<
ˆˆ 
JObject
ˆˆ !
>
ˆˆ! "
GetList
ˆˆ# *
(
ˆˆ* +
[
ˆˆ+ ,
FromBody
ˆˆ, 4
]
ˆˆ4 5
RequestPaging
ˆˆ5 B
request
ˆˆC J
)
ˆˆJ K
{
˜˜ 	$
ParseRequestPagingDate
¯¯ "
(
¯¯" #
request
¯¯# *
)
¯¯* +
;
¯¯+ ,

Expression
˘˘ 
<
˘˘ 
Func
˘˘ 
<
˘˘ 
SiocProduct
˘˘ '
,
˘˘' (
bool
˘˘) -
>
˘˘- .
>
˘˘. /
	predicate
˘˘0 9
=
˘˘: ;
model
˘˘< A
=>
˘˘B D
model
˙˙ 
.
˙˙ 
Specificulture
˙˙ $
==
˙˙% '
_lang
˙˙( -
&&
˚˚ 
(
˚˚ 
!
˚˚ 
request
˚˚ 
.
˚˚ 
Status
˚˚ #
.
˚˚# $
HasValue
˚˚$ ,
||
˚˚- /
model
˚˚0 5
.
˚˚5 6
Status
˚˚6 <
==
˚˚= ?
(
˚˚@ A
int
˚˚A D
)
˚˚D E
request
˚˚E L
.
˚˚L M
Status
˚˚M S
.
˚˚S T
Value
˚˚T Y
)
˚˚Y Z
&&
¸¸ 
(
¸¸ 
string
¸¸ 
.
¸¸  
IsNullOrWhiteSpace
¸¸ -
(
¸¸- .
request
¸¸. 5
.
¸¸5 6
Keyword
¸¸6 =
)
¸¸= >
||
˝˝ 
(
˝˝ 
model
˛˛ 
.
˛˛ 
Title
˛˛ 
.
˛˛  
Contains
˛˛  (
(
˛˛( )
request
˛˛) 0
.
˛˛0 1
Keyword
˛˛1 8
)
˛˛8 9
||
ÄÄ 
model
ÄÄ 
.
ÄÄ 
Excerpt
ÄÄ $
.
ÄÄ$ %
Contains
ÄÄ% -
(
ÄÄ- .
request
ÄÄ. 5
.
ÄÄ5 6
Keyword
ÄÄ6 =
)
ÄÄ= >
||
ÅÅ 
model
ÅÅ 
.
ÅÅ 
Code
ÅÅ !
.
ÅÅ! "
Contains
ÅÅ" *
(
ÅÅ* +
request
ÅÅ+ 2
.
ÅÅ2 3
Keyword
ÅÅ3 :
)
ÅÅ: ;
)
ÇÇ 
)
ÉÉ 
&&
ÑÑ 
(
ÑÑ 
!
ÑÑ 
request
ÑÑ 
.
ÑÑ 
FromDate
ÑÑ %
.
ÑÑ% &
HasValue
ÑÑ& .
||
ÖÖ 
(
ÖÖ 
model
ÖÖ 
.
ÖÖ 
CreatedDateTime
ÖÖ -
>=
ÖÖ. 0
request
ÖÖ1 8
.
ÖÖ8 9
FromDate
ÖÖ9 A
.
ÖÖA B
Value
ÖÖB G
)
ÖÖG H
)
ÜÜ 
&&
áá 
(
áá 
!
áá 
request
áá 
.
áá 
ToDate
áá #
.
áá# $
HasValue
áá$ ,
||
àà 
(
àà 
model
àà 
.
àà 
CreatedDateTime
àà -
<=
àà. 0
request
àà1 8
.
àà8 9
ToDate
àà9 ?
.
àà? @
Value
àà@ E
)
ààE F
)
ââ 
;
ââ 
switch
ãã 
(
ãã 
request
ãã 
.
ãã 
Key
ãã 
)
ãã  
{
åå 
case
çç 
$str
çç 
:
çç 
var
éé 
fedata
éé 
=
éé  
await
éé! & 
FEProductViewModel
éé' 9
.
éé9 :

Repository
éé: D
.
ééD E!
GetModelListByAsync
ééE X
(
ééX Y
	predicate
ééY b
,
ééb c
request
ééd k
.
éék l
OrderBy
éél s
,
éés t
request
ééu |
.
éé| }
	Directionéé} Ü
,ééÜ á
requestééà è
.ééè ê
PageSizeééê ò
,ééò ô
requestééö °
.éé° ¢
	PageIndexéé¢ ´
)éé´ ¨
.éé¨ ≠
ConfigureAwaitéé≠ ª
(ééª º
falseééº ¡
)éé¡ ¬
;éé¬ √
if
èè 
(
èè 
fedata
èè 
.
èè 
	IsSucceed
èè (
)
èè( )
{
êê 
fedata
ëë 
.
ëë 
Data
ëë #
.
ëë# $
Items
ëë$ )
.
ëë) *
ForEach
ëë* 1
(
ëë1 2
a
ëë2 3
=>
ëë4 6
{
íí 
a
ìì 
.
ìì 

DetailsUrl
ìì (
=
ìì) *
SwCmsHelper
ìì+ 6
.
ìì6 7
GetRouterUrl
ìì7 C
(
ììC D
$str
îî  )
,
îî) *
new
îî+ .
{
îî/ 0
a
îî1 2
.
îî2 3
SeoName
îî3 :
}
îî; <
,
îî< =
Request
îî> E
,
îîE F
Url
îîG J
)
îîJ K
;
îîK L
}
ïï 
)
ïï 
;
ïï 
}
ññ 
return
óó 
JObject
óó "
.
óó" #

FromObject
óó# -
(
óó- .
fedata
óó. 4
)
óó4 5
;
óó5 6
case
òò 
$str
òò 
:
òò 
var
ôô 
bedata
ôô 
=
ôô  
await
ôô! &!
ApiProductViewModel
ôô' :
.
ôô: ;

Repository
ôô; E
.
ôôE F!
GetModelListByAsync
ôôF Y
(
ôôY Z
	predicate
ôôZ c
,
ôôc d
request
ôôe l
.
ôôl m
OrderBy
ôôm t
,
ôôt u
request
ôôv }
.
ôô} ~
	Directionôô~ á
,ôôá à
requestôôâ ê
.ôôê ë
PageSizeôôë ô
,ôôô ö
requestôôõ ¢
.ôô¢ £
	PageIndexôô£ ¨
)ôô¨ ≠
.ôô≠ Æ
ConfigureAwaitôôÆ º
(ôôº Ω
falseôôΩ ¬
)ôô¬ √
;ôô√ ƒ
if
öö 
(
öö 
bedata
öö 
.
öö 
	IsSucceed
öö (
)
öö( )
{
õõ 
bedata
úú 
.
úú 
Data
úú #
.
úú# $
Items
úú$ )
.
úú) *
ForEach
úú* 1
(
úú1 2
a
úú2 3
=>
úú4 6
{
ùù 
a
ûû 
.
ûû 

DetailsUrl
ûû (
=
ûû) *
SwCmsHelper
ûû+ 6
.
ûû6 7
GetRouterUrl
ûû7 C
(
ûûC D
$str
üü  )
,
üü) *
new
üü+ .
{
üü/ 0
a
üü1 2
.
üü2 3
SeoName
üü3 :
}
üü; <
,
üü< =
Request
üü> E
,
üüE F
Url
üüG J
)
üüJ K
;
üüK L
}
†† 
)
†† 
;
†† 
}
°° 
return
¢¢ 
JObject
¢¢ "
.
¢¢" #

FromObject
¢¢# -
(
¢¢- .
bedata
¢¢. 4
)
¢¢4 5
;
¢¢5 6
default
££ 
:
££ 
var
§§ 
data
§§ 
=
§§ 
await
§§ $"
InfoProductViewModel
§§% 9
.
§§9 :

Repository
§§: D
.
§§D E!
GetModelListByAsync
§§E X
(
§§X Y
	predicate
§§Y b
,
§§b c
request
§§d k
.
§§k l
OrderBy
§§l s
,
§§s t
request
§§u |
.
§§| }
	Direction§§} Ü
,§§Ü á
request§§à è
.§§è ê
PageSize§§ê ò
,§§ò ô
request§§ö °
.§§° ¢
	PageIndex§§¢ ´
)§§´ ¨
.§§¨ ≠
ConfigureAwait§§≠ ª
(§§ª º
false§§º ¡
)§§¡ ¬
;§§¬ √
if
•• 
(
•• 
data
•• 
.
•• 
	IsSucceed
•• &
)
••& '
{
¶¶ 
data
ßß 
.
ßß 
Data
ßß !
.
ßß! "
Items
ßß" '
.
ßß' (
ForEach
ßß( /
(
ßß/ 0
a
ßß0 1
=>
ßß2 4
{
®® 
a
©© 
.
©© 

DetailsUrl
©© (
=
©©) *
SwCmsHelper
©©+ 6
.
©©6 7
GetRouterUrl
©©7 C
(
©©C D
$str
™™  )
,
™™) *
new
™™+ .
{
™™/ 0
a
™™1 2
.
™™2 3
SeoName
™™3 :
}
™™; <
,
™™< =
Request
™™> E
,
™™E F
Url
™™G J
)
™™J K
;
™™K L
}
´´ 
)
´´ 
;
´´ 
}
¨¨ 
return
≠≠ 
JObject
≠≠ "
.
≠≠" #

FromObject
≠≠# -
(
≠≠- .
data
≠≠. 2
)
≠≠2 3
;
≠≠3 4
}
ÆÆ 
}
∞∞ 	
}
≥≥ 
}¥¥ »<
PG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiRoleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiRoleController "
:# $
BaseApiController% 6
{ 
	protected 
readonly 
UserManager &
<& '
ApplicationUser' 6
>6 7
_userManager8 D
;D E
	protected 
readonly 
SignInManager (
<( )
ApplicationUser) 8
>8 9
_signInManager: H
;H I
	protected 
readonly 
RoleManager &
<& '
IdentityRole' 3
>3 4
_roleManager5 A
;A B
	protected 
readonly 
IEmailSender '
_emailSender( 4
;4 5
	protected 
readonly 
ILogger "
_logger# *
;* +
public 
ApiRoleController  
(  !
UserManager! ,
<, -
ApplicationUser- <
>< =
userManager> I
,I J
SignInManager 
< 
ApplicationUser )
>) *
signInManager+ 8
,8 9
RoleManager 
< 
IdentityRole $
>$ %
roleManager& 1
,1 2
IEmailSender 
emailSender $
,$ %
ILogger   
<   
ApiRoleController   %
>  % &
logger  ' -
)  - .
{!! 	
_userManager"" 
="" 
userManager"" &
;""& '
_signInManager## 
=## 
signInManager## *
;##* +
_roleManager$$ 
=$$ 
roleManager$$ &
;$$& '
_emailSender%% 
=%% 
emailSender%% &
;%%& '
_logger&& 
=&& 
logger&& 
;&& 
}'' 	
[** 	
HttpGet**	 
(** 
$str** 
)** 
]** 
public++ 
object++ 
Claims++ 
(++ 
)++ 
{,, 	
return.. 
User.. 
... 
Claims.. 
... 
Select.. %
(..% &
c..& '
=>..( *
new// 
{00 
Type11 
=11 
c11 
.11 
Type11 
,11 
Value22 
=22 
c22 
.22 
Value22 
}33 
)33 
;33 
}44 	
[66 	
	Authorize66	 
(66 !
AuthenticationSchemes66 (
=66) *
JwtBearerDefaults66+ <
.66< = 
AuthenticationScheme66= Q
,66Q R
Roles66S X
=66Y Z
$str66[ g
)66g h
]66h i
[77 	
HttpGet77	 
,77 
HttpPost77 
]77 
[88 	
Route88	 
(88 
$str88 
)88 
]88 
public99 
async99 
Task99 
<99 
RepositoryResponse99 ,
<99, -
List99- 1
<991 2
RoleViewModel992 ?
>99? @
>99@ A
>99A B
GetList99C J
(99J K
)99K L
{:: 	
return;; 
await;; 
RoleViewModel;; &
.;;& '

Repository;;' 1
.;;1 2
GetModelListAsync;;2 C
(;;C D
);;D E
;;;E F
}<< 	
[>> 	
	Authorize>>	 
(>> !
AuthenticationSchemes>> (
=>>) *
JwtBearerDefaults>>+ <
.>>< = 
AuthenticationScheme>>= Q
,>>Q R
Roles>>S X
=>>Y Z
$str>>[ g
)>>g h
]>>h i
[?? 	
HttpPost??	 
]?? 
[@@ 	
Route@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
asyncAA 
TaskAA 
<AA 
RepositoryResponseAA ,
<AA, -
IdentityRoleAA- 9
>AA9 :
>AA: ;
SaveAA< @
(AA@ A
[AAA B
FromBodyAAB J
]AAJ K
stringAAK Q
nameAAR V
)AAV W
{BB 	
varCC 
roleCC 
=CC 
newCC 
IdentityRoleCC '
(CC' (
)CC( )
{DD 
NameEE 
=EE 
nameEE 
,EE 
IdFF 
=FF 
GuidFF 
.FF 
NewGuidFF !
(FF! "
)FF" #
.FF# $
ToStringFF$ ,
(FF, -
)FF- .
}GG 
;GG 
varII 
resultII 
=II 
awaitII 
_roleManagerII +
.II+ ,
CreateAsyncII, 7
(II7 8
roleII8 <
)II< =
;II= >
returnKK 
newKK 
RepositoryResponseKK )
<KK) *
IdentityRoleKK* 6
>KK6 7
(KK7 8
)KK8 9
{LL 
	IsSucceedMM 
=MM 
resultMM "
.MM" #
	SucceededMM# ,
,MM, -
DataNN 
=NN 
roleNN 
,NN 
ErrorsOO 
=OO 
resultOO 
.OO  
ErrorsOO  &
?OO& '
.OO' (
SelectOO( .
(OO. /
eOO/ 0
=>OO1 3
$"OO4 6
{OO6 7
eOO7 8
.OO8 9
CodeOO9 =
}OO= >
: OO> @
{OO@ A
eOOA B
.OOB C
DescriptionOOC N
}OON O
"OOO P
)OOP Q
.OOQ R
ToListOOR X
(OOX Y
)OOY Z
}PP 
;PP 
}QQ 	
[SS 	
	AuthorizeSS	 
(SS !
AuthenticationSchemesSS (
=SS) *
JwtBearerDefaultsSS+ <
.SS< = 
AuthenticationSchemeSS= Q
,SSQ R
RolesSSS X
=SSY Z
$strSS[ g
)SSg h
]SSh i
[TT 	
HttpPostTT	 
]TT 
[UU 	
RouteUU	 
(UU 
$strUU 
)UU 
]UU 
publicVV 
asyncVV 
TaskVV 
<VV 
RepositoryResponseVV ,
<VV, -
AspNetRolesVV- 8
>VV8 9
>VV9 :
DeleteVV; A
(VVA B
[VVB C
FromBodyVVC K
]VVK L
stringVVM S
nameVVT X
)VVX Y
{WW 	
ifXX 
(XX 
nameXX 
!=XX 
$strXX $
)XX$ %
{YY 
var[[ 
result[[ 
=[[ 
await[[ "
RoleViewModel[[# 0
.[[0 1

Repository[[1 ;
.[[; <
RemoveModelAsync[[< L
([[L M
r[[M N
=>[[O Q
r[[R S
.[[S T
Name[[T X
==[[Y [
name[[\ `
)[[` a
;[[a b
return\\ 
result\\ 
;\\ 
}]] 
else^^ 
{__ 
return`` 
new`` 
RepositoryResponse`` -
<``- .
AspNetRoles``. 9
>``9 :
(``: ;
)``; <
{aa 
}bb 
;bb 
}cc 
}dd 	
}gg 
}hh äd
TG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiTemplateController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
,M N
Roles 
= 
$str 
) 
] 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str #
)# $
]$ %
public 

class !
ApiTemplateController &
:' (
BaseApiController 
{ 
public !
ApiTemplateController $
($ %
)% &
{ 	
}   	
[## 	
HttpGet##	 
]## 
[$$ 	
Route$$	 
($$ 
$str$$ ?
)$$? @
]$$@ A
[%% 	
Route%%	 
(%% 
$str%% :
)%%: ;
]%%; <
public&& 
async&& 
Task&& 
<&& 
RepositoryResponse&& ,
<&&, - 
ApiTemplateViewModel&&- A
>&&A B
>&&B C
DetailsAsync&&D P
(&&P Q
string&&Q W
viewType&&X `
,&&` a
int&&b e
themeId&&f m
,&&m n
string&&o u

folderType	&&v Ä
,
&&Ä Å
int
&&Ç Ö
?
&&Ö Ü
id
&&á â
)
&&â ä
{'' 	
if(( 
((( 
id(( 
.(( 
HasValue(( 
)(( 
{)) 
var** 
beResult** 
=** 
await** $ 
ApiTemplateViewModel**% 9
.**9 :

Repository**: D
.**D E
GetSingleModelAsync**E X
(**X Y
model++ 
=>++ 
model++ "
.++" #
Id++# %
==++& (
id++) +
&&++, .
model++/ 4
.++4 5

TemplateId++5 ?
==++@ B
themeId++C J
)++J K
.++K L
ConfigureAwait++L Z
(++Z [
false++[ `
)++` a
;++a b
return,, 
beResult,, 
;,,  
}-- 
else.. 
{// 
var00 
getTheme00 
=00 
await00 $
InfoThemeViewModel00% 7
.007 8

Repository008 B
.00B C
GetSingleModelAsync00C V
(00V W
t00W X
=>00Y [
t00\ ]
.00] ^
Id00^ `
==00a c
themeId00d k
)00k l
;00l m
if11 
(11 
getTheme11 
.11 
	IsSucceed11 &
)11& '
{22 
var33 
model33 
=33 
new33  #
SiocTemplate33$ 0
(330 1
)331 2
{44 
Status55 
=55  
(55! "
int55" %
)55% &
SWStatus55& .
.55. /
Preview55/ 6
,556 7

TemplateId66 "
=66# $
themeId66% ,
,66, -
TemplateName77 $
=77% &
getTheme77' /
.77/ 0
Data770 4
.774 5
Name775 9
,779 :
	Extension88 !
=88" #
SWCmsConstants88$ 2
.882 3

Parameters883 =
.88= >
TemplateExtension88> O
,88O P

FolderType99 "
=99# $

folderType99% /
}:: 
;:: 
RepositoryResponse<< &
<<<& ' 
ApiTemplateViewModel<<' ;
><<; <
result<<= C
=<<D E
new<<F I
RepositoryResponse<<J \
<<<\ ] 
ApiTemplateViewModel<<] q
><<q r
(<<r s
)<<s t
{== 
	IsSucceed>> !
=>>" #
true>>$ (
,>>( )
Data?? 
=?? 
await?? $ 
ApiTemplateViewModel??% 9
.??9 :
	InitAsync??: C
(??C D
model??D I
)??I J
}@@ 
;@@ 
resultAA 
.AA 
DataAA 
.AA  
SpecificultureAA  .
=AA/ 0
_langAA1 6
;AA6 7
returnBB 
resultBB !
;BB! "
}CC 
elseDD 
{EE 
returnFF 
newFF 
RepositoryResponseFF 1
<FF1 2 
ApiTemplateViewModelFF2 F
>FFF G
(FFG H
)FFH I
;FFI J
}GG 
}HH 
}II 	
[LL 	
HttpGetLL	 
]LL 
[MM 	
RouteMM	 
(MM 
$strMM 
)MM 
]MM 
publicNN 
asyncNN 
TaskNN 
<NN 
RepositoryResponseNN ,
<NN, -
SiocTemplateNN- 9
>NN9 :
>NN: ;
DeleteAsyncNN< G
(NNG H
intNNH K
idNNL N
)NNN O
{OO 	
varPP 
getPagePP 
=PP 
awaitPP  
ApiTemplateViewModelPP  4
.PP4 5

RepositoryPP5 ?
.PP? @
GetSingleModelAsyncPP@ S
(PPS T
modelQQ 
=>QQ 
modelQQ 
.QQ 
IdQQ !
==QQ" $
idQQ% '
)QQ' (
;QQ( )
ifRR 
(RR 
getPageRR 
.RR 
	IsSucceedRR !
)RR! "
{SS 
returnUU 
awaitUU 
getPageUU $
.UU$ %
DataUU% )
.UU) *
RemoveModelAsyncUU* :
(UU: ;
trueUU; ?
)UU? @
;UU@ A
}VV 
elseWW 
{XX 
returnYY 
newYY 
RepositoryResponseYY -
<YY- .
SiocTemplateYY. :
>YY: ;
(YY; <
)YY< =
{ZZ 
	IsSucceed[[ 
=[[ 
false[[  %
}\\ 
;\\ 
}]] 
}^^ 	
[ff 	
HttpPostff	 
,ff 
HttpOptionsff 
]ff 
[gg 	
Routegg	 
(gg 
$strgg 
)gg 
]gg 
publichh 
asynchh 
Taskhh 
<hh 
RepositoryResponsehh ,
<hh, - 
ApiTemplateViewModelhh- A
>hhA B
>hhB C
SavehhD H
(hhH I
[ii 
FromBodyii 
]ii  
ApiTemplateViewModelii +
modelii, 1
)ii1 2
{jj 	
ifkk 
(kk 
modelkk 
!=kk 
nullkk 
)kk 
{ll 
varmm 
resultmm 
=mm 
awaitmm "
modelmm# (
.mm( )
SaveModelAsyncmm) 7
(mm7 8
truemm8 <
)mm< =
.mm= >
ConfigureAwaitmm> L
(mmL M
falsemmM R
)mmR S
;mmS T
returnnn 
resultnn 
;nn 
}oo 
returnpp 
newpp 
RepositoryResponsepp )
<pp) * 
ApiTemplateViewModelpp* >
>pp> ?
(pp? @
)pp@ A
;ppA B
}qq 	
[tt 	
HttpPosttt	 
,tt 
HttpOptionstt 
]tt 
[uu 	
Routeuu	 
(uu 
$struu 
)uu 
]uu 
publicvv 
asyncvv 
Taskvv 
<vv 
RepositoryResponsevv ,
<vv, -
SiocTemplatevv- 9
>vv9 :
>vv: ;

SaveFieldsvv< F
(vvF G
intvvG J
idvvK M
,vvM N
[vvO P
FromBodyvvP X
]vvX Y
ListvvY ]
<vv] ^
EntityFieldvv^ i
>vvi j
fieldsvvk q
)vvq r
{ww 	
ifxx 
(xx 
fieldsxx 
!=xx 
nullxx 
)xx 
{yy 
varzz 
resultzz 
=zz 
newzz  
RepositoryResponsezz! 3
<zz3 4
SiocTemplatezz4 @
>zz@ A
(zzA B
)zzB C
{zzD E
	IsSucceedzzF O
=zzP Q
truezzR V
}zzW X
;zzX Y
foreach{{ 
({{ 
var{{ 
property{{ %
in{{& (
fields{{) /
){{/ 0
{|| 
if}} 
(}} 
result}} 
.}} 
	IsSucceed}} (
)}}( )
{~~ 
result 
=  
await! &!
InfoTemplateViewModel' <
.< =

Repository= G
.G H
UpdateFieldsAsyncH Y
(Y Z
cZ [
=>\ ^
c_ `
.` a
Ida c
==d f
idg i
,i j
fieldsk q
)q r
.r s
ConfigureAwait	s Å
(
Å Ç
false
Ç á
)
á à
;
à â
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
break
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÜÜ 
return
áá 
result
áá 
;
áá 
}
àà 
return
ââ 
new
ââ  
RepositoryResponse
ââ )
<
ââ) *
SiocTemplate
ââ* 6
>
ââ6 7
(
ââ7 8
)
ââ8 9
;
ââ9 :
}
ää 	
[
çç 	
HttpPost
çç	 
,
çç 
HttpOptions
çç 
]
çç 
[
éé 	
Route
éé	 
(
éé 
$str
éé 
)
éé  
]
éé  !
public
èè 
async
èè 
Task
èè 
<
èè  
RepositoryResponse
èè ,
<
èè, -
PaginationModel
èè- <
<
èè< ="
ApiTemplateViewModel
èè= Q
>
èèQ R
>
èèR S
>
èèS T
GetList
èèU \
(
èè\ ]
int
êê 
themeId
êê 
,
êê 
[
ëë 
FromBody
ëë 
]
ëë 
RequestPaging
ëë #
request
ëë$ +
)
íí 
{
ìì 	

Expression
îî 
<
îî 
Func
îî 
<
îî 
SiocTemplate
îî (
,
îî( )
bool
îî* .
>
îî. /
>
îî/ 0
	predicate
îî1 :
=
îî; <
model
îî= B
=>
îîC E
model
ïï 
.
ïï 

TemplateId
ïï  
==
ïï! #
themeId
ïï$ +
&&
ññ 
(
ññ 
string
ññ 
.
ññ  
IsNullOrWhiteSpace
ññ .
(
ññ. /
request
ññ/ 6
.
ññ6 7
Key
ññ7 :
)
ññ: ;
||
óó 
(
òò 
model
ôô 
.
ôô 

FolderType
ôô (
==
ôô) +
(
ôô, -
request
ôô- 4
.
ôô4 5
Key
ôô5 8
)
ôô8 9
)
öö 
)
öö 
&&
õõ 
(
õõ 
string
õõ 
.
õõ  
IsNullOrWhiteSpace
õõ -
(
õõ- .
request
õõ. 5
.
õõ5 6
Keyword
õõ6 =
)
õõ= >
||
úú 
(
ùù 
model
ûû 
.
ûû 
FileName
ûû '
.
ûû' (
Contains
ûû( 0
(
ûû0 1
request
ûû1 8
.
ûû8 9
Keyword
ûû9 @
)
ûû@ A
||
üü 
model
üü  
.
üü  !

FileFolder
üü! +
.
üü+ ,
Contains
üü, 4
(
üü4 5
request
üü5 <
.
üü< =
Keyword
üü= D
)
üüD E
||
†† 
model
††  
.
††  !

FolderType
††! +
==
††, .
request
††/ 6
.
††6 7
Keyword
††7 >
)
°° 
)
°° 
;
°° 
var
££ 
data
££ 
=
££ 
await
££ "
ApiTemplateViewModel
££ 1
.
££1 2

Repository
££2 <
.
££< =!
GetModelListByAsync
££= P
(
££P Q
	predicate
££Q Z
,
££Z [
request
££\ c
.
££c d
OrderBy
££d k
,
££k l
request
££m t
.
££t u
	Direction
££u ~
,
££~ 
request££Ä á
.££á à
PageSize££à ê
,££ê ë
request££í ô
.££ô ö
	PageIndex££ö £
)£££ §
.££§ •
ConfigureAwait££• ≥
(££≥ ¥
false££¥ π
)££π ∫
;££∫ ª
return
•• 
data
•• 
;
•• 
}
¶¶ 	
}
©© 
}™™ àz
QG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiThemeController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
,M N
Roles 
= 
$str 
) 
] 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str  
)  !
]! "
public 

class 
ApiThemeController #
:$ %
BaseApiController 
{ 
public 
ApiThemeController !
(! "
)" #
{   	
}!! 	
[&& 	
HttpGet&&	 
]&& 
['' 	
Route''	 
('' 
$str'' 
)'' 
]'' 
public(( 
async(( 
Task(( 
<(( 
RepositoryResponse(( ,
<((, -
	SiocTheme((- 6
>((6 7
>((7 8
DeleteAsync((9 D
(((D E
int((E H
id((I K
)((K L
{)) 	
var** 
getPage** 
=** 
await** 
ApiThemeViewModel**  1
.**1 2

Repository**2 <
.**< =
GetSingleModelAsync**= P
(**P Q
model++ 
=>++ 
model++ 
.++ 
Id++ !
==++" $
id++% '
)++' (
;++( )
if,, 
(,, 
getPage,, 
.,, 
	IsSucceed,, !
),,! "
{-- 
return// 
await// 
getPage// $
.//$ %
Data//% )
.//) *
RemoveModelAsync//* :
(//: ;
true//; ?
)//? @
;//@ A
}00 
else11 
{22 
return33 
new33 
RepositoryResponse33 -
<33- .
	SiocTheme33. 7
>337 8
(338 9
)339 :
{44 
	IsSucceed55 
=55 
false55  %
}66 
;66 
}77 
}88 	
[;; 	
HttpGet;;	 
];; 
[<< 	
Route<<	 
(<< 
$str<< (
)<<( )
]<<) *
[== 	
Route==	 
(== 
$str== #
)==# $
]==$ %
public>> 
async>> 
Task>> 
<>> 
JObject>> !
>>>! "
	BEDetails>># ,
(>>, -
string>>- 3
viewType>>4 <
,>>< =
int>>> A
?>>A B
id>>C E
)>>E F
{?? 	
switch@@ 
(@@ 
viewType@@ 
)@@ 
{AA 
caseBB 
$strBB 
:BB 
ifCC 
(CC 
idCC 
.CC 
HasValueCC #
)CC# $
{DD 
varEE 
beResultEE $
=EE% &
awaitEE' ,
ApiThemeViewModelEE- >
.EE> ?

RepositoryEE? I
.EEI J
GetSingleModelAsyncEEJ ]
(EE] ^
modelEE^ c
=>EEd f
modelEEg l
.EEl m
IdEEm o
==EEp r
idEEs u
)EEu v
.EEv w
ConfigureAwait	EEw Ö
(
EEÖ Ü
false
EEÜ ã
)
EEã å
;
EEå ç
beResultFF  
.FF  !
DataFF! %
.FF% &
SpecificultureFF& 4
=FF5 6
_langFF7 <
;FF< =
beResultGG  
.GG  !
DataGG! %
.GG% &
	IsActivedGG& /
=GG0 1&
GlobalConfigurationServiceGG2 L
.GGL M
InstanceGGM U
.GGU V
GetLocalIntGGV a
(GGa b
SWCmsConstantsGGb p
.GGp q!
ConfigurationKeyword	GGq Ö
.
GGÖ Ü
ThemeId
GGÜ ç
,
GGç é
_lang
GGè î
,
GGî ï
$num
GGñ ó
)
GGó ò
==
GGô õ
beResult
GGú §
.
GG§ •
Data
GG• ©
.
GG© ™
Id
GG™ ¨
;
GG¨ ≠
returnHH 
JObjectHH &
.HH& '

FromObjectHH' 1
(HH1 2
beResultHH2 :
)HH: ;
;HH; <
}II 
elseJJ 
{KK 
varLL 
modelLL !
=LL" #
newLL$ '
	SiocThemeLL( 1
(LL1 2
)LL2 3
{LL4 5
StatusLL6 <
=LL= >
(LL? @
intLL@ C
)LLC D
SWStatusLLD L
.LLL M
PreviewLLM T
}LLU V
;LLV W
RepositoryResponseNN *
<NN* +
ApiThemeViewModelNN+ <
>NN< =
resultNN> D
=NNE F
newNNG J
RepositoryResponseNNK ]
<NN] ^
ApiThemeViewModelNN^ o
>NNo p
(NNp q
)NNq r
{OO 
	IsSucceedPP %
=PP& '
truePP( ,
,PP, -
DataQQ  
=QQ! "
awaitQQ# (
ApiThemeViewModelQQ) :
.QQ: ;
	InitAsyncQQ; D
(QQD E
modelQQE J
)QQJ K
}RR 
;RR 
resultSS 
.SS 
DataSS #
.SS# $
SpecificultureSS$ 2
=SS3 4
_langSS5 :
;SS: ;
returnTT 
JObjectTT &
.TT& '

FromObjectTT' 1
(TT1 2
resultTT2 8
)TT8 9
;TT9 :
}UU 
defaultVV 
:VV 
ifWW 
(WW 
idWW 
.WW 
HasValueWW #
)WW# $
{XX 
varYY 
beResultYY $
=YY% &
awaitYY' ,
ApiThemeViewModelYY- >
.YY> ?

RepositoryYY? I
.YYI J
GetSingleModelAsyncYYJ ]
(YY] ^
modelYY^ c
=>YYd f
modelYYg l
.YYl m
IdYYm o
==YYp r
idYYs u
)YYu v
.YYv w
ConfigureAwait	YYw Ö
(
YYÖ Ü
false
YYÜ ã
)
YYã å
;
YYå ç
beResultZZ  
.ZZ  !
DataZZ! %
.ZZ% &
SpecificultureZZ& 4
=ZZ5 6
_langZZ7 <
;ZZ< =
beResult[[  
.[[  !
Data[[! %
.[[% &
	IsActived[[& /
=[[0 1&
GlobalConfigurationService[[2 L
.[[L M
Instance[[M U
.[[U V
GetLocalInt[[V a
([[a b
SWCmsConstants[[b p
.[[p q!
ConfigurationKeyword	[[q Ö
.
[[Ö Ü
ThemeId
[[Ü ç
,
[[ç é
_lang
[[è î
,
[[î ï
$num
[[ñ ó
)
[[ó ò
==
[[ô õ
beResult
[[ú §
.
[[§ •
Data
[[• ©
.
[[© ™
Id
[[™ ¨
;
[[¨ ≠
return\\ 
JObject\\ &
.\\& '

FromObject\\' 1
(\\1 2
beResult\\2 :
)\\: ;
;\\; <
}]] 
else^^ 
{__ 
var`` 
model`` !
=``" #
new``$ '
	SiocTheme``( 1
(``1 2
)``2 3
;``3 4
RepositoryResponseaa *
<aa* +
ApiThemeViewModelaa+ <
>aa< =
resultaa> D
=aaE F
newaaG J
RepositoryResponseaaK ]
<aa] ^
ApiThemeViewModelaa^ o
>aao p
(aap q
)aaq r
{bb 
	IsSucceedcc %
=cc& '
truecc( ,
,cc, -
Datadd  
=dd! "
newdd# &
ApiThemeViewModeldd' 8
(dd8 9
modeldd9 >
)dd> ?
{dd@ A
StatusddB H
=ddI J
SWStatusddK S
.ddS T
PreviewddT [
}dd\ ]
}ee 
;ee 
resultff 
.ff 
Dataff #
.ff# $
Specificultureff$ 2
=ff3 4
_langff5 :
;ff: ;
returngg 
JObjectgg &
.gg& '

FromObjectgg' 1
(gg1 2
resultgg2 8
)gg8 9
;gg9 :
}hh 
}ii 
}jj 	
[pp 	
HttpPostpp	 
,pp 
HttpOptionspp 
]pp 
[qq 	
Routeqq	 
(qq 
$strqq 
)qq 
]qq 
publicrr 
asyncrr 
Taskrr 
<rr 
RepositoryResponserr ,
<rr, -
ApiThemeViewModelrr- >
>rr> ?
>rr? @
SaverrA E
(rrE F
[rrF G
FromBodyrrG O
]rrO P
ApiThemeViewModelrrP a
modelrrb g
)rrg h
{ss 	
iftt 
(tt 
modeltt 
!=tt 
nulltt 
)tt 
{uu 
modelvv 
.vv 
	CreatedByvv 
=vv  !
Uservv" &
.vv& '
Claimsvv' -
.vv- .
ToListvv. 4
(vv4 5
)vv5 6
.vv6 7
Findvv7 ;
(vv; <
cvv< =
=>vv= ?
cvv? @
.vv@ A
TypevvA E
==vvE G
$strvvG Q
)vvQ R
?vvR S
.vvS T
ValuevvT Y
;vvY Z
varww 
resultww 
=ww 
awaitww "
modelww# (
.ww( )
SaveModelAsyncww) 7
(ww7 8
trueww8 <
)ww< =
.ww= >
ConfigureAwaitww> L
(wwL M
falsewwM R
)wwR S
;wwS T
returnxx 
resultxx 
;xx 
}yy 
returnzz 
newzz 
RepositoryResponsezz )
<zz) *
ApiThemeViewModelzz* ;
>zz; <
(zz< =
)zz= >
;zz> ?
}{{ 	
[~~ 	
HttpPost~~	 
,~~ 
HttpOptions~~ 
]~~ 
[ 	
Route	 
( 
$str 
) 
] 
public
ÄÄ 
async
ÄÄ 
Task
ÄÄ 
<
ÄÄ  
RepositoryResponse
ÄÄ ,
<
ÄÄ, -
	SiocTheme
ÄÄ- 6
>
ÄÄ6 7
>
ÄÄ7 8

SaveFields
ÄÄ9 C
(
ÄÄC D
int
ÄÄD G
id
ÄÄH J
,
ÄÄJ K
[
ÄÄL M
FromBody
ÄÄM U
]
ÄÄU V
List
ÄÄV Z
<
ÄÄZ [
EntityField
ÄÄ[ f
>
ÄÄf g
fields
ÄÄh n
)
ÄÄn o
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
fields
ÇÇ 
!=
ÇÇ 
null
ÇÇ 
)
ÇÇ 
{
ÉÉ 
var
ÑÑ 
result
ÑÑ 
=
ÑÑ 
new
ÑÑ   
RepositoryResponse
ÑÑ! 3
<
ÑÑ3 4
	SiocTheme
ÑÑ4 =
>
ÑÑ= >
(
ÑÑ> ?
)
ÑÑ? @
{
ÑÑA B
	IsSucceed
ÑÑC L
=
ÑÑM N
true
ÑÑO S
}
ÑÑT U
;
ÑÑU V
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
property
ÖÖ %
in
ÖÖ& (
fields
ÖÖ) /
)
ÖÖ/ 0
{
ÜÜ 
if
áá 
(
áá 
result
áá 
.
áá 
	IsSucceed
áá (
)
áá( )
{
àà 
result
ââ 
=
ââ  
await
ââ! & 
InfoThemeViewModel
ââ' 9
.
ââ9 :

Repository
ââ: D
.
ââD E
UpdateFieldsAsync
ââE V
(
ââV W
c
ää 
=>
ää  
c
ää! "
.
ää" #
Id
ää# %
==
ää& (
id
ää) +
,
ää+ ,
fields
ää- 3
)
ää3 4
.
ää4 5
ConfigureAwait
ää5 C
(
ääC D
false
ääD I
)
ääI J
;
ääJ K
}
ãã 
else
åå 
{
çç 
break
éé 
;
éé 
}
èè 
}
ëë 
return
íí 
result
íí 
;
íí 
}
ìì 
return
îî 
new
îî  
RepositoryResponse
îî )
<
îî) *
	SiocTheme
îî* 3
>
îî3 4
(
îî4 5
)
îî5 6
;
îî6 7
}
ïï 	
[
òò 	
HttpPost
òò	 
,
òò 
HttpOptions
òò 
]
òò 
[
ôô 	
Route
ôô	 
(
ôô 
$str
ôô 
)
ôô 
]
ôô 
[
öö 	
Route
öö	 
(
öö 
$str
öö 
)
öö 
]
öö 
public
õõ 
async
õõ 
Task
õõ 
<
õõ  
RepositoryResponse
õõ ,
<
õõ, -
PaginationModel
õõ- <
<
õõ< = 
InfoThemeViewModel
õõ= O
>
õõO P
>
õõP Q
>
õõQ R
GetList
õõS Z
(
õõZ [
[
õõ[ \
FromBody
õõ\ d
]
õõd e
RequestPaging
õõf s
request
õõt {
,
õõ{ |
intõõ} Ä
?õõÄ Å
levelõõÇ á
=õõà â
$numõõä ã
)õõã å
{
úú 	$
ParseRequestPagingDate
ùù "
(
ùù" #
request
ùù# *
)
ùù* +
;
ùù+ ,

Expression
ûû 
<
ûû 
Func
ûû 
<
ûû 
	SiocTheme
ûû %
,
ûû% &
bool
ûû' +
>
ûû+ ,
>
ûû, -
	predicate
ûû. 7
=
ûû8 9
model
ûû: ?
=>
ûû@ B
string
üü 
.
üü  
IsNullOrWhiteSpace
üü )
(
üü) *
request
üü* 1
.
üü1 2
Keyword
üü2 9
)
üü9 :
||
†† 
(
†† 
model
†† 
.
†† 
Name
†† "
.
††" #
Contains
††# +
(
††+ ,
request
††, 3
.
††3 4
Keyword
††4 ;
)
††; <
)
°° 
&&
¢¢ 
(
¢¢ 
!
¢¢ 
request
¢¢ 
.
¢¢ 
FromDate
¢¢ %
.
¢¢% &
HasValue
¢¢& .
||
££ 
(
££ 
model
££ 
.
££ 
CreatedDateTime
££ -
>=
££. 0
request
££1 8
.
££8 9
FromDate
££9 A
.
££A B
Value
££B G
)
££G H
)
§§ 
&&
•• 
(
•• 
!
•• 
request
•• 
.
•• 
ToDate
•• #
.
••# $
HasValue
••$ ,
||
¶¶ 
(
¶¶ 
model
¶¶ 
.
¶¶ 
CreatedDateTime
¶¶ -
<=
¶¶. 0
request
¶¶1 8
.
¶¶8 9
ToDate
¶¶9 ?
.
¶¶? @
Value
¶¶@ E
)
¶¶E F
)
ßß 
;
®® 
var
™™ 
data
™™ 
=
™™ 
await
™™  
InfoThemeViewModel
™™ /
.
™™/ 0

Repository
™™0 :
.
™™: ;!
GetModelListByAsync
™™; N
(
™™N O
	predicate
´´ 
,
´´ 
request
´´ "
.
´´" #
OrderBy
´´# *
,
´´* +
request
´´, 3
.
´´3 4
	Direction
´´4 =
,
´´= >
request
¨¨ 
.
¨¨ 
PageSize
¨¨  
,
¨¨  !
request
¨¨" )
.
¨¨) *
	PageIndex
¨¨* 3
)
¨¨3 4
.
¨¨4 5
ConfigureAwait
¨¨5 C
(
¨¨C D
false
¨¨D I
)
¨¨I J
;
¨¨J K
return
≠≠ 
data
≠≠ 
;
≠≠ 
}
ÆÆ 	
}
±± 
}≤≤ Œ´
PG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\BaseApiControoler.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
public 

class 
BaseApiController "
:# $

Controller% /
{ 
	protected   
string   
_domain    
;    !
	protected%% 
string%% 
_lang%% 
;%% 
public** 
BaseApiController**  
(**  !
)**! "
{++ 	
},, 	
public66 
override66 "
BadRequestObjectResult66 .

BadRequest66/ 9
(669 : 
ModelStateDictionary66: N

modelState66O Y
)66Y Z
{77 	
List88 
<88 
string88 
>88 
errors88 
=88  !
new88" %
List88& *
<88* +
string88+ 1
>881 2
(882 3
)883 4
;884 5
foreach99 
(99 
ModelStateEntry99 $
state99% *
in99+ -
ViewData99. 6
.996 7

ModelState997 A
.99A B
Values99B H
)99H I
{:: 
foreach;; 
(;; 

ModelError;; #
error;;$ )
in;;* ,
state;;- 2
.;;2 3
Errors;;3 9
);;9 :
{<< 
errors== 
.== 
Add== 
(== 
error== $
.==$ %
ErrorMessage==% 1
)==1 2
;==2 3
}>> 
}?? 
return@@ 
base@@ 
.@@ 

BadRequest@@ "
(@@" #

modelState@@# -
)@@- .
;@@. /
}AA 	
publicKK 
overrideKK "
BadRequestObjectResultKK .

BadRequestKK/ 9
(KK9 :
objectKK: @
errorKKA F
)KKF G
{LL 	
returnMM 
baseMM 
.MM 

BadRequestMM "
(MM" #
errorMM# (
)MM( )
;MM) *
}NN 	
publicXX 
overrideXX  
NotFoundObjectResultXX ,
NotFoundXX- 5
(XX5 6
objectXX6 <
valueXX= B
)XXB C
{YY 	
returnZZ 
baseZZ 
.ZZ 
NotFoundZZ  
(ZZ  !
valueZZ! &
)ZZ& '
;ZZ' (
}[[ 	
publicaa 
overrideaa 
voidaa 
OnActionExecutingaa .
(aa. /"
ActionExecutingContextaa/ E
contextaaF M
)aaM N
{bb 	
GetLanguagecc 
(cc 
)cc 
;cc 
basedd 
.dd 
OnActionExecutingdd "
(dd" #
contextdd# *
)dd* +
;dd+ ,
}ee 	
	protectedmm 
IActionResultmm 
GetErrorResultmm  .
(mm. /
stringmm/ 5
responseKeymm6 A
,mmA B
stringmmC I
errorMsgmmJ R
)mmR S
{nn 	
varoo 
resultoo 
=oo 
	ApiHelperoo "
<oo" #
stringoo# )
>oo) *
.oo* +
	GetResultoo+ 4
(oo4 5
$numoo5 6
,oo6 7
stringoo8 >
.oo> ?
Emptyoo? D
,ooD E
responseKeyooF Q
,ooQ R
nullooS W
)ooW X
;ooX Y
returnpp 

BadRequestpp 
(pp 
resultpp $
)pp$ %
;pp% &
}qq 	
	protectedvv 
voidvv 
GetLanguagevv "
(vv" #
)vv# $
{ww 	
_langxx 
=xx 
	RouteDataxx 
?xx 
.xx 
Valuesxx %
[xx% &
$strxx& /
]xx/ 0
!=xx1 3
nullxx4 8
?xx9 :
	RouteDataxx; D
.xxD E
ValuesxxE K
[xxK L
$strxxL U
]xxU V
.xxV W
ToStringxxW _
(xx_ `
)xx` a
:xxb c&
GlobalConfigurationServicexxd ~
.xx~ 
Instance	xx á
.
xxá à
CmsConfigurations
xxà ô
.
xxô ö
Language
xxö ¢
;
xx¢ £
ViewBagyy 
.yy 
cultureyy 
=yy 
_langyy #
;yy# $
_domain{{ 
={{ 
string{{ 
.{{ 
Format{{ #
({{# $
$str{{$ /
,{{/ 0
Request{{1 8
.{{8 9
Scheme{{9 ?
,{{? @
Request{{A H
.{{H I
Host{{I M
){{M N
;{{N O
}|| 	
	protected
ÑÑ 
IActionResult
ÑÑ 
GetSuccessResult
ÑÑ  0
<
ÑÑ0 1
TResult
ÑÑ1 8
>
ÑÑ8 9
(
ÑÑ9 :
TResult
ÑÑ: A
data
ÑÑB F
)
ÑÑF G
{
ÖÖ 	
var
ÜÜ 
result
ÜÜ 
=
ÜÜ 
	ApiHelper
ÜÜ "
<
ÜÜ" #
TResult
ÜÜ# *
>
ÜÜ* +
.
ÜÜ+ ,
	GetResult
ÜÜ, 5
(
ÜÜ5 6
$num
ÜÜ6 7
,
ÜÜ7 8
data
ÜÜ9 =
,
ÜÜ= >
nameof
ÜÜ? E
(
ÜÜE F
Enums
ÜÜF K
.
ÜÜK L
ResponseKey
ÜÜL W
.
ÜÜW X
OK
ÜÜX Z
)
ÜÜZ [
,
ÜÜ[ \
null
ÜÜ] a
)
ÜÜa b
;
ÜÜb c
return
áá 
Ok
áá 
(
áá 
result
áá 
)
áá 
;
áá 
}
àà 	
	protected
ãã 
void
ãã $
ParseRequestPagingDate
ãã -
(
ãã- .
RequestPaging
ãã. ;
request
ãã< C
)
ããC D
{
åå 	
request
çç 
.
çç 
FromDate
çç 
=
çç 
request
çç &
.
çç& '
FromDate
çç' /
.
çç/ 0
HasValue
çç0 8
?
çç9 :
new
çç; >
DateTime
çç? G
(
ççG H
request
ççH O
.
ççO P
FromDate
ççP X
.
ççX Y
Value
ççY ^
.
çç^ _
Year
çç_ c
,
ççc d
request
ççe l
.
ççl m
FromDate
ççm u
.
ççu v
Value
ççv {
.
çç{ |
Monthçç| Å
,ççÅ Ç
requestççÉ ä
.ççä ã
FromDateççã ì
.ççì î
Valueççî ô
.ççô ö
Dayççö ù
)ççù û
.ççû ü
ToUniversalTimeççü Æ
(ççÆ Ø
)ççØ ∞
:
éé 
default
éé 
(
éé 
DateTime
éé "
?
éé" #
)
éé# $
;
éé$ %
request
èè 
.
èè 
ToDate
èè 
=
èè 
request
èè $
.
èè$ %
ToDate
èè% +
.
èè+ ,
HasValue
èè, 4
?
èè5 6
new
èè7 :
DateTime
èè; C
(
èèC D
request
èèD K
.
èèK L
ToDate
èèL R
.
èèR S
Value
èèS X
.
èèX Y
Year
èèY ]
,
èè] ^
request
èè_ f
.
èèf g
ToDate
èèg m
.
èèm n
Value
èèn s
.
èès t
Month
èèt y
,
èèy z
requestèè{ Ç
.èèÇ É
ToDateèèÉ â
.èèâ ä
Valueèèä è
.èèè ê
Dayèèê ì
)èèì î
.èèî ï
ToUniversalTimeèèï §
(èè§ •
)èè• ¶
.èè¶ ß
AddDaysèèß Æ
(èèÆ Ø
$numèèØ ∞
)èè∞ ±
:
êê 
default
êê 
(
êê 
DateTime
êê "
?
êê" #
)
êê# $
;
êê$ %
}
ëë 	
	protected
ôô 
async
ôô 
Task
ôô 
<
ôô 
string
ôô #
>
ôô# $
UploadFileAsync
ôô% 4
(
ôô4 5
	IFormFile
ôô5 >
file
ôô? C
,
ôôC D
string
ôôE K

folderPath
ôôL V
)
ôôV W
{
öö 	
if
õõ 
(
õõ 
file
õõ 
?
õõ 
.
õõ 
Length
õõ 
>
õõ 
$num
õõ  
)
õõ  !
{
úú 
string
ùù 
fileName
ùù 
=
ùù  !
await
ùù" '
CommonHelper
ùù( 4
.
ùù4 5
UploadFileAsync
ùù5 D
(
ùùD E

folderPath
ùùE O
,
ùùO P
file
ùùQ U
)
ùùU V
.
ùùV W
ConfigureAwait
ùùW e
(
ùùe f
false
ùùf k
)
ùùk l
;
ùùl m
if
ûû 
(
ûû 
!
ûû 
string
ûû 
.
ûû 
IsNullOrEmpty
ûû )
(
ûû) *
fileName
ûû* 2
)
ûû2 3
)
ûû3 4
{
üü 
string
†† 
filePath
†† #
=
††$ %
string
††& ,
.
††, -
Format
††- 3
(
††3 4
$str
††4 =
,
††= >

folderPath
††? I
,
††I J
fileName
††K S
)
††S T
;
††T U
return
°° 
filePath
°° #
;
°°# $
}
¢¢ 
else
££ 
{
§§ 
return
•• 
string
•• !
.
••! "
Empty
••" '
;
••' (
}
¶¶ 
}
ßß 
else
®® 
{
©© 
return
™™ 
string
™™ 
.
™™ 
Empty
™™ #
;
™™# $
}
´´ 
}
¨¨ 	
	protected
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
List
≥≥ !
<
≥≥! "
string
≥≥" (
>
≥≥( )
>
≥≥) *!
UploadListFileAsync
≥≥+ >
(
≥≥> ?
string
≥≥? E

folderPath
≥≥F P
)
≥≥P Q
{
¥¥ 	
List
µµ 
<
µµ 
string
µµ 
>
µµ 
result
µµ 
=
µµ  !
new
µµ" %
List
µµ& *
<
µµ* +
string
µµ+ 1
>
µµ1 2
(
µµ2 3
)
µµ3 4
;
µµ4 5
var
∂∂ 
files
∂∂ 
=
∂∂ 
HttpContext
∂∂ #
.
∂∂# $
Request
∂∂$ +
.
∂∂+ ,
Form
∂∂, 0
.
∂∂0 1
Files
∂∂1 6
;
∂∂6 7
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
file
∑∑ 
in
∑∑  
files
∑∑! &
)
∑∑& '
{
∏∏ 
string
ππ 
fileName
ππ 
=
ππ  !
await
ππ" '
UploadFileAsync
ππ( 7
(
ππ7 8
file
ππ8 <
,
ππ< =

folderPath
ππ> H
)
ππH I
.
ππI J
ConfigureAwait
ππJ X
(
ππX Y
false
ππY ^
)
ππ^ _
;
ππ_ `
if
∫∫ 
(
∫∫ 
!
∫∫ 
string
∫∫ 
.
∫∫ 
IsNullOrEmpty
∫∫ )
(
∫∫) *
fileName
∫∫* 2
)
∫∫2 3
)
∫∫3 4
{
ªª 
result
ºº 
.
ºº 
Add
ºº 
(
ºº 
fileName
ºº '
)
ºº' (
;
ºº( )
}
ΩΩ 
}
ææ 
return
øø 
result
øø 
;
øø 
}
¿¿ 	
}
¡¡ 
public
…… 

class
…… 
BaseApiController
…… "
<
……" #

TDbContext
……# -
,
……- .
TModel
……/ 5
,
……5 6
TView
……7 <
>
……< =
:
……> ?

Controller
……@ J
where
   

TDbContext
   
:
   
	DbContext
   $
where
ÀÀ 
TModel
ÀÀ 
:
ÀÀ 
class
ÀÀ 
where
ÃÃ 
TView
ÃÃ 
:
ÃÃ 
Swastika
ÃÃ 
.
ÃÃ 
Domain
ÃÃ %
.
ÃÃ% &
Data
ÃÃ& *
.
ÃÃ* +

ViewModels
ÃÃ+ 5
.
ÃÃ5 6
ViewModelBase
ÃÃ6 C
<
ÃÃC D

TDbContext
ÃÃD N
,
ÃÃN O
TModel
ÃÃP V
,
ÃÃV W
TView
ÃÃX ]
>
ÃÃ] ^
{
ÕÕ 
	protected
—— 
readonly
—— 
DefaultRepository
—— ,
<
——, -

TDbContext
——- 7
,
——7 8
TModel
——9 ?
,
——? @
TView
——A F
>
——F G
_repo
——H M
;
——M N
	protected
÷÷ 
string
÷÷ 
_lang
÷÷ 
;
÷÷ 
public
‹‹ 
BaseApiController
‹‹  
(
‹‹  !
)
‹‹! "
{
›› 	
_repo
ﬁﬁ 
=
ﬁﬁ 
DefaultRepository
ﬁﬁ %
<
ﬁﬁ% &

TDbContext
ﬁﬁ& 0
,
ﬁﬁ0 1
TModel
ﬁﬁ2 8
,
ﬁﬁ8 9
TView
ﬁﬁ: ?
>
ﬁﬁ? @
.
ﬁﬁ@ A
Instance
ﬁﬁA I
;
ﬁﬁI J
}
ﬂﬂ 	
public
ÈÈ 
override
ÈÈ $
BadRequestObjectResult
ÈÈ .

BadRequest
ÈÈ/ 9
(
ÈÈ9 :"
ModelStateDictionary
ÈÈ: N

modelState
ÈÈO Y
)
ÈÈY Z
{
ÍÍ 	
List
ÎÎ 
<
ÎÎ 
string
ÎÎ 
>
ÎÎ 
errors
ÎÎ 
=
ÎÎ  !
new
ÎÎ" %
List
ÎÎ& *
<
ÎÎ* +
string
ÎÎ+ 1
>
ÎÎ1 2
(
ÎÎ2 3
)
ÎÎ3 4
;
ÎÎ4 5
foreach
ÏÏ 
(
ÏÏ 
ModelStateEntry
ÏÏ $
state
ÏÏ% *
in
ÏÏ+ -
ViewData
ÏÏ. 6
.
ÏÏ6 7

ModelState
ÏÏ7 A
.
ÏÏA B
Values
ÏÏB H
)
ÏÏH I
{
ÌÌ 
foreach
ÓÓ 
(
ÓÓ 

ModelError
ÓÓ #
error
ÓÓ$ )
in
ÓÓ* ,
state
ÓÓ- 2
.
ÓÓ2 3
Errors
ÓÓ3 9
)
ÓÓ9 :
{
ÔÔ 
errors
 
.
 
Add
 
(
 
error
 $
.
$ %
ErrorMessage
% 1
)
1 2
;
2 3
}
ÒÒ 
}
ÚÚ 
var
ÛÛ 
result
ÛÛ 
=
ÛÛ 
	ApiHelper
ÛÛ "
<
ÛÛ" #
TView
ÛÛ# (
>
ÛÛ( )
.
ÛÛ) *
	GetResult
ÛÛ* 3
(
ÛÛ3 4
$num
ÛÛ4 5
,
ÛÛ5 6
default
ÛÛ7 >
(
ÛÛ> ?
TView
ÛÛ? D
)
ÛÛD E
,
ÛÛE F
nameof
ÛÛG M
(
ÛÛM N
Enums
ÛÛN S
.
ÛÛS T
ResponseKey
ÛÛT _
.
ÛÛ_ `

BadRequest
ÛÛ` j
)
ÛÛj k
,
ÛÛk l
errors
ÛÛm s
)
ÛÛs t
;
ÛÛt u
return
ÙÙ 
base
ÙÙ 
.
ÙÙ 

BadRequest
ÙÙ "
(
ÙÙ" #
result
ÙÙ# )
)
ÙÙ) *
;
ÙÙ* +
}
ıı 	
public
ˇˇ 
override
ˇˇ $
BadRequestObjectResult
ˇˇ .

BadRequest
ˇˇ/ 9
(
ˇˇ9 :
object
ˇˇ: @
error
ˇˇA F
)
ˇˇF G
{
ÄÄ 	
var
ÅÅ 
result
ÅÅ 
=
ÅÅ 
	ApiHelper
ÅÅ "
<
ÅÅ" #
TView
ÅÅ# (
>
ÅÅ( )
.
ÅÅ) *
	GetResult
ÅÅ* 3
(
ÅÅ3 4
$num
ÅÅ4 5
,
ÅÅ5 6
default
ÅÅ7 >
(
ÅÅ> ?
TView
ÅÅ? D
)
ÅÅD E
,
ÅÅE F
nameof
ÅÅG M
(
ÅÅM N
Enums
ÅÅN S
.
ÅÅS T
ResponseKey
ÅÅT _
.
ÅÅ_ `

BadRequest
ÅÅ` j
)
ÅÅj k
,
ÅÅk l
null
ÅÅm q
)
ÅÅq r
;
ÅÅr s
return
ÇÇ 
base
ÇÇ 
.
ÇÇ 

BadRequest
ÇÇ "
(
ÇÇ" #
result
ÇÇ# )
)
ÇÇ) *
;
ÇÇ* +
}
ÉÉ 	
public
çç 
override
çç "
NotFoundObjectResult
çç ,
NotFound
çç- 5
(
çç5 6
object
çç6 <
value
çç= B
)
ççB C
{
éé 	
var
èè 
result
èè 
=
èè 
	ApiHelper
èè "
<
èè" #
TView
èè# (
>
èè( )
.
èè) *
	GetResult
èè* 3
(
èè3 4
$num
èè4 5
,
èè5 6
default
èè7 >
(
èè> ?
TView
èè? D
)
èèD E
,
èèE F
nameof
èèG M
(
èèM N
Enums
èèN S
.
èèS T
ResponseKey
èèT _
.
èè_ `
NotFound
èè` h
)
èèh i
,
èèi j
null
èèk o
)
èèo p
;
èèp q
return
êê 
base
êê 
.
êê 
NotFound
êê  
(
êê  !
result
êê! '
)
êê' (
;
êê( )
}
ëë 	
public
óó 
override
óó 
void
óó 
OnActionExecuting
óó .
(
óó. /$
ActionExecutingContext
óó/ E
context
óóF M
)
óóM N
{
òò 	
GetLanguage
ôô 
(
ôô 
)
ôô 
;
ôô 
base
öö 
.
öö 
OnActionExecuting
öö "
(
öö" #
context
öö# *
)
öö* +
;
öö+ ,
}
õõ 	
	protected
££ 
IActionResult
££ 
GetErrorResult
££  .
(
££. /
string
££/ 5
responseKey
££6 A
,
££A B
string
££C I
errorMsg
££J R
)
££R S
{
§§ 	
var
•• 
result
•• 
=
•• 
	ApiHelper
•• "
<
••" #
TView
••# (
>
••( )
.
••) *
	GetResult
••* 3
(
••3 4
$num
••4 5
,
••5 6
default
••7 >
(
••> ?
TView
••? D
)
••D E
,
••E F
responseKey
••G R
,
••R S
null
••T X
)
••X Y
;
••Y Z
return
¶¶ 

BadRequest
¶¶ 
(
¶¶ 
result
¶¶ $
)
¶¶$ %
;
¶¶% &
}
ßß 	
	protected
¨¨ 
void
¨¨ 
GetLanguage
¨¨ "
(
¨¨" #
)
¨¨# $
{
≠≠ 	
_lang
ÆÆ 
=
ÆÆ 
	RouteData
ÆÆ 
?
ÆÆ 
.
ÆÆ 
Values
ÆÆ %
[
ÆÆ% &
$str
ÆÆ& /
]
ÆÆ/ 0
!=
ÆÆ1 3
null
ÆÆ4 8
?
ØØ 
	RouteData
ØØ 
.
ØØ 
Values
ØØ "
[
ØØ" #
$str
ØØ# ,
]
ØØ, -
.
ØØ- .
ToString
ØØ. 6
(
ØØ6 7
)
ØØ7 8
:
ØØ9 :(
GlobalConfigurationService
ØØ; U
.
ØØU V
Instance
ØØV ^
.
ØØ^ _
CmsConfigurations
ØØ_ p
.
ØØp q
Language
ØØq y
;
ØØy z
ViewBag
∞∞ 
.
∞∞ 
culture
∞∞ 
=
∞∞ 
_lang
∞∞ #
;
∞∞# $
}
±± 	
	protected
ππ 
IActionResult
ππ 
GetSuccessResult
ππ  0
<
ππ0 1
TResult
ππ1 8
>
ππ8 9
(
ππ9 :
TResult
ππ: A
data
ππB F
)
ππF G
{
∫∫ 	
var
ªª 
result
ªª 
=
ªª 
	ApiHelper
ªª "
<
ªª" #
TResult
ªª# *
>
ªª* +
.
ªª+ ,
	GetResult
ªª, 5
(
ªª5 6
$num
ªª6 7
,
ªª7 8
data
ªª9 =
,
ªª= >
nameof
ªª? E
(
ªªE F
Enums
ªªF K
.
ªªK L
ResponseKey
ªªL W
.
ªªW X
OK
ªªX Z
)
ªªZ [
,
ªª[ \
null
ªª] a
)
ªªa b
;
ªªb c
return
ºº 
Ok
ºº 
(
ºº 
result
ºº 
)
ºº 
;
ºº 
}
ΩΩ 	
	protected
øø 
void
øø $
ParseRequestPagingDate
øø -
(
øø- .
RequestPaging
øø. ;
request
øø< C
)
øøC D
{
¿¿ 	
request
¡¡ 
.
¡¡ 
FromDate
¡¡ 
=
¡¡ 
request
¡¡ &
.
¡¡& '
FromDate
¡¡' /
.
¡¡/ 0
HasValue
¡¡0 8
?
¡¡9 :
new
¡¡; >
DateTime
¡¡? G
(
¡¡G H
request
¡¡H O
.
¡¡O P
FromDate
¡¡P X
.
¡¡X Y
Value
¡¡Y ^
.
¡¡^ _
Year
¡¡_ c
,
¡¡c d
request
¡¡e l
.
¡¡l m
FromDate
¡¡m u
.
¡¡u v
Value
¡¡v {
.
¡¡{ |
Month¡¡| Å
,¡¡Å Ç
request¡¡É ä
.¡¡ä ã
FromDate¡¡ã ì
.¡¡ì î
Value¡¡î ô
.¡¡ô ö
Day¡¡ö ù
)¡¡ù û
.¡¡û ü
ToUniversalTime¡¡ü Æ
(¡¡Æ Ø
)¡¡Ø ∞
:
¬¬ 
default
¬¬ 
(
¬¬ 
DateTime
¬¬ "
?
¬¬" #
)
¬¬# $
;
¬¬$ %
request
√√ 
.
√√ 
ToDate
√√ 
=
√√ 
request
√√ $
.
√√$ %
ToDate
√√% +
.
√√+ ,
HasValue
√√, 4
?
√√5 6
new
√√7 :
DateTime
√√; C
(
√√C D
request
√√D K
.
√√K L
ToDate
√√L R
.
√√R S
Value
√√S X
.
√√X Y
Year
√√Y ]
,
√√] ^
request
√√_ f
.
√√f g
ToDate
√√g m
.
√√m n
Value
√√n s
.
√√s t
Month
√√t y
,
√√y z
request√√{ Ç
.√√Ç É
ToDate√√É â
.√√â ä
Value√√ä è
.√√è ê
Day√√ê ì
)√√ì î
.√√î ï
ToUniversalTime√√ï §
(√√§ •
)√√• ¶
.√√¶ ß
AddDays√√ß Æ
(√√Æ Ø
$num√√Ø ∞
)√√∞ ±
:
ƒƒ 
default
ƒƒ 
(
ƒƒ 
DateTime
ƒƒ "
?
ƒƒ" #
)
ƒƒ# $
;
ƒƒ$ %
}
∆∆ 	
}
«« 
}»» ò	
:G:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Program.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
BuildWebHost 
( 
args 
) 
. 
Run "
(" #
)# $
;$ %
} 	
public 
static 
IWebHost 
BuildWebHost +
(+ ,
string, 2
[2 3
]3 4
args5 9
)9 :
=>; =
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
. 
Build 
( 
) 
; 
} 
} —
:G:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\Startup.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Web 
{ 
public 

partial 
class 
Startup  
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 

AddMvcCore 
(  
)  !
. 
AddAuthorization !
(! "
)" #
. 
AddJsonFormatters "
(" #
)# $
;$ %
services 
. 
AddAuthentication &
(& '
$str' /
)/ 0
;0 1
} 	
public   
void   
	Configure   
(   
IApplicationBuilder   1
app  2 5
)  5 6
{!! 	
app"" 
."" 
UseAuthentication"" !
(""! "
)""" #
;""# $
app$$ 
.$$ 
UseMvc$$ 
($$ 
routes$$ 
=>$$  
{%% 
routes&& 
.&& 
MapRoute&& 
(&&  
name'' 
:'' 
$str'' $
,''$ %
template(( 
:(( 
$str(( -
+((. /&
GlobalConfigurationService((0 J
.((J K
Instance((K S
.((S T
CmsConfigurations((T e
.((e f
Language((f n
+((o p
$str	((q •
)
((• ¶
;
((¶ ß
})) 
))) 
;)) 
}** 	
}++ 
},, ∑
JG:\_github\Swastika-IO-Core\src\Swastka.Cms.Api\App_Start\Startup.Auth.txt
	namespace

 	
Swastka


 
.

 
Cms

 
.

 
Api

 
{ 
public 

partial 
class 
Startup  
{ 
public 
static 
void 
ConfigureApi '
(' (
IServiceCollection 
services '
)' (
{ 	
services 
. 
AddAuthentication &
(& '
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
. 
AddJwtBearer !
(! "
options" )
=>* ,
{ 
options 
.  %
TokenValidationParameters  9
=: ;
new  %
TokenValidationParameters! :
{ 
ValidateIssuer! /
=0 1
true2 6
,6 7
ValidateAudience! 1
=2 3
true4 8
,8 9
ValidateLifetime! 1
=2 3
true4 8
,8 9$
ValidateIssuerSigningKey! 9
=: ;
true< @
,@ A
ValidIssuer! ,
=- .
$str/ I
,I J
ValidAudience! .
=/ 0
$str1 K
,K L
IssuerSigningKey! 1
=2 3
JwtSecurityKey" 0
.0 1
Create1 7
(7 8
$str8 H
)H I
}   
;   
}!! 
)!! 
;!! 
}$$ 	
}.. 
public00 

static00 
class00 
JwtSecurityKey00 &
{11 
public22 
static22  
SymmetricSecurityKey22 *
Create22+ 1
(221 2
string222 8
secret229 ?
)22? @
{33 	
return44 
new44  
SymmetricSecurityKey44 +
(44+ ,
Encoding44, 4
.444 5
ASCII445 :
.44: ;
GetBytes44; C
(44C D
secret44D J
)44J K
)44K L
;44L M
}55 	
}66 
}77 